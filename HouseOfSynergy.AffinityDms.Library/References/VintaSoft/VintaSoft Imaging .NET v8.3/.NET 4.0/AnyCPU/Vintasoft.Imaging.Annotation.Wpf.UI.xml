<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Vintasoft.Imaging.Annotation.Wpf.UI</name>
    </assembly>
    <members>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController">
            <summary>
            Stores one-to-one links between
            one <see cref="T:Vintasoft.Imaging.Annotation.AnnotationDataCollection" /> from the <see cref="T:Vintasoft.Imaging.Annotation.AnnotationDataController" /> and
            one <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection" />.
            </summary>
            <example>This example shows how to burn annotations on image.
            <code lang="VB.NET">
            ' Create the image collection and add images to collection.
            Dim imageCollection As New ImageCollection()
            imageCollection.Add("D:\Images\AutoContrast.jpg")
            imageCollection.Add("D:\Images\AutoColors.jpg")
            
            ' Create annotation controllers associated with image collection.
            Dim annotationDataController As New AnnotationDataController(imageCollection)
            Dim wpfAnnotationViewController As New WpfAnnotationViewController(annotationDataController)
            
            ' Create a data of rectangle annotation.
            Dim rectangleAnnotationData As New RectangleAnnotationData()
            rectangleAnnotationData.Location = New PointF(340, 150)
            rectangleAnnotationData.Size = New SizeF(220, 150)
            ' Create a view of rectangle annotation.
            Dim wpfRectangleAnnotationView As New WpfRectangleAnnotationView(rectangleAnnotationData)
            ' Add the rectangle annotation to the annotation controller.
            wpfAnnotationViewController(0).Add(wpfRectangleAnnotationView)
            
            ' Burn annotation collection on the first image.
            wpfAnnotationViewController.BurnAnnotationCollectionOnImage(0)
            
            ' Save image collection to TIFF file.
            imageCollection.SaveSync("D:\ImageCollection.tif", True)
            </code>
            <code lang="C#">
            // Create the image collection and add images to collection.
            ImageCollection imageCollection = new ImageCollection();
            imageCollection.Add(@"D:\Images\AutoContrast.jpg");
            imageCollection.Add(@"D:\Images\AutoColors.jpg");
            
            // Create annotation controllers associated with image collection.
            AnnotationDataController annotationDataController = new AnnotationDataController(imageCollection);
            WpfAnnotationViewController wpfAnnotationViewController = new WpfAnnotationViewController(annotationDataController);
            
            // Create a data of rectangle annotation.
            RectangleAnnotationData rectangleAnnotationData = new RectangleAnnotationData();
            rectangleAnnotationData.Location = new PointF(340, 150);
            rectangleAnnotationData.Size = new SizeF(220, 150);
            // Create a view of rectangle annotation.
            WpfRectangleAnnotationView wpfRectangleAnnotationView = new WpfRectangleAnnotationView(rectangleAnnotationData);
            // Add the rectangle annotation to the annotation controller.
            wpfAnnotationViewController[0].Add(wpfRectangleAnnotationView);
            
            // Burn annotation collection on the first image.
            wpfAnnotationViewController.BurnAnnotationCollectionOnImage(0);
            
            // Save image collection to TIFF file.
            imageCollection.SaveSync(@"D:\ImageCollection.tif", true);
            </code>
            </example>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.#ctor(Vintasoft.Imaging.Annotation.AnnotationDataController)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController" /> class.
            </summary>
            <param name="dataController">An <see cref="T:Vintasoft.Imaging.Annotation.AnnotationDataController" /> object with
            which controller must be associated.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if
            <i>dataController</i> is <b>null</b>.</exception>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.GetAnnotationsView(System.Int32)">
            <summary>
            Returns an <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection" /> for
            image specified by index.
            </summary>
            <param name="index">Index of image in the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.Images" />.</param>
            <returns>The <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection" /> for image.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <i>index</i> is less than zero
            <b>-or-</b> <i>index</i> is equal to or greater than images count.</exception>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.GetAnnotationsView(Vintasoft.Imaging.VintasoftImage)">
            <summary>
            Returns an <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection" /> for
            specified image.
            </summary>
            <param name="image">The image from <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.Images" />.</param>
            <returns>The <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection" /> for image.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.GetAnnotationsView(Vintasoft.Imaging.Annotation.AnnotationDataCollection)">
            <summary>
            Returns an <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection" /> for
            specified <see cref="T:Vintasoft.Imaging.Annotation.AnnotationDataCollection" />.
            </summary>
            <param name="dataCollection">The annotations data collection.</param>
            <returns>The <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection" /> for
            <see cref="T:Vintasoft.Imaging.Annotation.AnnotationDataCollection" />.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.GetImageWithAnnotations(System.Int32)">
            <summary>
            Returns cloned image with annotations.
            </summary>
            <param name="index">Index of image in the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.Images" />.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if <i>index</i> is less than zero
            <b>-or-</b> <i>index</i> is equal to or greater than images count.</exception>
            <remarks>
            This methods creates a clone of image, burns annotations on image
            and returns the result image.
            </remarks>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.BurnAnnotationCollectionOnImages(Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection)">
            <summary>
            Burns the specified annotation collection on each image from the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.Images" />,
            disposes annotations of images and
            clears the annotation collection of images.
            </summary>
            <param name="annotations">Collection of annotations which must be drawn on
            each image of the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.Images" /> collection.</param>
            <remarks>
            This method does not clear collections of annotations associated
            with images in the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.Images" /> collection.
            </remarks>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.BurnAnnotationCollectionOnImage(System.Int32)">
            <summary>
            Burns an annotation collection on image,
            disposes annotations of image and
            clears the annotation collection of image.
            </summary>
            <param name="index">Index of image in the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.Images" />.</param>
            <example>This example shows how to burn annotations on image.
            <code lang="VB.NET">
            ' Create the image collection and add images to collection.
            Dim imageCollection As New ImageCollection()
            imageCollection.Add("D:\Images\AutoContrast.jpg")
            imageCollection.Add("D:\Images\AutoColors.jpg")
            
            ' Create annotation controllers associated with image collection.
            Dim annotationDataController As New AnnotationDataController(imageCollection)
            Dim wpfAnnotationViewController As New WpfAnnotationViewController(annotationDataController)
            
            ' Create a data of rectangle annotation.
            Dim rectangleAnnotationData As New RectangleAnnotationData()
            rectangleAnnotationData.Location = New PointF(340, 150)
            rectangleAnnotationData.Size = New SizeF(220, 150)
            ' Create a view of rectangle annotation.
            Dim wpfRectangleAnnotationView As New WpfRectangleAnnotationView(rectangleAnnotationData)
            ' Add the rectangle annotation to the annotation controller.
            wpfAnnotationViewController(0).Add(wpfRectangleAnnotationView)
            
            ' Burn annotation collection on the first image.
            wpfAnnotationViewController.BurnAnnotationCollectionOnImage(0)
            
            ' Save image collection to TIFF file.
            imageCollection.SaveSync("D:\ImageCollection.tif", True)
            </code>
            <code lang="C#">
            // Create the image collection and add images to collection.
            ImageCollection imageCollection = new ImageCollection();
            imageCollection.Add(@"D:\Images\AutoContrast.jpg");
            imageCollection.Add(@"D:\Images\AutoColors.jpg");
            
            // Create annotation controllers associated with image collection.
            AnnotationDataController annotationDataController = new AnnotationDataController(imageCollection);
            WpfAnnotationViewController wpfAnnotationViewController = new WpfAnnotationViewController(annotationDataController);
            
            // Create a data of rectangle annotation.
            RectangleAnnotationData rectangleAnnotationData = new RectangleAnnotationData();
            rectangleAnnotationData.Location = new PointF(340, 150);
            rectangleAnnotationData.Size = new SizeF(220, 150);
            // Create a view of rectangle annotation.
            WpfRectangleAnnotationView wpfRectangleAnnotationView = new WpfRectangleAnnotationView(rectangleAnnotationData);
            // Add the rectangle annotation to the annotation controller.
            wpfAnnotationViewController[0].Add(wpfRectangleAnnotationView);
            
            // Burn annotation collection on the first image.
            wpfAnnotationViewController.BurnAnnotationCollectionOnImage(0);
            
            // Save image collection to TIFF file.
            imageCollection.SaveSync(@"D:\ImageCollection.tif", true);
            </code>
            </example>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.BurnAnnotationCollectionOnImage(Vintasoft.Imaging.VintasoftImage)">
            <summary>
            Burns an annotation collection on image,
            disposes annotations of image and
            clears the annotation collection of image.
            </summary>
            <param name="image">The image from <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.Images" />.</param>
            <example>This example shows how to burn annotations on image.
            <code lang="VB.NET">
            ' Create the image collection and add images to collection.
            Dim imageCollection As New ImageCollection()
            imageCollection.Add("D:\Images\AutoContrast.jpg")
            imageCollection.Add("D:\Images\AutoColors.jpg")
            
            ' Create annotation controllers associated with image collection.
            Dim annotationDataController As New AnnotationDataController(imageCollection)
            Dim wpfAnnotationViewController As New WpfAnnotationViewController(annotationDataController)
            
            ' Create a data of rectangle annotation.
            Dim rectangleAnnotationData As New RectangleAnnotationData()
            rectangleAnnotationData.Location = New PointF(340, 150)
            rectangleAnnotationData.Size = New SizeF(220, 150)
            ' Create a view of rectangle annotation.
            Dim wpfRectangleAnnotationView As New WpfRectangleAnnotationView(rectangleAnnotationData)
            ' Add the rectangle annotation to the annotation controller.
            wpfAnnotationViewController(0).Add(wpfRectangleAnnotationView)
            
            ' Burn annotation collection on the first image.
            wpfAnnotationViewController.BurnAnnotationCollectionOnImage(0)
            
            ' Save image collection to TIFF file.
            imageCollection.SaveSync("D:\ImageCollection.tif", True)
            </code>
            <code lang="C#">
            // Create the image collection and add images to collection.
            ImageCollection imageCollection = new ImageCollection();
            imageCollection.Add(@"D:\Images\AutoContrast.jpg");
            imageCollection.Add(@"D:\Images\AutoColors.jpg");
            
            // Create annotation controllers associated with image collection.
            AnnotationDataController annotationDataController = new AnnotationDataController(imageCollection);
            WpfAnnotationViewController wpfAnnotationViewController = new WpfAnnotationViewController(annotationDataController);
            
            // Create a data of rectangle annotation.
            RectangleAnnotationData rectangleAnnotationData = new RectangleAnnotationData();
            rectangleAnnotationData.Location = new PointF(340, 150);
            rectangleAnnotationData.Size = new SizeF(220, 150);
            // Create a view of rectangle annotation.
            WpfRectangleAnnotationView wpfRectangleAnnotationView = new WpfRectangleAnnotationView(rectangleAnnotationData);
            // Add the rectangle annotation to the annotation controller.
            wpfAnnotationViewController[0].Add(wpfRectangleAnnotationView);
            
            // Burn annotation collection on the first image.
            wpfAnnotationViewController.BurnAnnotationCollectionOnImage(0);
            
            // Save image collection to TIFF file.
            imageCollection.SaveSync(@"D:\ImageCollection.tif", true);
            </code>
            </example>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController" />.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.Images">
            <summary>
            Gets the <see cref="T:Vintasoft.Imaging.ImageCollection" /> associated with
            this <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController" />.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.DataController">
            <summary>
            Gets the <see cref="T:Vintasoft.Imaging.Annotation.AnnotationDataController" /> associated with
            this <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController" />.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection" /> object at the specified index.
            </summary>
            <param name="index">The zero-based index of the <see cref="T:Vintasoft.Imaging.Annotation.AnnotationDataCollection" /> to find.</param>
            <returns>The <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection" /> object at the specified index.</returns>
            <seealso cref="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewController.GetAnnotationsView(System.Int32)" />
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection">
            <summary>
            Represents a collection of <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView" />.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection.#ctor(Vintasoft.Imaging.Annotation.AnnotationDataCollection)">
            <summary>
            Initializes a new instance of <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection" /> class.
            </summary>
            <param name="dataCollection">The annotation data collection that associated
            with the view collection.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection.ToArray">
            <summary>
            Copies the elements of <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection" /> to a new array.
            </summary>
            <returns>An array containing elements
            of <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection" />.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection.FindView(Vintasoft.Imaging.Annotation.AnnotationData)">
            <summary>
            Finds an annotation view for specified annotation data.
            </summary>
            <param name="data">The annotation data to search.</param>
            <returns>
            Annotation view for specified annotation data if annotation data exists;
            <b>null</b>, otherwise.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection.Draw(Vintasoft.Imaging.VintasoftImage,Vintasoft.Imaging.VintasoftImage)">
            <summary>
            Draws the annotations of the collection on specified image.
            </summary>
            <param name="image">The <see cref="T:Vintasoft.Imaging.VintasoftImage" /> on which annotations
            should be drawn.</param>
            <param name="backgroundImage">The <see cref="T:Vintasoft.Imaging.VintasoftImage" /> that
            defines annotations background.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection.Draw(Vintasoft.Imaging.VintasoftImage,Vintasoft.Imaging.VintasoftImage,System.Windows.Media.Matrix)">
            <summary>
            Draws the annotations of the collection on specified image.
            </summary>
            <param name="image">The <see cref="T:Vintasoft.Imaging.VintasoftImage" /> on which annotations
            should be drawn.</param>
            <param name="backgroundImage">The <see cref="T:Vintasoft.Imaging.VintasoftImage" /> that
            defines annotations background.</param>
            <param name="transform">The transformation matrix.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection.Render(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Renders the annotations of the collection on specified drawing context
            with specified drawing surface.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection.ClearAndDisposeItems">
            <summary>
            Removes and disposes all elements of the collection.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection" />.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection.ClearItems">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection.InsertItem(System.Int32,Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView)">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <param name="index">The object to insert.</param>
            <param name="item">The zero-based index at which item should be inserted.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index at which item should be removed.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection.SetItem(System.Int32,Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">The new value for the element at the specified index.</param>
            <param name="item">The zero-based index of the element to replace.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection.DataCollection">
            <summary>
            Gets the annotation data collection that associated with this annotation view collection.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStickyNoteAnnotationView">
            <summary>
            Determines how to display the annotation that displays a sticky note
            and how user can interact with annotation.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfCompositeAnnotationView">
            <summary>
            Provides the abstract base class that determines how to display an annotation
            that contains a group of annotations
            and how user can interact with annotation.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView">
            <summary>
            Provides the abstract base class that determines how to display an annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.#ctor(Vintasoft.Imaging.Annotation.AnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView" /> class.
            </summary>
            <param name="data">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Finalize">
            <summary>
            Allows an annotation to attempt to free resources and perform other
            cleanup operations before the annotation is reclaimed by garbage
            collection.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.ToString">
            <summary>
            Returns the string representation of this object.
            </summary>
            <returns>String representation of this object.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Render(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Renders the annotation on the specified <see cref="T:System.Windows.Media.DrawingContext" />. 
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.GetSelectionBox">
            <summary>
            Returns the selection box of annotation.
            </summary>
            <returns>Selection box of annotation.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.GetTransformFromContentSpace(Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Returns a matrix that transforms the annotation from the content space to
            the drawing surface space. 
            </summary>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>        /// <returns />
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.IsPointOnFigure(System.Windows.Point)">
            <summary>
            Indicates whether the specified point is contained within the annotation.
            </summary>
            <param name="point">Point in image space.</param>
            <returns><b>true</b> if the specified point is contained within the annotation;
            otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.GetTransformFromContentToImageSpace">
            <summary>
            Returns the matrix that transforms the annotation from the content space to the image space.
            </summary>
            <returns>The matrix that transforms the annotation from the content space to
            the image space.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Dispose">
            <summary>
            Releases all resources used by this <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView" /> object.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.GetPointTransform(Vintasoft.Imaging.Wpf.UI.WpfImageViewer)">
            <summary>
            Returns a point transformation of the annotation for specified <see cref="T:Vintasoft.Imaging.Wpf.UI.WpfImageViewer" />.
            </summary>
            <param name="viewer">An image viewer.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.GetBoundingBox">
            <summary>
            Returns a bounding box, in the image space, of annotation.
            </summary>
            <returns>Bounding box, in the image space, of annotaion.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.GetAuthorBoundingBox">
            <summary>
            Returns an author bounding box, in the image space, of annotation.
            </summary>
            <returns>An author bounding box, in the image space, of annotation.</returns>
            <remarks>
            The author bounding box is used when annotation is transforming, also
            it is used when annotation is selected.<br />
            <br />
            In most cases the author bounding box matches the bounding box of annotation.
            The author can override this method and change the author bounding box if necessary,
            for example, bounding box can be inflated.
            </remarks>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.GetAuthorBoundingBox(System.Windows.Point,System.Windows.Size,System.Double)">
            <summary>
            Returns an author bounding box, in the image space, of annotation.
            </summary>
            <param name="location">Location, in device-independent pixels (1/96th inch),
            of annotation.</param>
            <param name="size">Size, in device-independent pixels (1/96th inch),
            of annotation</param>
            <param name="rotation">Rotation, in degrees, of annotation.</param>
            <returns>An author bounding box, in the image space, of annotation.</returns>
            <remarks>
            The author bounding box is used when annotation is transforming, also
            it is used when annotation is selected.<br />
            <br />
            In most cases the author bounding box matches the bounding box of annotation.
            The author can override this method and change the author bounding box if necessary,
            for example, bounding box can be inflated.
            </remarks>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Renders the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView" />.
            </summary>
            <param name="drawingContext">An instance of <see cref="T:System.Windows.Media.DrawingContext" />
            used to render the control.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.TransformFromContentSpaceToImageSpace(System.Windows.Media.Matrix)">
            <summary>
            Transforms the matrix from the annotation's content space to the image space.
            </summary>
            <param name="matrix">The matrix to transform.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.RenderInSurfaceSpace(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Renders the annotation on the <see cref="T:System.Windows.Media.DrawingContext" />
            in the coordinate space of drawing surface.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.RenderInContentSpace(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Renders the annotation on the <see cref="T:System.Windows.Media.DrawingContext" />
            in the coordinate space of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.GetSelectionAsGeometry">
            <summary>
            Returns an annotation selection as <see cref="T:System.Windows.Media.Geometry" /> in the image space. 
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.OnRendering(Vintasoft.Imaging.Annotation.Wpf.UI.RenderWpfAnnotationViewEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Rendering" /> event. 
            Invoked when the annotation is rendering.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.OnRendered(Vintasoft.Imaging.Annotation.Wpf.UI.RenderWpfAnnotationViewEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Rendered" /> event. 
            Invoked when the annotation is rendered.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.SetInteractionControllerProperties(Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.IWpfInteractionController)">
            <summary>
            Sets the properties of interaction controller according to the properties of annotation.
            </summary>
            <param name="controller">The interaction controller.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.HitTestCore(System.Windows.Media.PointHitTestParameters)">
            <summary>
            Implements
            <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
            to supply base element hit testing behavior (returning
            <see cref="T:System.Windows.Media.HitTestResult" />). 
            </summary>
            <param name="hitTestParameters">Describes the hit test to perform,
            including the initial hit point.</param>
            <returns>Results of the test, including the evaluated point.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.OnStateChanged">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.StateChanged" /> event. 
            Invoked when the state of annotation is changed.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.OnDataPropertyChanged(Vintasoft.Imaging.ObjectPropertyChangedEventArgs)">
            <summary>
            Invoked when the property of annotation data is changed.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.ObjectPropertyChangedEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.GetParentImageViewer">
            <summary>
            Returns the <see cref="T:Vintasoft.Imaging.Wpf.UI.WpfImageViewer" /> where the annotation view is located.
            </summary>
            <returns>
            An instance of the <see cref="T:Vintasoft.Imaging.Wpf.UI.WpfImageViewer" /> where the annotation view is located
            if <see cref="T:Vintasoft.Imaging.Wpf.UI.WpfImageViewer" /> is found;
            otherwise, <b>null</b>.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.GetParentAnnotationVisualTool">
            <summary>
            Returns the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool" /> that manipulates the annotation view.
            </summary>
            <returns>
            An instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool" /> that manipulates the annotation view
            if <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool" /> is found;
            otherwise, <b>null</b>.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the annotation and
            optionally releases the managed resources.
            </summary>
            <param name="disposing"><b>true</b> to release both managed and
            unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Data">
            <summary>
            Gets the annotation data.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Builder">
            <summary>
            Gets or sets a transformer used for building of the annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Transformer">
            <summary>
            Gets or sets a transformer used for transforming (moving/resizing/rotating/...)
            of the annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.InteractionController">
            <summary>
            Gets or sets an interaction controller of rectangular selection.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Name">
            <summary>
            Gets or sets the name of annotation.
            </summary>
            <exception cref="T:System.ArgumentNullException">Thrown if <i>name</i> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if length of <i>name</i> is more
            than 256 symbols.</exception>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.CreationTime">
            <summary>
            Gets or sets the creation time of annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.ModifiedTime">
            <summary>
            Gets or sets the last time this annotation was modified.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.CreatedBy">
            <summary>
            Gets or sets information about the user who created the annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.ModifiedBy">
            <summary>
            Gets or sets information about the user who modified the annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Location">
            <summary>
            Gets or sets the location, in device-independent pixels (1/96th inch),
            of annotation in the image space.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Size">
            <summary>
            Gets or sets the size, in device-independent pixels (1/96th inch), of the annotation.
            </summary>
            <seealso cref="P:Vintasoft.Imaging.Annotation.AnnotationData.Resizeable" />
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Rotation">
            <summary>
            Gets or sets the current amount of rotation, in degrees, for this annotation.
            </summary>
            <value>Default value is 0.</value>
            <seealso cref="P:Vintasoft.Imaging.Annotation.AnnotationData.Rotatable" />
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Border">
            <summary>
            Gets or sets a value indicating whether the annotation border is visible.
            </summary>
            <value>
            <b>true</b> - border is visible;
            <b>false</b> - border is not visible.
            Default value is <b>false</b>.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Outline">
            <summary>
            Gets or sets the style of the annotation's outline.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.FillBrush">
            <summary>
            Gets or sets the background brush of annotation.
            </summary>
            <value>
            Default value is <b>null</b> (annotation is not filled).
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.IsVisible">
            <summary>
            Gets or sets a value indicating whether the annotation is visible.
            </summary>
            <value>This is a runtime property.</value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.ToolTip">
            <summary>
            Gets or sets the tooltip associated with the annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.HorizontalMirrored">
            <summary>
            Gets or sets a value indicating whether the annotation is mirrored horizontally.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.VerticalMirrored">
            <summary>
            Gets or sets a value indicating whether the annotation is mirrored vertically.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.CanMove">
            <summary>
            Gets or sets a value indicating whether the annotation can be moved.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.CanRotate">
            <summary>
            Gets or sets a value indicating whether the annotation can be rotated.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.CanResize">
            <summary>
            Gets or sets a value indicating whether the size of the annotation
            can be changed.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.CanMirror">
            <summary>
            Gets or sets a value indicating whether the annotation can be mirrored.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.ContextMenu">
            <summary>
            Gets or sets the context menu element that should appear whenever 
            the context menu is requested via user interface (UI) from within this annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.IsReadyForDrawing">
            <summary>
            Gets a value indicating whether this annotation is ready for drawing, for example,
            line annotation has points.
            </summary>
            <value>
            <b>true</b> - annotation is ready for drawing (in annotated thumbnail viewer);
            <b>false</b> - annotation is not ready for drawing.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.IsDisposed">
            <summary>
            Gets a value indicating whether this annotation has been disposed of.
            </summary>
            <value>
            <b>true</b> if the annotation has been disposed of;
            otherwise, <b>false</b>.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.IsSelected">
            <summary>
            Gets a value indicating whether the annotation is selected.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.SelectionPen">
            <summary>
            Gets the <see cref="T:System.Windows.Media.Pen" /> that used for drawing of annotation's selection.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.SelectionBrush">
            <summary>
            Gets the <see cref="T:System.Windows.Media.Brush" /> that used for filling of annotation's selection.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Rendering">
            <summary>
            Occurs when the annotation is rendering.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Rendered">
            <summary>
            Occurs when the annotation is rendered.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.StateChanged">
            <summary>
            Occurs when the state of annotation is changed.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfCompositeAnnotationView.#ctor(Vintasoft.Imaging.Annotation.CompositeAnnotationData,System.Collections.Generic.IList{Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView})">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfCompositeAnnotationView" /> class.
            </summary>
            <param name="data">Object that stores the annotation data.</param>
            <param name="items">Annotation collection for this annotation.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfCompositeAnnotationView.IsPointOnFigure(System.Windows.Point)">
            <summary>
            Indicates whether the specified point is contained within the annotation.
            </summary>
            <param name="point">Point in image space.</param>
            <returns><b>true</b> if the specified point is contained within the annotation;
            otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfCompositeAnnotationView.FindView(Vintasoft.Imaging.Annotation.AnnotationData)">
            <summary>
            Finds an <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView" /> for specified <see cref="T:Vintasoft.Imaging.Annotation.AnnotationData" />.
            </summary>
            <param name="data">The <see cref="T:Vintasoft.Imaging.Annotation.AnnotationData" /> to search.</param>
            <returns><see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView" /> for specified <see cref="T:Vintasoft.Imaging.Annotation.AnnotationData" />.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfCompositeAnnotationView.RenderInSurfaceSpace(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Renders the annotation on the <see cref="T:System.Windows.Media.DrawingContext" />
            in the coordinate space of drawing surface.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfCompositeAnnotationView.SetInteractionControllerProperties(Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.IWpfInteractionController)">
            <summary>
            Sets the properties of interaction controller according to the properties of annotation.
            </summary>
            <param name="controller">The interaction controller.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfCompositeAnnotationView.IsReadyForDrawing">
            <summary>
            Gets a value indicating whether this annotation is ready for drawing, for example,
            line annotation has points.
            </summary>
            <value>
            <b>true</b> - annotation is ready for drawing (in annotated thumbnail viewer);
            <b>false</b> - annotation is not ready for drawing.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfCompositeAnnotationView.InteractionController">
            <summary>
            Gets or sets an interaction controller of rectangular selection.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStickyNoteAnnotationView.#ctor(Vintasoft.Imaging.Annotation.StickyNoteAnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStickyNoteAnnotationView" /> class.
            </summary>
            <param name="data">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStickyNoteAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current 
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStickyNoteAnnotationView" /> instance.
            </summary>
            <returns>A new object that is a copy of this <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStickyNoteAnnotationView" />
            instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStickyNoteAnnotationView.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the user clicks down on the annotation.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStickyNoteAnnotationView.SetInteractionControllerProperties(Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.IWpfInteractionController)">
            <summary>
            Sets the properties of interaction controller according to the properties of annotation.
            </summary>
            <param name="controller">The interaction controller.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStickyNoteAnnotationView.OnDataPropertyChanged(Vintasoft.Imaging.ObjectPropertyChangedEventArgs)">
            <summary>
            Invoked when the property of annotation data is changed.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.ObjectPropertyChangedEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStickyNoteAnnotationView.IsCollapsed">
            <summary>
            Gets or sets a value indicating whether this annotation is collapsed.
            </summary>
            <value>
            Default value is <b>true</b>.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStickyNoteAnnotationView.CollapsedType">
            <summary>
            Gets or sets a type of annotation when annotation is collapsed.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStickyNoteAnnotationView.CollapsedIconType">
            <summary>
            Gets or sets a type of collapsed annotation when <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStickyNoteAnnotationView.CollapsedType" />
            is equal to <see cref="T:Vintasoft.Imaging.Annotation.StickyNoteAnnotationCollapsedType" />.Image.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStickyNoteAnnotationView.CollapsedTextData">
            <summary>
            Gets a <see cref="T:Vintasoft.Imaging.Annotation.TextAnnotationData" /> that present the <see cref="T:Vintasoft.Imaging.Annotation.StickyNoteAnnotationData" />
            when <see cref="T:Vintasoft.Imaging.Annotation.StickyNoteAnnotationData" /> is collapsed.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStickyNoteAnnotationView.CollapsedImageData">
            <summary>
            Gets an <see cref="T:Vintasoft.Imaging.Annotation.EmbeddedImageAnnotationData" /> that present
            the <see cref="T:Vintasoft.Imaging.Annotation.StickyNoteAnnotationData" />
            when <see cref="T:Vintasoft.Imaging.Annotation.StickyNoteAnnotationData" /> is collapsed.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStickyNoteAnnotationView.ExpandedTextData">
            <summary>
            Gets a <see cref="T:Vintasoft.Imaging.Annotation.TextAnnotationData" /> that present the <see cref="T:Vintasoft.Imaging.Annotation.StickyNoteAnnotationData" />
            when <see cref="T:Vintasoft.Imaging.Annotation.StickyNoteAnnotationData" /> is expanded.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView">
            <summary>
            Determines how to display the annotation that displays
            an editable text area and a leader polyline used to point to the area of the image
            and how user can interact with annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView.#ctor(Vintasoft.Imaging.Annotation.FreeTextAnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView" /> class.
            </summary>
            <param name="data">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current 
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView" /> instance.
            </summary>
            <returns>A new object that is a copy of this
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView" /> instance.</returns>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView.Symmetry">
            <summary>
            Gets or sets a value indicating whether the annotation is symmetrical.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView.ShadowBrush">
            <summary>
            Gets or sets the shadow brush of annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView.ShadowOffset">
            <summary>
            Gets or sets the shadow offset of annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView.Text">
            <summary>
            Gets or sets the text of the annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView.Font">
            <summary>
            Gets or sets the <see cref="T:Vintasoft.Imaging.Annotation.AnnotationFont" /> of the annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView.FontBrush">
            <summary>
            Gets or sets the font brush of the annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView.FontTransparent">
            <summary>
            Gets or sets a value indicating whether the annotation's font is transparent.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView.TextPadding">
            <summary>
            Gets or sets the text padding within the annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView.TextHorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of text in the annotation.
            </summary>
            <value>Default value is <see cref="T:System.Windows.Media.AlignmentX" />.Left.</value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView.TextVerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of text in the annotation.
            </summary>
            <value>Default value is <see cref="T:System.Windows.Media.AlignmentY" />.Top.</value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView.LeaderOutline">
            <summary>
            Gets or sets the style of the leader's outline.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView.LeaderPoints">
            <summary>
            Gets the point collection of leader line of the annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView.UseLeaderInterpolation">
            <summary>
            Gets or sets a value indicating whether leader line of annotation is drawn with interpolation.
            </summary>
            <value>
            Default value is <b>false</b>.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView.TextTransformer">
            <summary>
            Gets a transformer for this <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfFreeTextAnnotationView" />
            that provides a <see cref="T:System.Windows.Controls.TextBox" /> for the annotation text editing.
            </summary>
            <value>
            not <b>null</b> - value of <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Transformer" /> property
            converted to the type <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer" />;
            <b>null</b> - if value of <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Transformer" /> property
            cannot be converted to the type <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer" />.
            </value>
            <example>
            This example shows how to set custom font, location and size of the text box of the text annotations:
            <code lang="VB.NET">
            Public Class MainWindow
                Inherits Window
                ''' &lt;summary&gt;
                ''' Main annotation viewer.
                ''' &lt;/summary&gt;
                Private _viewer As WpfAnnotationViewer
            
                ' ...
            
                Public Sub New()
                    ' ...
            
                    ' subscribe to the FocusedAnnotationViewChanged event of viewer
            
                        ' ...
                    AddHandler _viewer.FocusedAnnotationViewChanged, New System.EventHandler(Of WpfAnnotationViewChangedEventArgs)(AddressOf _viewer_FocusedAnnotationViewChanged)
                End Sub
            
                ''' &lt;summary&gt;
                ''' Handler of the FocusedAnnotationViewChanged event.
                ''' &lt;/summary&gt;
                Private Sub _viewer_FocusedAnnotationViewChanged(sender As Object, e As WpfAnnotationViewChangedEventArgs)
                    ' text transformer of old annotation
                    Dim textTransformer As WpfRectangularTextAnnotationTransformer = Nothing
                    If TypeOf e.OldValue Is WpfTextAnnotationView Then
                        textTransformer = DirectCast(e.OldValue, WpfTextAnnotationView).TextTransformer
                    ElseIf TypeOf e.OldValue Is WpfFreeTextAnnotationView Then
                        textTransformer = DirectCast(e.OldValue, WpfFreeTextAnnotationView).TextTransformer
                    End If
            
                    If textTransformer IsNot Nothing Then
                        ' unsubscribe from the TextBoxUpdated event of viewer
                        RemoveHandler textTransformer.TextBoxUpdated, New System.EventHandler(Of WpfRectangularTextAnnotationTransformerTextBoxEventArgs)(AddressOf textTransformer_TextBoxUpdated)
                    End If
            
                    ' text transformer of new annotation
                    textTransformer = Nothing
                    If TypeOf e.NewValue Is WpfTextAnnotationView Then
                        textTransformer = DirectCast(e.NewValue, WpfTextAnnotationView).TextTransformer
                    ElseIf TypeOf e.NewValue Is WpfFreeTextAnnotationView Then
                        textTransformer = DirectCast(e.NewValue, WpfFreeTextAnnotationView).TextTransformer
                    End If
            
                    If textTransformer IsNot Nothing Then
                        ' set new font of the text box
                        textTransformer.TextBox.FontFamily = New FontFamily("Arial")
                        textTransformer.TextBox.FontSize = 20.0
                        textTransformer.TextBox.FontWeight = FontWeights.Bold
            
                        ' set text box location and size calculation mode to manual
                        textTransformer.AutomaticallyCalculateTextBoxLocationAndSize = False
                        ' subscribe to the TextBoxUpdated event of viewer
                        AddHandler textTransformer.TextBoxUpdated, New System.EventHandler(Of WpfRectangularTextAnnotationTransformerTextBoxEventArgs)(AddressOf textTransformer_TextBoxUpdated)
                    End If
                End Sub
            
                ''' &lt;summary&gt;
                ''' Handler of the TextBoxUpdated event.
                ''' Location and size of the text box are setting to such values that text box matches
                ''' the visible part of the text annotation.
                ''' &lt;/summary&gt;
                Private Sub textTransformer_TextBoxUpdated(sender As Object, e As WpfRectangularTextAnnotationTransformerTextBoxEventArgs)
                    ' get the text annotation
                    Dim textAnnotation As IWpfRectangularTextAnnotation = e.TextAnnotation
                    ' get bounding box of the annotation in the coordinate system of the annotation
                    Dim annotationBoundingBox As Rect = textAnnotation.GetBoundingBox()
                    ' get bounding box of the annotation in the coordinate system of the viewer
                    annotationBoundingBox = TransformRect(annotationBoundingBox, textAnnotation.GetPointTransform(_viewer))
                    ' get position of the auto-scroll of the viewer
                    Dim autoScrollPosition As Point = _viewer.ViewerState.AutoScrollPosition
                    ' get visible area of the viewer
                    Dim clientRectangle As New Rect(autoScrollPosition.X, autoScrollPosition.Y, _viewer.ViewportWidth, _viewer.ViewportHeight)
                    ' intersect the bounding box of the annotation with the visible area of the viewer
                    Dim newBounds As Rect = Rect.Intersect(annotationBoundingBox, clientRectangle)
                    ' set new bounds
                    If newBounds.IsEmpty Then
                        e.TextBox.Width = 0.0
                        e.TextBox.Height = 0.0
                    Else
                        e.TextBox.Width = newBounds.Width
                        e.TextBox.Height = newBounds.Height
                        Canvas.SetLeft(e.TextBox, newBounds.Left)
                        Canvas.SetTop(e.TextBox, newBounds.Top)
                    End If
                End Sub
            
                ''' &lt;summary&gt;
                ''' Transforms the rectangle and returns the bounding box.
                ''' &lt;/summary&gt;
                ''' &lt;param name="rect"&gt;The rectangle.&lt;/param&gt;
                ''' &lt;param name="pointTransform"&gt;The point transform.&lt;/param&gt;
                ''' &lt;returns&gt;The bounding box of transformed rectangle.&lt;/returns&gt;
                Private Function TransformRect(rect As Rect, pointTransform As WpfPointTransform) As Rect
                    Dim point1 As Point = pointTransform.TransformPoint(rect.TopLeft)
                    Dim point2 As Point = pointTransform.TransformPoint(rect.TopRight)
                    Dim point3 As Point = pointTransform.TransformPoint(rect.BottomRight)
                    Dim point4 As Point = pointTransform.TransformPoint(rect.BottomLeft)
                    Dim x As Double = Math.Min(Math.Min(point1.X, point2.X), Math.Min(point3.X, point4.X))
                    Dim y As Double = Math.Min(Math.Min(point1.Y, point2.Y), Math.Min(point3.Y, point4.Y))
                    Dim width As Double = Math.Max(Math.Max(point1.X, point2.X), Math.Max(point3.X, point4.X)) - x
                    Dim height As Double = Math.Max(Math.Max(point1.Y, point2.Y), Math.Max(point3.Y, point4.Y)) - y
                    Return New Rect(x, y, width, height)
                End Function
            End Class
            </code>
            <code lang="C#">
            public class MainWindow : Window
            {
                /// &lt;summary&gt;
                /// Main annotation viewer.
                /// &lt;/summary&gt;
                WpfAnnotationViewer _viewer;
            
                // ...
            
                public MainWindow()
                {
                    // ...
            
                    // subscribe to the FocusedAnnotationViewChanged event of viewer
                    _viewer.FocusedAnnotationViewChanged += new System.EventHandler&lt;WpfAnnotationViewChangedEventArgs&gt;(_viewer_FocusedAnnotationViewChanged);
            
                    // ...
                }
            
                /// &lt;summary&gt;
                /// Handler of the FocusedAnnotationViewChanged event.
                /// &lt;/summary&gt;
                void _viewer_FocusedAnnotationViewChanged(object sender, WpfAnnotationViewChangedEventArgs e)
                {
                    // text transformer of old annotation
                    WpfRectangularTextAnnotationTransformer textTransformer = null;
                    if (e.OldValue is WpfTextAnnotationView)
                    {
                        textTransformer = ((WpfTextAnnotationView)e.OldValue).TextTransformer;
                    }
                    else if (e.OldValue is WpfFreeTextAnnotationView)
                    {
                        textTransformer = ((WpfFreeTextAnnotationView)e.OldValue).TextTransformer;
                    }
            
                    if (textTransformer != null)
                    {
                        // unsubscribe from the TextBoxUpdated event of viewer
                        textTransformer.TextBoxUpdated -= new System.EventHandler&lt;WpfRectangularTextAnnotationTransformerTextBoxEventArgs&gt;(textTransformer_TextBoxUpdated);
                    }
            
                    // text transformer of new annotation
                    textTransformer = null;
                    if (e.NewValue is WpfTextAnnotationView)
                    {
                        textTransformer = ((WpfTextAnnotationView)e.NewValue).TextTransformer;
                    }
                    else if (e.NewValue is WpfFreeTextAnnotationView)
                    {
                        textTransformer = ((WpfFreeTextAnnotationView)e.NewValue).TextTransformer;
                    }
            
                    if (textTransformer != null)
                    {
                        // set new font of the text box
                        textTransformer.TextBox.FontFamily = new FontFamily("Arial");
                        textTransformer.TextBox.FontSize = 20.0;
                        textTransformer.TextBox.FontWeight = FontWeights.Bold;
            
                        // set text box location and size calculation mode to manual
                        textTransformer.AutomaticallyCalculateTextBoxLocationAndSize = false;
                        // subscribe to the TextBoxUpdated event of viewer
                        textTransformer.TextBoxUpdated += new System.EventHandler&lt;WpfRectangularTextAnnotationTransformerTextBoxEventArgs&gt;(textTransformer_TextBoxUpdated);
                    }
                }
            
                /// &lt;summary&gt;
                /// Handler of the TextBoxUpdated event.
                /// Location and size of the text box are setting to such values that text box matches
                /// the visible part of the text annotation.
                /// &lt;/summary&gt;
                void textTransformer_TextBoxUpdated(object sender, WpfRectangularTextAnnotationTransformerTextBoxEventArgs e)
                {
                    // get the text annotation
                    IWpfRectangularTextAnnotation textAnnotation = e.TextAnnotation;
                    // get bounding box of the annotation in the coordinate system of the annotation
                    Rect annotationBoundingBox = textAnnotation.GetBoundingBox();
                    // get bounding box of the annotation in the coordinate system of the viewer
                    annotationBoundingBox = TransformRect(annotationBoundingBox, textAnnotation.GetPointTransform(_viewer));
                    // get position of the auto-scroll of the viewer
                    Point autoScrollPosition = _viewer.ViewerState.AutoScrollPosition;
                    // get visible area of the viewer
                    Rect clientRectangle = new Rect(autoScrollPosition.X, autoScrollPosition.Y,
                        _viewer.ViewportWidth, _viewer.ViewportHeight);
                    // intersect the bounding box of the annotation with the visible area of the viewer
                    Rect newBounds = Rect.Intersect(annotationBoundingBox, clientRectangle);
                    // set new bounds
                    if (newBounds.IsEmpty)
                    {
                        e.TextBox.Width = 0.0;
                        e.TextBox.Height = 0.0;
                    }
                    else
                    {
                        e.TextBox.Width = newBounds.Width;
                        e.TextBox.Height = newBounds.Height;
                        Canvas.SetLeft(e.TextBox, newBounds.Left);
                        Canvas.SetTop(e.TextBox, newBounds.Top);
                    }
                }
            
                /// &lt;summary&gt;
                /// Transforms the rectangle and returns the bounding box.
                /// &lt;/summary&gt;
                /// &lt;param name="rect"&gt;The rectangle.&lt;/param&gt;
                /// &lt;param name="pointTransform"&gt;The point transform.&lt;/param&gt;
                /// &lt;returns&gt;The bounding box of transformed rectangle.&lt;/returns&gt;
                private Rect TransformRect(Rect rect, WpfPointTransform pointTransform)
                {
                    Point point1 = pointTransform.TransformPoint(rect.TopLeft);
                    Point point2 = pointTransform.TransformPoint(rect.TopRight);
                    Point point3 = pointTransform.TransformPoint(rect.BottomRight);
                    Point point4 = pointTransform.TransformPoint(rect.BottomLeft);
                    double x = Math.Min(Math.Min(point1.X, point2.X), Math.Min(point3.X, point4.X));
                    double y = Math.Min(Math.Min(point1.Y, point2.Y), Math.Min(point3.Y, point4.Y));
                    double width = Math.Max(Math.Max(point1.X, point2.X), Math.Max(point3.X, point4.X)) - x;
                    double height = Math.Max(Math.Max(point1.Y, point2.Y), Math.Max(point3.Y, point4.Y)) - y;
                    return new Rect(x, y, width, height);
                }
            }
            </code>
            </example>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfGroupAnnotationView">
            <summary>
            Determines how to display the annotation that displays
            a group of annotations
            and how user can interact with annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfGroupAnnotationView.#ctor(Vintasoft.Imaging.Annotation.GroupAnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfGroupAnnotationView" /> class.
            </summary>
            <param name="data">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfGroupAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current 
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfGroupAnnotationView" /> instance.
            </summary>
            <returns>A new object that is a copy of this
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfGroupAnnotationView" /> instance.</returns>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfGroupAnnotationView.DataItems">
            <summary>
            Gets the <see cref="T:Vintasoft.Imaging.Annotation.AnnotationDataCollection" /> associated with the annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfGroupAnnotationView.ViewItems">
            <summary>
            Gets the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection" /> associated with the annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfGroupAnnotationView.UseCompositeTransformer">
            <summary>
            Gets a value indicating whether the composite transformer must be used for
            transforming of the annotation.
            </summary>
            <value>
            <b>true</b> - rectangular transformer is be used for transforming of annotation group,
            annotation transformer is used for transforming of single annotation;
            <b>false</b> - rectangular transformer is be used for transforming of annotation group.<br />
            Default value is <b>false</b>.
            </value>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewFactory">
            <summary>
            Provides the ability to create the view (<see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView" />) for
            annotation data (<see cref="T:Vintasoft.Imaging.Annotation.AnnotationData" />).
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewFactory.RegisterViewForAnnotationData(System.Type,System.Type)">
            <summary>
            Registers view for annotation data.
            </summary>
            <param name="annotationDataType">Type of annotation data.</param>
            <param name="annotationViewType">Type of annotation view.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if
            <i>annotationDataType</i> <i>OR</i>
            <i>annotationViewType</i> is <b>null</b>.</exception>
            <exception cref="T:System.ArgumentException">Thrown if
            <i>annotationDataType</i> is not derived from AnnotationData <i>OR</i>
            <i>annotationViewType</i> is not derived from AnnotationView <i>OR</i>
            <i>annotationViewType</i> is abstract type <i>OR</i>
            <i>annotationViewType</i> does not contain a public constructor
            with a single parameter derived from <see cref="T:Vintasoft.Imaging.Annotation.AnnotationData" />.
            </exception>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewFactory.IsViewForAnnotationDataRegistered(System.Type)">
            <summary>
            Returns a value indicating whether the view for the annotation data is registered.
            </summary>
            <param name="annotationDataType">Type of annotation data.</param>
            <returns>
            <b>true</b> if view for the annotation data is registered;
            otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewFactory.GetViewForAnnotationData(System.Type)">
            <summary>
            Returns the view for the annotation data.
            </summary>
            <param name="annotationDataType">Type of annotation data.</param>
            <returns>
            Type of annotation view if view for the annotation data is registered;
            otherwise, <b>null</b>.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewFactory.CreateView(Vintasoft.Imaging.Annotation.AnnotationData)">
            <summary>
            Creates a view for annotation data.
            </summary>
            <param name="annotationData">Annotation data.</param>
            <returns>View for annotation data.</returns>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAngleAnnotationView">
            <summary>
            Determines how to display the annotation that displays
            two lines, the angle between them and the total length of lines
            and how user can interact with annotation.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView">
            <summary>
            Determines how to display the annotation that displays
            a series of lines and the total length of lines
            and how user can interact with annotation.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinesAnnotationView">
            <summary>
            Determines how to display the annotation that displays lines.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationViewBase">
            <summary>
            Provides the abstract base class that determines how to display line-based annotation.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.IWpfPointBasedAnnotation">
            <summary>
            Defines properties for point-based annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.IWpfPointBasedAnnotation.Location">
            <summary>
            Gets or sets the location of point-based annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.IWpfPointBasedAnnotation.Size">
            <summary>
            Gets or sets the size of point-based annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.IWpfPointBasedAnnotation.RotationAngle">
            <summary>
            Gets or sets the rotation angle of point-based annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.IWpfPointBasedAnnotation.HorizontalMirrored">
            <summary>
            Gets a value indicating whether the point-based annotation is mirrored horizontally.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.IWpfPointBasedAnnotation.VerticalMirrored">
            <summary>
            Gets a value indicating whether the point-based annotation is mirrored vertically.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationViewBase.#ctor(Vintasoft.Imaging.Annotation.LineAnnotationDataBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationViewBase" /> class.
            </summary>
            <param name="annotationData">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationViewBase.IsPointOnFigure(System.Windows.Point)">
            <summary>
            Indicates whether the specified point is contained within the annotation.
            </summary>
            <param name="point">Point in image space.</param>
            <returns><b>true</b> if the specified point is contained within the annotation;
            otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationViewBase.SetInteractionControllerProperties(Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.IWpfInteractionController)">
            <summary>
            Sets the properties of interaction controller according to the properties of annotation.
            </summary>
            <param name="controller">The interaction controller.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationViewBase.Points">
            <summary>
            Gets a <see cref="T:Vintasoft.Imaging.Annotation.AnnotationPointCollection" /> containing the points of annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationViewBase.GripMode">
            <summary>
            Gets or sets the grip mode of annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationViewBase.IsReadyForDrawing">
            <summary>
            Gets a value indicating whether this annotation is ready for drawing, for example,
            line annotation has points.
            </summary>
            <value>
            <b>true</b> - annotation is ready for drawing (in annotated thumbnail viewer);
            <b>false</b> - annotation is not ready for drawing.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationViewBase.PointTransformer">
            <summary>
            Gets or sets a transformer used for transforming of points of the annotation
            when <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationViewBase.GripMode" /> is set to GripMode.Points.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationViewBase.RectangularTransformer">
            <summary>
            Gets or sets a transformer used for transforming of points of the annotation
            when <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationViewBase.GripMode" /> is set to GripMode.Rectangular.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinesAnnotationView.#ctor(Vintasoft.Imaging.Annotation.LinesAnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinesAnnotationView" /> class.
            </summary>
            <param name="annotationData">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinesAnnotationView.IsPointOnFigure(System.Windows.Point)">
            <summary>
            Indicates whether the specified point is contained within the annotation.
            </summary>
            <param name="point">Point in image space.</param>
            <returns><b>true</b> if the specified point is contained within the annotation;
            otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinesAnnotationView.GetAuthorBoundingBox(System.Windows.Point,System.Windows.Size,System.Double)">
            <summary>
            Returns an author bounding box, in the image space, of annotation.
            </summary>
            <param name="location">Location, in device-independent pixels (1/96th inch),
            of annotation.</param>
            <param name="size">Size, in device-independent pixels (1/96th inch),
            of annotation</param>
            <param name="rotation">Rotation, in degrees, of annotation.</param>
            <returns>An author bounding box, in the image space, of annotation.</returns>
            <remarks>
            The author bounding box is used when annotation is transforming, also
            it is used when annotation is selected.<br />
            <br />
            In most cases the author bounding box matches the bounding box of annotation.
            The author can override this method and change the author bounding box if necessary,
            for example, bounding box can be inflated.
            </remarks>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinesAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current 
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinesAnnotationView" /> instance.
            </summary>
            <returns>A new object that is a copy of this <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinesAnnotationView" />
            instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinesAnnotationView.RenderInContentSpace(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Renders the annotation on the <see cref="T:System.Windows.Media.DrawingContext" />
            in the coordinate space of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinesAnnotationView.GetAsPathGeometry">
            <summary>
            Returns points of annotation as <see cref="T:System.Windows.Media.PathGeometry" />.
            </summary>
            <returns>Points of annotation as <see cref="T:System.Windows.Media.PathGeometry" />.</returns>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinesAnnotationView.UseInterpolation">
            <summary>
            Gets or sets a value indicating whether lines of annotation are drawn with interpolation.
            </summary>
            <value>
            Default value is <b>false</b>.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinesAnnotationView.IsReadyForDrawing">
            <summary>
            Gets a value indicating whether this annotation is ready for drawing, for example,
            line annotation has points.
            </summary>
            <value>
            <b>true</b> - annotation is ready for drawing (in annotated thumbnail viewer);
            <b>false</b> - annotation is not ready for drawing.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinesAnnotationView.IsClosedFigure">
            <summary>
            Gets a value indicating whether lines of annotation are closed.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView.#ctor(Vintasoft.Imaging.Annotation.RulersAnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView" /> class.
            </summary>
            <param name="annotationData">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current 
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView" /> instance.
            </summary>
            <returns>A new object that is a copy of this
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView" /> instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView.GetLengthInPixels(Vintasoft.Imaging.Resolution)">
            <summary>
            Calculates the length of annotation, in pixels, using specified resolution of image.
            </summary>
            <param name="resolution">Resolution of image where the length is measuring.</param>
            <returns>Length of annotation, in pixels.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView.RenderInSurfaceSpace(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Renders the annotation on the <see cref="T:System.Windows.Media.DrawingContext" />
            in the coordinate space of drawing surface.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView.Length">
            <summary>
            Gets the length in units specified in the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView.UnitOfMeasure" />.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView.Font">
            <summary>
            Gets or sets the text font of annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView.ForeColor">
            <summary>
            Gets or sets the foreground color of annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView.UnitOfMeasure">
            <summary>
            Gets or sets unit of measure of the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView.Length" />.
            </summary>
            <remarks>
            Value of this property is used as unit of measure for calculating
            value of the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView.Length" /> property.
            </remarks>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView.FormatString">
            <summary>
            Gets or sets the format string that specifies how a value must be displayed.
            </summary>
            <remarks>
            Distance will not be displayed if this property is empty.
            </remarks>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView.Calibration">
            <summary>
            Gets or sets the calibration value used in calculation of <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView.Length" />.
            </summary>
            <remarks>
            Real length of object (the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView.Length" /> property) can be differ
            from the length of object in the image. This property helps to solve
            this problem.<br />
            Here is a formula: Real_length_of_object = Length_of_object_in_image * <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView.Calibration" />.<br />
            For example, <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView.Length" /> will be set to 10 centimeters if the
            length of object in the image is 5 centimeters and <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulersAnnotationView.Calibration" />
            is set to 2.
            </remarks>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAngleAnnotationView.#ctor(Vintasoft.Imaging.Annotation.AngleAnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAngleAnnotationView" /> class.
            </summary>
            <param name="annotationData">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAngleAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAngleAnnotationView" /> instance.
            </summary>
            <returns>A new object that is a copy of this
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAngleAnnotationView" /> instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAngleAnnotationView.RenderInSurfaceSpace(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Renders the annotation on the <see cref="T:System.Windows.Media.DrawingContext" />
            in the coordinate space of drawing surface.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAngleAnnotationView.Angle">
            <summary>
            Gets the angle, in degrees, between the lines of annotation.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView">
            <summary>
            Determines how to display the annotation that displays
            the single line and the length of line
            and how user can interact with annotation.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationView">
            <summary>
            Determines how to display the annotation that displays a line
            and how user can interact with annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationView.#ctor(Vintasoft.Imaging.Annotation.LineAnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationView" /> class.
            </summary>
            <param name="annotationData">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationView.RenderInContentSpace(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Renders the annotation on the <see cref="T:System.Windows.Media.DrawingContext" />
            in the coordinate space of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current 
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationView" /> instance.
            </summary>
            <returns>A new object that is a copy of this <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationView" />
            instance.</returns>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationView.StartPoint">
            <summary>
            Gets or sets the start point of the line.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLineAnnotationView.EndPoint">
            <summary>
            Gets or sets the end point of the line.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView.#ctor(Vintasoft.Imaging.Annotation.RulerAnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView" /> class.
            </summary>
            <param name="annotationData">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current 
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView" /> instance.
            </summary>
            <returns>A new object that is a copy of this
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView" /> instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView.GetLengthInPixels(Vintasoft.Imaging.Resolution)">
            <summary>
            Calculates the length of annotation, in pixels, using specified resolution of image.
            </summary>
            <param name="resolution">Resolution of image where the length is measuring.</param>
            <returns>Length of annotation, in pixels.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView.RenderInSurfaceSpace(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Renders the annotation on the <see cref="T:System.Windows.Media.DrawingContext" />
            in the coordinate space of drawing surface.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView.Length">
            <summary>
            Gets the length in units specified in the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView.UnitOfMeasure" />.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView.Font">
            <summary>
            Gets or sets the text font of annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView.ForeColor">
            <summary>
            Gets or sets the foreground color of annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView.UnitOfMeasure">
            <summary>
            Gets or sets unit of measure of the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView.Length" />.
            </summary>
            <remarks>
            Value of this property is used as unit of measure for calculating
            value of the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView.Length" /> property.
            </remarks>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView.FormatString">
            <summary>
            Gets or sets the format string that specifies how a value must be displayed.
            </summary>
            <remarks>
            Distance will not be displayed if this property is empty.
            </remarks>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView.Calibration">
            <summary>
            Gets or sets the calibration value used in calculation of <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView.Length" />.
            </summary>
            <remarks>
            Real length of object (the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView.Length" /> property) can be differ
            from the length of object in the image. This property helps to solve
            this problem.<br />
            Here is a formula: Real_length_of_object = Length_of_object_in_image * <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView.Calibration" />.<br />
            For example, <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView.Length" /> will be set to 10 centimeters if the
            length of object in the image is 5 centimeters and <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRulerAnnotationView.Calibration" />
            is set to 2.
            </remarks>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLeaderLineAnnotationView">
            <summary>
            Determines how to display the annotation that displays a leader line
            and how user can interact with annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLeaderLineAnnotationView.#ctor(Vintasoft.Imaging.Annotation.LeaderLineAnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLeaderLineAnnotationView" /> class.
            </summary>
            <param name="annotationData">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLeaderLineAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current 
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLeaderLineAnnotationView" /> instance.
            </summary>
            <returns>A new object that is a copy of this <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLeaderLineAnnotationView" />
            instance.</returns>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLeaderLineAnnotationView.StartAnnotationData">
            <summary>
            Gets or sets the <see cref="T:Vintasoft.Imaging.Annotation.AnnotationData" /> object associated
            with start of the <see cref="T:Vintasoft.Imaging.Annotation.LeaderLineAnnotationData" />.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLeaderLineAnnotationView.IsReadyForDrawing">
            <summary>
            Gets a value indicating whether this annotation is ready for drawing.
            </summary>
            <value>
            <b>true</b> - annotation is ready for drawing (in annotated thumbnail viewer);
            <b>false</b> - annotation is not ready for drawing.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLeaderLineAnnotationView.EndAnnotationData">
            <summary>
            Gets or sets the <see cref="T:Vintasoft.Imaging.Annotation.AnnotationData" /> object associated
            with end of this <see cref="T:Vintasoft.Imaging.Annotation.LeaderLineAnnotationData" />.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfPolygonAnnotationView">
            <summary>
            Determines how to display the annotation that displays a polygon
            and how user can interact with annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfPolygonAnnotationView.#ctor(Vintasoft.Imaging.Annotation.PolygonAnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfPolygonAnnotationView" /> class.
            </summary>
            <param name="annotationData">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfPolygonAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current 
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfPolygonAnnotationView" /> instance.
            </summary>
            <returns>A new object that is a copy of this
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfPolygonAnnotationView" /> instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfPolygonAnnotationView.IsPointOnFigure(System.Windows.Point)">
            <summary>
            Indicates whether the specified point is contained within the annotation.
            </summary>
            <param name="point">Point in image space.</param>
            <returns><b>true</b> if the specified point is contained within the annotation;
            otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfPolygonAnnotationView.RenderInContentSpace(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Draws the annotation on the <see cref="T:System.Drawing.Graphics" />
            in the coordinate space of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to draw on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfPolygonAnnotationView.IsClosedFigure">
            <summary>
            Gets a value indicating whether lines of annotation are closed.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfImageAnnotationView">
            <summary>
            Provides the base class that determines how to display the annotation
            that displays an embedded image
            and how user can interact with annotation.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRectangleAnnotationView">
            <summary>
            Determines how to display the annotation that displays a rectangle.
            </summary>
            <remarks>
            Square annotation can be constructed from rectangle annotation if the
            <see cref="P:Vintasoft.Imaging.Annotation.RectangleAnnotationData.Symmetry" /> property will be set to <b>true</b>.
            </remarks>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRectangleAnnotationView.#ctor(Vintasoft.Imaging.Annotation.RectangleAnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRectangleAnnotationView" /> class.
            </summary>
            <param name="annotationData">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRectangleAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current 
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRectangleAnnotationView" /> instance.
            </summary>
            <returns>A new object that is a copy of this
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRectangleAnnotationView" /> instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRectangleAnnotationView.IsPointOnFigure(System.Windows.Point)">
            <summary>
            Indicates whether the specified point is contained within the annotation.
            </summary>
            <param name="point">Point in image space.</param>
            <returns><b>true</b> if the specified point is contained within the annotation;
            otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRectangleAnnotationView.SetInteractionControllerProperties(Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.IWpfInteractionController)">
            <summary>
            Sets the properties of interaction controller according to the properties of annotation.
            </summary>
            <param name="controller">The interaction controller.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRectangleAnnotationView.RenderInContentSpace(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Renders the annotation on the <see cref="T:System.Windows.Media.DrawingContext" />
            in the coordinate space of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRectangleAnnotationView.RenderShadow(System.Windows.Media.DrawingContext)">
            <summary>
            Draws the shadow of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Drawing.Graphics" /> to draw on.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRectangleAnnotationView.RenderBorder(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Draws the border of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Drawing.Graphics" /> to draw on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRectangleAnnotationView.OnDataPropertyChanged(Vintasoft.Imaging.ObjectPropertyChangedEventArgs)">
            <summary>
            Invoked when the property of annotation data is changed.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.ObjectPropertyChangedEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRectangleAnnotationView.Symmetry">
            <summary>
            Gets or sets a value indicating whether the annotation is symmetrical.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRectangleAnnotationView.ShadowBrush">
            <summary>
            Gets or sets the shadow brush of annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRectangleAnnotationView.ShadowOffset">
            <summary>
            Gets or sets the shadow offset of annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfImageAnnotationView.#ctor(Vintasoft.Imaging.Annotation.ImageAnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfImageAnnotationView" /> class.
            </summary>
            <param name="annotationData">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfImageAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current 
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfImageAnnotationView" /> instance.
            </summary>
            <returns>A new object that is a copy of this
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfImageAnnotationView" /> instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfImageAnnotationView.RenderInContentSpace(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Renders the annotation on the <see cref="T:System.Windows.Media.DrawingContext" />
            in the coordinate space of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfImageAnnotationView.SetInteractionControllerProperties(Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.IWpfInteractionController)">
            <summary>
            Sets the properties of interaction controller according to the properties of annotation.
            </summary>
            <param name="controller">The interaction controller.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfImageAnnotationView.OnDataPropertyChanged(Vintasoft.Imaging.ObjectPropertyChangedEventArgs)">
            <summary>
            Invoked when the property of annotation data is changed.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.ObjectPropertyChangedEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfImageAnnotationView.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the annotation and
            optionally releases the managed resources.
            </summary>
            <param name="disposing"><b>true</b> to release both managed and
            unmanaged resources; <b>false</b> to release only unmanaged resources.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfImageAnnotationView.Image">
            <summary>
            Gets or sets the image of annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfImageAnnotationView.MaintainAspectRatio">
            <summary>
            Gets or sets a value indicating whether annotation must maintain the aspect ratio of image.
            </summary>
            <remarks>
            This property has higher priority than <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRectangleAnnotationView.Symmetry" /> property.
            </remarks>
            <seealso cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRectangleAnnotationView.Symmetry" />
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfReferencedImageAnnotationView">
            <summary>
            Determines how to display the annotation that displays a referenced image
            and how user can interact with annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfReferencedImageAnnotationView.#ctor(Vintasoft.Imaging.Annotation.ReferencedImageAnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfReferencedImageAnnotationView" /> class.
            </summary>
            <param name="annotationData">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfReferencedImageAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current 
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfReferencedImageAnnotationView" /> instance.
            </summary>
            <returns>A new object that is a copy of this
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfReferencedImageAnnotationView" /> instance.</returns>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfReferencedImageAnnotationView.Filename">
            <summary>
            Gets or sets the name of the image file.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfArrowAnnotationView">
            <summary>
            Determines how to display the annotation that displays an arrow.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfArrowAnnotationView.#ctor(Vintasoft.Imaging.Annotation.ArrowAnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfArrowAnnotationView" /> class.
            </summary>
            <param name="annotationData">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfArrowAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current 
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfArrowAnnotationView" /> instance.
            </summary>
            <returns>A new object that is a copy of this
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfArrowAnnotationView" /> instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfArrowAnnotationView.RenderInContentSpace(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Renders the annotation on the <see cref="T:System.Windows.Media.DrawingContext" />
            in the coordinate space of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfArrowAnnotationView.RenderShadow(System.Windows.Media.DrawingContext)">
            <summary>
            Draws the shadow of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Drawing.Graphics" /> to draw on.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfArrowAnnotationView.RenderBorder(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Draws the border of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to draw on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfArrowAnnotationView.ArrowCapAngle">
            <summary>
            Gets or sets the angle, in degrees, of the annotation cap.
            </summary>
            <value>
            Possible values from 0 to 180.
            Default value is <b>90</b>.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfArrowAnnotationView.ArrowLineWidth">
            <summary>
            Gets or sets the width of arrow line, expressed as a fraction of
            the annotation height.
            </summary>
            <value>
            Possible values from 0 (0) to 1 (annotation height).
            Default value is <b>0.4</b> (40% of annotation height).
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfArrowAnnotationView.BothCaps">
            <summary>
            Gets or sets a value indicating whether both caps of the arrow are displayed.
            </summary>
            <value>
            Default value is <b>false</b>.
            </value>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfEllipseAnnotationView">
            <summary>
            Determines how to display the annotation that displays an ellipse
            and how user can interact with annotation.
            </summary>
            <remarks>
            Circle annotation can be constructed from ellipse annotation if the
            <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfRectangleAnnotationView.Symmetry" /> property will be set to <b>true</b>.
            </remarks>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfEllipseAnnotationView.#ctor(Vintasoft.Imaging.Annotation.EllipseAnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfEllipseAnnotationView" /> class.
            </summary>
            <param name="annotationData">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfEllipseAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current 
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfEllipseAnnotationView" /> instance.
            </summary>
            <returns>A new object that is a copy of this
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfEllipseAnnotationView" /> instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfEllipseAnnotationView.RenderInContentSpace(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Renders the annotation on the <see cref="T:System.Windows.Media.DrawingContext" />
            in the coordinate space of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfEllipseAnnotationView.RenderShadow(System.Windows.Media.DrawingContext)">
            <summary>
            Draws the shadow of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Drawing.Graphics" /> to draw on.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfEllipseAnnotationView.RenderBorder(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Draws the border of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to draw on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfHighlightAnnotationView">
            <summary>
            Determines how to display the annotation that highlights region of image
            and how user can interact with annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfHighlightAnnotationView.#ctor(Vintasoft.Imaging.Annotation.HighlightAnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfHighlightAnnotationView" /> class.
            </summary>
            <param name="annotationData">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfHighlightAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current 
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfHighlightAnnotationView" /> instance.
            </summary>
            <returns>A new object that is a copy of this <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfHighlightAnnotationView" />
            instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfHighlightAnnotationView.RenderInSurfaceSpace(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Renders the annotation on the <see cref="T:System.Windows.Media.DrawingContext" />
            in the coordinate space of drawing surface.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfHighlightAnnotationView.RenderInContentSpace(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Renders the annotation on the <see cref="T:System.Windows.Media.DrawingContext" />
            in the coordinate space of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfHighlightAnnotationView.BlendingMode">
            <summary>
            Gets or sets the blending mode of the annotation.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinkAnnotationView">
            <summary>
            Determines how to display the annotation that displays a hypertext link
            and how user can interact with annotation.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.IWpfRectangularTextAnnotation">
            <summary>
            Defines properties for rectangular text annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.IWpfRectangularTextAnnotation.Text">
            <summary>
            Gets or sets a text of the annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinkAnnotationView.#ctor(Vintasoft.Imaging.Annotation.LinkAnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinkAnnotationView" /> class.
            </summary>
            <param name="annotationData">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinkAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current 
            <see cref="T:Vintasoft.Imaging.Annotation.UI.LinkAnnotationView" /> instance.
            </summary>
            <returns>A new object that is a copy of this
            <see cref="T:Vintasoft.Imaging.Annotation.UI.LinkAnnotationView" /> instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinkAnnotationView.RenderInContentSpace(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Renders the annotation on the <see cref="T:System.Windows.Media.DrawingContext" />
            in the coordinate space of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinkAnnotationView.RenderShadow(System.Windows.Media.DrawingContext)">
            <summary>
            Draws the shadow of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Drawing.Graphics" /> to draw on.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinkAnnotationView.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse is entered of the annotation.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.MouseEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinkAnnotationView.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse is moved out of the annotation.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.MouseEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinkAnnotationView.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the user clicks down on the annotation.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinkAnnotationView.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when the user has released the mouse over the annotation.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinkAnnotationView.IsReadyForDrawing">
            <summary>
            Gets a value indicating whether this annotation is ready for drawing, for example,
            line annotation has points.
            </summary>
            <value>
            <b>true</b> - annotation is ready for drawing (in annotated thumbnail viewer);
            <b>false</b> - annotation is not ready for drawing.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinkAnnotationView.Text">
            <summary>
            Gets or sets the text of the annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinkAnnotationView.HyperLink">
            <summary>
            Gets or sets the hyperlink reference.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinkAnnotationView.Padding">
            <summary>
            Gets or sets the interior spacing of the annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinkAnnotationView.LinkAppearance">
            <summary>
            Gets or sets the appearance of the hyperlink in its default state.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinkAnnotationView.HoveredLinkAppearance">
            <summary>
            Gets or sets the appearance of the hyperlink when the mouse cursor hovers over the hyperlink.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinkAnnotationView.ClickedLinkAppearance">
            <summary>
            Gets or sets the appearance of the hyperlink when the user clicked the link.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLinkAnnotationView.LinkClicked">
            <summary>
            Occurs when the link annotation is clicked.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStampAnnotationView">
            <summary>
            Determines how to display the annotation that displays a text message with
            a rounded rectangle outline similar to a rubber stamp
            and how user can interact with annotation.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfTextAnnotationView">
            <summary>
            Determines how to display the annotation that displays text which can be edited
            by the user
            and how user can interact with annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfTextAnnotationView.#ctor(Vintasoft.Imaging.Annotation.TextAnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfTextAnnotationView" /> class.
            </summary>
            <param name="annotationData">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfTextAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current 
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfTextAnnotationView" /> instance.
            </summary>
            <returns>A new object that is a copy of this
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfTextAnnotationView" /> instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfTextAnnotationView.RenderInContentSpace(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Renders the annotation on the <see cref="T:System.Windows.Media.DrawingContext" />
            in the coordinate space of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfTextAnnotationView.Text">
            <summary>
            Gets or sets the text of the annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfTextAnnotationView.Font">
            <summary>
            Gets or sets the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfTextAnnotationView.Font" /> of the annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfTextAnnotationView.FontBrush">
            <summary>
            Gets or sets the font brush of the annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfTextAnnotationView.FontTransparent">
            <summary>
            Gets or sets a value indicating whether the annotation's font is transparent.
            </summary>
            <value>
            Default value is <b>false</b>.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfTextAnnotationView.TextPadding">
            <summary>
            Gets or sets the text padding within the annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfTextAnnotationView.TextHorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of text in the annotation.
            </summary>
            <value>Default value is <see cref="T:System.Windows.Media.AlignmentX" />.Left.</value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfTextAnnotationView.TextVerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of text in the annotation.
            </summary>
            <value>Default value is <see cref="T:System.Windows.Media.AlignmentY" />.Top.</value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfTextAnnotationView.AutoSize">
            <summary>
            Gets or sets a value indicating whether the annotation will automatically resize
            to fit the text.
            </summary>
            <value>
            Default value is <b>false</b>.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfTextAnnotationView.TextTransformer">
            <summary>
            Gets a transformer for this <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfTextAnnotationView" />
            that provides a <see cref="T:System.Windows.Controls.TextBox" /> for
            displaying and editing the annotation text.
            </summary>
            <value>
            not <b>null</b> - value of <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Transformer" /> property
            converted to the type <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer" />;
            <b>null</b> - if value of <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Transformer" /> property
            cannot be converted to the type <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer" />.
            </value>
            <example>
            This example shows how to set custom font, location and size of the text box of the text annotations:
            <code lang="VB.NET">
            Public Class MainWindow
                Inherits Window
                ''' &lt;summary&gt;
                ''' Main annotation viewer.
                ''' &lt;/summary&gt;
                Private _viewer As WpfAnnotationViewer
            
                ' ...
            
                Public Sub New()
                    ' ...
            
                    ' subscribe to the FocusedAnnotationViewChanged event of viewer
            
                        ' ...
                    AddHandler _viewer.FocusedAnnotationViewChanged, New System.EventHandler(Of WpfAnnotationViewChangedEventArgs)(AddressOf _viewer_FocusedAnnotationViewChanged)
                End Sub
            
                ''' &lt;summary&gt;
                ''' Handler of the FocusedAnnotationViewChanged event.
                ''' &lt;/summary&gt;
                Private Sub _viewer_FocusedAnnotationViewChanged(sender As Object, e As WpfAnnotationViewChangedEventArgs)
                    ' text transformer of old annotation
                    Dim textTransformer As WpfRectangularTextAnnotationTransformer = Nothing
                    If TypeOf e.OldValue Is WpfTextAnnotationView Then
                        textTransformer = DirectCast(e.OldValue, WpfTextAnnotationView).TextTransformer
                    ElseIf TypeOf e.OldValue Is WpfFreeTextAnnotationView Then
                        textTransformer = DirectCast(e.OldValue, WpfFreeTextAnnotationView).TextTransformer
                    End If
            
                    If textTransformer IsNot Nothing Then
                        ' unsubscribe from the TextBoxUpdated event of viewer
                        RemoveHandler textTransformer.TextBoxUpdated, New System.EventHandler(Of WpfRectangularTextAnnotationTransformerTextBoxEventArgs)(AddressOf textTransformer_TextBoxUpdated)
                    End If
            
                    ' text transformer of new annotation
                    textTransformer = Nothing
                    If TypeOf e.NewValue Is WpfTextAnnotationView Then
                        textTransformer = DirectCast(e.NewValue, WpfTextAnnotationView).TextTransformer
                    ElseIf TypeOf e.NewValue Is WpfFreeTextAnnotationView Then
                        textTransformer = DirectCast(e.NewValue, WpfFreeTextAnnotationView).TextTransformer
                    End If
            
                    If textTransformer IsNot Nothing Then
                        ' set new font of the text box
                        textTransformer.TextBox.FontFamily = New FontFamily("Arial")
                        textTransformer.TextBox.FontSize = 20.0
                        textTransformer.TextBox.FontWeight = FontWeights.Bold
            
                        ' set text box location and size calculation mode to manual
                        textTransformer.AutomaticallyCalculateTextBoxLocationAndSize = False
                        ' subscribe to the TextBoxUpdated event of viewer
                        AddHandler textTransformer.TextBoxUpdated, New System.EventHandler(Of WpfRectangularTextAnnotationTransformerTextBoxEventArgs)(AddressOf textTransformer_TextBoxUpdated)
                    End If
                End Sub
            
                ''' &lt;summary&gt;
                ''' Handler of the TextBoxUpdated event.
                ''' Location and size of the text box are setting to such values that text box matches
                ''' the visible part of the text annotation.
                ''' &lt;/summary&gt;
                Private Sub textTransformer_TextBoxUpdated(sender As Object, e As WpfRectangularTextAnnotationTransformerTextBoxEventArgs)
                    ' get the text annotation
                    Dim textAnnotation As IWpfRectangularTextAnnotation = e.TextAnnotation
                    ' get bounding box of the annotation in the coordinate system of the annotation
                    Dim annotationBoundingBox As Rect = textAnnotation.GetBoundingBox()
                    ' get bounding box of the annotation in the coordinate system of the viewer
                    annotationBoundingBox = TransformRect(annotationBoundingBox, textAnnotation.GetPointTransform(_viewer))
                    ' get position of the auto-scroll of the viewer
                    Dim autoScrollPosition As Point = _viewer.ViewerState.AutoScrollPosition
                    ' get visible area of the viewer
                    Dim clientRectangle As New Rect(autoScrollPosition.X, autoScrollPosition.Y, _viewer.ViewportWidth, _viewer.ViewportHeight)
                    ' intersect the bounding box of the annotation with the visible area of the viewer
                    Dim newBounds As Rect = Rect.Intersect(annotationBoundingBox, clientRectangle)
                    ' set new bounds
                    If newBounds.IsEmpty Then
                        e.TextBox.Width = 0.0
                        e.TextBox.Height = 0.0
                    Else
                        e.TextBox.Width = newBounds.Width
                        e.TextBox.Height = newBounds.Height
                        Canvas.SetLeft(e.TextBox, newBounds.Left)
                        Canvas.SetTop(e.TextBox, newBounds.Top)
                    End If
                End Sub
            
                ''' &lt;summary&gt;
                ''' Transforms the rectangle and returns the bounding box.
                ''' &lt;/summary&gt;
                ''' &lt;param name="rect"&gt;The rectangle.&lt;/param&gt;
                ''' &lt;param name="pointTransform"&gt;The point transform.&lt;/param&gt;
                ''' &lt;returns&gt;The bounding box of transformed rectangle.&lt;/returns&gt;
                Private Function TransformRect(rect As Rect, pointTransform As WpfPointTransform) As Rect
                    Dim point1 As Point = pointTransform.TransformPoint(rect.TopLeft)
                    Dim point2 As Point = pointTransform.TransformPoint(rect.TopRight)
                    Dim point3 As Point = pointTransform.TransformPoint(rect.BottomRight)
                    Dim point4 As Point = pointTransform.TransformPoint(rect.BottomLeft)
                    Dim x As Double = Math.Min(Math.Min(point1.X, point2.X), Math.Min(point3.X, point4.X))
                    Dim y As Double = Math.Min(Math.Min(point1.Y, point2.Y), Math.Min(point3.Y, point4.Y))
                    Dim width As Double = Math.Max(Math.Max(point1.X, point2.X), Math.Max(point3.X, point4.X)) - x
                    Dim height As Double = Math.Max(Math.Max(point1.Y, point2.Y), Math.Max(point3.Y, point4.Y)) - y
                    Return New Rect(x, y, width, height)
                End Function
            End Class
            </code>
            <code lang="C#">
            public class MainWindow : Window
            {
                /// &lt;summary&gt;
                /// Main annotation viewer.
                /// &lt;/summary&gt;
                WpfAnnotationViewer _viewer;
            
                // ...
            
                public MainWindow()
                {
                    // ...
            
                    // subscribe to the FocusedAnnotationViewChanged event of viewer
                    _viewer.FocusedAnnotationViewChanged += new System.EventHandler&lt;WpfAnnotationViewChangedEventArgs&gt;(_viewer_FocusedAnnotationViewChanged);
            
                    // ...
                }
            
                /// &lt;summary&gt;
                /// Handler of the FocusedAnnotationViewChanged event.
                /// &lt;/summary&gt;
                void _viewer_FocusedAnnotationViewChanged(object sender, WpfAnnotationViewChangedEventArgs e)
                {
                    // text transformer of old annotation
                    WpfRectangularTextAnnotationTransformer textTransformer = null;
                    if (e.OldValue is WpfTextAnnotationView)
                    {
                        textTransformer = ((WpfTextAnnotationView)e.OldValue).TextTransformer;
                    }
                    else if (e.OldValue is WpfFreeTextAnnotationView)
                    {
                        textTransformer = ((WpfFreeTextAnnotationView)e.OldValue).TextTransformer;
                    }
            
                    if (textTransformer != null)
                    {
                        // unsubscribe from the TextBoxUpdated event of viewer
                        textTransformer.TextBoxUpdated -= new System.EventHandler&lt;WpfRectangularTextAnnotationTransformerTextBoxEventArgs&gt;(textTransformer_TextBoxUpdated);
                    }
            
                    // text transformer of new annotation
                    textTransformer = null;
                    if (e.NewValue is WpfTextAnnotationView)
                    {
                        textTransformer = ((WpfTextAnnotationView)e.NewValue).TextTransformer;
                    }
                    else if (e.NewValue is WpfFreeTextAnnotationView)
                    {
                        textTransformer = ((WpfFreeTextAnnotationView)e.NewValue).TextTransformer;
                    }
            
                    if (textTransformer != null)
                    {
                        // set new font of the text box
                        textTransformer.TextBox.FontFamily = new FontFamily("Arial");
                        textTransformer.TextBox.FontSize = 20.0;
                        textTransformer.TextBox.FontWeight = FontWeights.Bold;
            
                        // set text box location and size calculation mode to manual
                        textTransformer.AutomaticallyCalculateTextBoxLocationAndSize = false;
                        // subscribe to the TextBoxUpdated event of viewer
                        textTransformer.TextBoxUpdated += new System.EventHandler&lt;WpfRectangularTextAnnotationTransformerTextBoxEventArgs&gt;(textTransformer_TextBoxUpdated);
                    }
                }
            
                /// &lt;summary&gt;
                /// Handler of the TextBoxUpdated event.
                /// Location and size of the text box are setting to such values that text box matches
                /// the visible part of the text annotation.
                /// &lt;/summary&gt;
                void textTransformer_TextBoxUpdated(object sender, WpfRectangularTextAnnotationTransformerTextBoxEventArgs e)
                {
                    // get the text annotation
                    IWpfRectangularTextAnnotation textAnnotation = e.TextAnnotation;
                    // get bounding box of the annotation in the coordinate system of the annotation
                    Rect annotationBoundingBox = textAnnotation.GetBoundingBox();
                    // get bounding box of the annotation in the coordinate system of the viewer
                    annotationBoundingBox = TransformRect(annotationBoundingBox, textAnnotation.GetPointTransform(_viewer));
                    // get position of the auto-scroll of the viewer
                    Point autoScrollPosition = _viewer.ViewerState.AutoScrollPosition;
                    // get visible area of the viewer
                    Rect clientRectangle = new Rect(autoScrollPosition.X, autoScrollPosition.Y,
                        _viewer.ViewportWidth, _viewer.ViewportHeight);
                    // intersect the bounding box of the annotation with the visible area of the viewer
                    Rect newBounds = Rect.Intersect(annotationBoundingBox, clientRectangle);
                    // set new bounds
                    if (newBounds.IsEmpty)
                    {
                        e.TextBox.Width = 0.0;
                        e.TextBox.Height = 0.0;
                    }
                    else
                    {
                        e.TextBox.Width = newBounds.Width;
                        e.TextBox.Height = newBounds.Height;
                        Canvas.SetLeft(e.TextBox, newBounds.Left);
                        Canvas.SetTop(e.TextBox, newBounds.Top);
                    }
                }
            
                /// &lt;summary&gt;
                /// Transforms the rectangle and returns the bounding box.
                /// &lt;/summary&gt;
                /// &lt;param name="rect"&gt;The rectangle.&lt;/param&gt;
                /// &lt;param name="pointTransform"&gt;The point transform.&lt;/param&gt;
                /// &lt;returns&gt;The bounding box of transformed rectangle.&lt;/returns&gt;
                private Rect TransformRect(Rect rect, WpfPointTransform pointTransform)
                {
                    Point point1 = pointTransform.TransformPoint(rect.TopLeft);
                    Point point2 = pointTransform.TransformPoint(rect.TopRight);
                    Point point3 = pointTransform.TransformPoint(rect.BottomRight);
                    Point point4 = pointTransform.TransformPoint(rect.BottomLeft);
                    double x = Math.Min(Math.Min(point1.X, point2.X), Math.Min(point3.X, point4.X));
                    double y = Math.Min(Math.Min(point1.Y, point2.Y), Math.Min(point3.Y, point4.Y));
                    double width = Math.Max(Math.Max(point1.X, point2.X), Math.Max(point3.X, point4.X)) - x;
                    double height = Math.Max(Math.Max(point1.Y, point2.Y), Math.Max(point3.Y, point4.Y)) - y;
                    return new Rect(x, y, width, height);
                }
            }
            </code>
            </example>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStampAnnotationView.#ctor(Vintasoft.Imaging.Annotation.StampAnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStampAnnotationView" /> class.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStampAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current 
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStampAnnotationView" /> instance.
            </summary>
            <returns>A new object that is a copy of this
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStampAnnotationView" /> instance.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStampAnnotationView.RenderInContentSpace(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Renders the annotation on the <see cref="T:System.Windows.Media.DrawingContext" />
            in the coordinate space of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStampAnnotationView.RenderShadow(System.Windows.Media.DrawingContext)">
            <summary>
            Draws the shadow of annotation.
            </summary>
            <param name="drawingContext">The <see cref="T:System.Drawing.Graphics" /> to draw on.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfStampAnnotationView.CornerRadius">
            <summary>
            Gets or sets the corner radius of the rectangle.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.RenderWpfAnnotationViewEventArgs">
            <summary>
            Provides data for the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Rendering" /> and
            <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView.Rendered" /> events.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.RenderWpfAnnotationViewEventArgs.#ctor(System.Windows.Media.DrawingContext,Vintasoft.Imaging.Wpf.UI.WpfDrawingSurface)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.RenderWpfAnnotationViewEventArgs" /> class.
            </summary>
            <param name="drawingContext">The <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.RenderWpfAnnotationViewEventArgs.DrawingContext" /> to render on.</param>
            <param name="drawingSurface">The object that provides information about drawing surface.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.RenderWpfAnnotationViewEventArgs.DrawingContext">
            <summary>
            Gets the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.RenderWpfAnnotationViewEventArgs.DrawingContext" /> on which annotation view should be rendered.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.RenderWpfAnnotationViewEventArgs.DrawingSurface">
            <summary>
            Gets the object that provides information about drawing surface.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfUndefinedAnnotationView">
            <summary>
            Determines how to display an undefined annotation.
            </summary>
            <seealso cref="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewFactory.RegisterViewForAnnotationData(System.Type,System.Type)" />
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfUndefinedAnnotationView.#ctor(Vintasoft.Imaging.Annotation.AnnotationData)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfUndefinedAnnotationView" /> class.
            </summary>
            <param name="data">Object that stores the annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfUndefinedAnnotationView.IsPointOnFigure(System.Windows.Point)">
            <summary>
            Indicates whether the specified point is contained within the annotation.
            </summary>
            <param name="point">Point in image space.</param>
            <returns><b>true</b> if the specified point is contained within the annotation;
            otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfUndefinedAnnotationView.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.Print.WpfAnnotatedImagePrintManager">
            <summary>
            Provides functionality for printing <see cref="T:Vintasoft.Imaging.ImageCollection" /> with annotations.
            Also class allows to use the <see cref="T:Vintasoft.Imaging.Wpf.UI.WpfThumbnailViewer" /> for print preview.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.Print.WpfAnnotatedImagePrintManager.#ctor(Vintasoft.Imaging.Annotation.AnnotationDataController)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.Print.WpfAnnotatedImagePrintManager" /> class.
            </summary>
            <param name="annotationDataController">An <see cref="T:Vintasoft.Imaging.Annotation.AnnotationDataController" />
            object which contains information about images with annotations
            which should be printed.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.Print.WpfAnnotatedImagePrintManager.OnBeginPrint(Vintasoft.Imaging.Wpf.Print.WpfPrintEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Wpf.Print.WpfImagePrintManager.BeginPrint" /> event.
            It is called after the <see cref="N:Vintasoft.Imaging.Annotation.Wpf.Print" /> method is called
            and before the first page of the document prints.
            </summary>
            <param name="e">A <see cref="T:Vintasoft.Imaging.Wpf.Print.WpfPrintEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.Print.WpfAnnotatedImagePrintManager.OnImageTilePrinted(Vintasoft.Imaging.Wpf.Print.WpfImageTilePrintEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Wpf.Print.WpfImagePrintManager.ImageTilePrinted" /> event.
            It is called after an image part of a page has printed.
            </summary>
            <param name="e">A <see cref="T:Vintasoft.Imaging.Wpf.Print.WpfImageTilePrintEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.Print.WpfAnnotatedImagePrintManager.OnEndPrint(Vintasoft.Imaging.Wpf.Print.WpfPrintEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Wpf.Print.WpfImagePrintManager.EndPrint" /> event.
            It is called when the last page of the document has printed.
            </summary>
            <param name="e">A <see cref="T:Vintasoft.Imaging.Wpf.Print.WpfPrintEventArgs" /> that contains the event data.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.Print.WpfAnnotatedImagePrintManager.PrintAnnotations">
            <summary>
            Gets or sets a value indicating whether the images
            should be printed with annotations.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.Print.WpfAnnotatedImagePrintManager.Images">
            <summary>
            Gets an image collection that should be printed.
            </summary>
            <value>
            Image collection can be set only in class constructor,
            class uses image collection of annotation data controller.
            </value>
            <exception cref="T:System.NotSupportedException">Thrown if
            an attempt is made to set the property value.</exception>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.Print.WpfAnnotatedImagePrintManager.AllowUserContentPrinting">
            <summary>
            Gets a value indicating whether the user content can be added during printing.
            </summary>
            <value>
            <b>true</b> if there are subscribers to
            the <see cref="E:Vintasoft.Imaging.Wpf.Print.WpfImagePrintManager.PagePrinting" />,
            <see cref="E:Vintasoft.Imaging.Wpf.Print.WpfImagePrintManager.PagePrinted" />,
            <see cref="E:Vintasoft.Imaging.Wpf.Print.WpfImagePrintManager.ImageTilePrinting" /> or
            <see cref="E:Vintasoft.Imaging.Wpf.Print.WpfImagePrintManager.ImageTilePrinted" /> event;
            otherwise, <b>false</b>.
            </value>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewCollectionUndoAction">
            <summary>
            Undo action that stores information about changes in <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection" /> object.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewCollectionUndoAction.#ctor(Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewCollectionUndoAction" /> class.
            </summary>
            <param name="annotationViewCollection">Changed annotation view collection.</param>
            <param name="actionSource">Action source.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewCollectionUndoAction.#ctor(Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewCollectionUndoAction" /> class.
            </summary>
            <param name="annotationViewCollection">Changed annotation view collection.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewCollectionUndoAction.Undo">
            <summary>
            Undoes the action.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewCollectionUndoAction.SetSourceItem(System.ICloneable,System.ICloneable)">
            <summary>
            Changes the source item in <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewCollectionUndoAction.SourceItems" />.
            </summary>
            <param name="oldSourceItem">Old source item of action.</param>
            <param name="newSourceItem">New source item of action.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewCollectionUndoAction.SourceItems">
            <summary>
            Gets the references to the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView" /> objects stored in
            <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection" />.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewCollectionUndoAction.IsValid">
            <summary>
            Gets a value indicating whether the undo action is valid.
            </summary>
            <value>
            <b>true</b> - undo action is valid;
            <b>false</b> - undo action is not valid.
            </value>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewCollectionUndoMonitor">
            <summary>
            Undo monitor that monitors the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection" /> object and
            adds undo action to an undo manager if <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection" /> is changed.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewCollectionUndoMonitor.#ctor(Vintasoft.Imaging.Undo.UndoManager,Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewCollectionUndoMonitor" /> class.
            </summary>
            <param name="undoManager">Undo manager.</param>
            <param name="annotationViewCollection">Annotation view collection to monitor.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewCollectionUndoMonitor.Dispose">
            <summary>
            Disposes all resources used by the undo monitor.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewUndoAction">
            <summary>
            Undo action that stores information about changes in <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView" /> object.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewUndoAction.#ctor(Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection,Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewUndoAction" /> class.
            </summary>
            <param name="annotationViewCollection">Annotation view collection that stores the annotation.</param>
            <param name="annotationView">Annotation view.</param>
            <param name="actionSource">Action source.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewUndoAction.#ctor(Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection,Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewUndoAction" /> class.
            </summary>
            <param name="annotationViewCollection">Annotation view collection that stores the annotation.</param>
            <param name="annotationView">Annotation view.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewUndoAction.Undo">
            <summary>
            Undoes the action.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewUndoAction.ToString">
            <summary>
            Returns the string representation of this object.
            </summary>
            <returns>String representation of this object.</returns>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewUndoAction.IsValid">
            <summary>
            Gets a value indicating whether the undo action is valid.
            </summary>
            <value>
            <b>true</b> - undo action is valid;
            <b>false</b> - undo action is not valid.
            </value>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewUndoMonitor">
            <summary>
            Undo monitor that monitors the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView" /> object and
            adds undo action to an undo manager if <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView" /> is changed.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewUndoMonitor.#ctor(Vintasoft.Imaging.Undo.UndoManager,Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection,Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewUndoMonitor" /> class.
            </summary>
            <param name="undoManager">Undo manager.</param>
            <param name="annotationViewCollection">Annotation view collection to monitor.</param>
            <param name="annotationView">Annotation view to monitor.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.Undo.WpfAnnotationViewUndoMonitor.Dispose">
            <summary>
            Disposes all resources used by the undo monitor.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationObjectConverter">
            <summary>
            Converts Vintasoft.Imaging.Annotation object to System.Windows object and back.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationObjectConverter.CreateWindowsBrush(Vintasoft.Imaging.Annotation.AnnotationBrushBase)">
            <summary>
            Creates the <see cref="T:System.Windows.Media.Brush" /> object from
            the <see cref="T:Vintasoft.Imaging.Annotation.AnnotationBrushBase" /> object.
            </summary>
            <param name="brush">The <see cref="T:Vintasoft.Imaging.Annotation.AnnotationBrushBase" /> object to convert.</param>
            <returns>The <see cref="T:System.Windows.Media.Brush" /> object.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationObjectConverter.CreateAnnotationBrush(System.Windows.Media.Brush)">
            <summary>
            Creates the <see cref="T:Vintasoft.Imaging.Annotation.AnnotationBrushBase" /> object from
            the <see cref="T:System.Windows.Media.Brush" /> object.
            </summary>
            <param name="brush">The <see cref="T:System.Windows.Media.Brush" /> object to convert.</param>
            <returns>The <see cref="T:Vintasoft.Imaging.Annotation.AnnotationBrushBase" /> object.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationObjectConverter.CreateWindowsPen(Vintasoft.Imaging.Annotation.AnnotationPen)">
            <summary>
            Creates the <see cref="T:System.Windows.Media.Pen" /> object from
            the <see cref="T:Vintasoft.Imaging.Annotation.AnnotationPen" /> object.
            </summary>
            <param name="pen">The <see cref="T:Vintasoft.Imaging.Annotation.AnnotationPen" /> object to convert.</param>
            <returns>The <see cref="T:System.Windows.Media.Pen" /> object.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationObjectConverter.CreateAnnotationPen(System.Windows.Media.Pen)">
            <summary>
            Creates the <see cref="T:Vintasoft.Imaging.Annotation.AnnotationPen" /> object from
            the <see cref="T:System.Windows.Media.Pen" /> object.
            </summary>
            <param name="pen">The <see cref="T:System.Windows.Media.Pen" /> object to convert.</param>
            <returns>The <see cref="T:Vintasoft.Imaging.Annotation.AnnotationPen" /> object.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationObjectConverter.CreateWindowsTypeface(Vintasoft.Imaging.Annotation.AnnotationFont,System.Windows.TextDecorationCollection@)">
            <summary>
            Creates the <see cref="T:System.Windows.Media.Typeface" /> object from
            the <see cref="T:Vintasoft.Imaging.Annotation.AnnotationFont" /> object.
            </summary>
            <param name="font">The <see cref="T:Vintasoft.Imaging.Annotation.AnnotationFont" /> object to convert.</param>
            <param name="textDecorationCollection">The text decoration collection.</param>
            <returns>The <see cref="T:System.Windows.Media.Typeface" /> object.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationObjectConverter.CreateAnnotationFont(System.Windows.Media.Typeface,System.Single,System.Windows.TextDecorationCollection)">
            <summary>
            Creates the <see cref="T:Vintasoft.Imaging.Annotation.AnnotationFont" /> object from
            the <see cref="T:System.Windows.Media.Typeface" /> object.
            </summary>
            <param name="typeface">The <see cref="T:System.Windows.Media.Typeface" /> object to convert.</param>
            <param name="size">Font size.</param>
            <param name="textDecorationCollection">The text decoration collection.</param>
            <returns>The <see cref="T:Vintasoft.Imaging.Annotation.AnnotationFont" /> object.</returns>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.AnnotatedThumbnailImageItem">
            <summary>
            Content control that represents a thumbnail of <see cref="T:Vintasoft.Imaging.VintasoftImage" /> with annotations.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.AnnotatedThumbnailImageItem.#ctor(Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotatedThumbnailViewer,Vintasoft.Imaging.VintasoftImage)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.AnnotatedThumbnailImageItem" /> class.
            </summary>
            <param name="viewer">Thumbnail viewer that shows the thumbnails.</param>
            <param name="image">Image whose thumbnail must be shown in the thumbnail viewer.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.AnnotatedThumbnailImageItem.UpdateThumbnailImage">
            <summary>
            Updates the thumbnail image.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.AnnotatedThumbnailImageItem.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Renders the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.AnnotatedThumbnailImageItem" />.
            </summary>
            <param name="drawingContext">An instance of <see cref="T:System.Windows.Media.DrawingContext" />
            used to render the control.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.AnnotatedThumbnailImageItem.ShowAnnotations">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.AnnotatedThumbnailImageItem" />
            shows annotations.
            </summary>
            <value>
            <b>true</b> - annotations are shown on the thumbnail image;
            <b>false</b> - annotations are not shown on the thumbnail image.
            Default value is <b>true</b>.
            </value>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotatedThumbnailViewer">
            <summary>
            Viewer control for displaying the thumbnails of image collection with annotations.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotatedThumbnailViewer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotatedThumbnailViewer" /> class. 
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotatedThumbnailViewer.CreateThumbnailImageItem(Vintasoft.Imaging.VintasoftImage)">
            <summary>
            Creates the <see cref="T:Vintasoft.Imaging.Wpf.UI.ThumbnailImageItem" /> for specified image.
            </summary>
            <param name="image">Image.</param>
            <returns>The <see cref="T:Vintasoft.Imaging.Wpf.UI.ThumbnailImageItem" />.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotatedThumbnailViewer.OnImagesChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Wpf.UI.WpfImageViewerBase.ImagesChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotatedThumbnailViewer.OnAnnotationDataControllerChanged(Vintasoft.Imaging.PropertyChangedEventArgs{Vintasoft.Imaging.Annotation.AnnotationDataController})">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotatedThumbnailViewer.AnnotationDataControllerChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.AnnotationDataControllerChangedEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotatedThumbnailViewer.OnScrollChanged(System.Windows.Controls.ScrollChangedEventArgs)">
            <summary>
            Invoked when a change in scrolling state is detected, such as a change
            in scroll position, extent, or viewport size.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Controls.ScrollChangedEventArgs" /> 
            that contain information about the change in the scrolling state.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotatedThumbnailViewer.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
            <summary>
            Raises the <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> event, 
            using the specified information as part of the eventual event data.
            </summary>
            <param name="sizeInfo">Details of the old and new size involved in the change.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotatedThumbnailViewer.ShowAnnotations">
            <summary>
            Gets or sets a value indicating whether the thumbnail viewer shows annotations on thumbnails.
            </summary>
            <value>
            <b>true</b> - annotations are shown on the thumbnails in the viewer;
            <b>false</b> - annotations are not shown on the thumbnails in the viewer.
            Default value is <b>true</b>.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotatedThumbnailViewer.AnnotationDataController">
            <summary>
            Gets the annotation data controller associated with this viewer.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotatedThumbnailViewer.AnnotationViewController">
            <summary>
            Gets the annotation view controller associated with this viewer.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotatedThumbnailViewer.AnnotationDataControllerChanged">
            <summary>
            Occurs when the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotatedThumbnailViewer.AnnotationDataController" /> property is changed.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer">
            <summary>
            Viewer control for displaying an image collection with annotations.
            </summary>
            <example>This example shows how to open TIFF image in WPF image viewer,
            annotate TIFF image and save annotated TIFF image back to the source file.
            <code lang="VB.NET">
            ''' &lt;summary&gt;
            ''' Open TIFF image in WPF image viewer,
            ''' annotates TIFF image and
            ''' saves annotated TIFF image back to the source file.
            ''' &lt;/summary&gt;
            ''' &lt;param name="filename"&gt;The filename of TIFF image.&lt;/param&gt;
            ''' &lt;param name="viewer"&gt;The annotation viewer.&lt;/param&gt;
            Public Shared Sub OpenAndSaveTiffFile(filename As String, viewer As WpfAnnotationViewer)
                ' open stream
                Using stream As FileStream = File.Open(filename, FileMode.Open, FileAccess.ReadWrite)
                    ' add image to the image viewer
                    viewer.Images.Add(stream)
            
                    ' create annotation data
                    Dim annoData As New HighlightAnnotationData()
                    annoData.Location = New System.Drawing.PointF(150, 150)
                    annoData.Size = New System.Drawing.SizeF(300, 300)
            
                    ' add annotation to an image
                    viewer.AnnotationDataCollection.Add(annoData)
            
                    ' create TIFF encoder
                    Dim tiffEncoder As New TiffEncoder()
                    tiffEncoder.SaveAndSwitchSource = True
                    ' save TIFF image back to the source stream
                    viewer.Images.SaveSync(stream, tiffEncoder)
            
                    ' dispose image
                    viewer.Images.ClearAndDisposeItems()
            
                    ' close stream
                    stream.Close()
                End Using
            End Sub
            </code>
            <code lang="C#">
            /// &lt;summary&gt;
            /// Open TIFF image in WPF image viewer,
            /// annotates TIFF image and
            /// saves annotated TIFF image back to the source file.
            /// &lt;/summary&gt;
            /// &lt;param name="filename"&gt;The filename of TIFF image.&lt;/param&gt;
            /// &lt;param name="viewer"&gt;The annotation viewer.&lt;/param&gt;
            public static void OpenAndSaveTiffFile(string filename, WpfAnnotationViewer viewer)
            {
                // open stream
                using (FileStream stream = File.Open(filename, FileMode.Open, FileAccess.ReadWrite))
                {
                    // add image to the image viewer
                    viewer.Images.Add(stream);
            
                    // create annotation data
                    HighlightAnnotationData annoData = new HighlightAnnotationData();
                    annoData.Location = new System.Drawing.PointF(150, 150);
                    annoData.Size = new System.Drawing.SizeF(300, 300);
                    
                    // add annotation to an image
                    viewer.AnnotationDataCollection.Add(annoData);
            
                    // create TIFF encoder
                    TiffEncoder tiffEncoder = new TiffEncoder();
                    tiffEncoder.SaveAndSwitchSource = true;
                    // save TIFF image back to the source stream
                    viewer.Images.SaveSync(stream, tiffEncoder);
            
                    // dispose image
                    viewer.Images.ClearAndDisposeItems();
            
                    // close stream
                    stream.Close();
                }
            }
            </code>
            </example>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer" /> class.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.GetTransformFromViewerToDip">
            <summary>
            Returns the <see cref="T:Vintasoft.Imaging.Utils.AffineMatrix" /> transformation from 
            the viewer coordinate space to the DIP coordinate space.
            </summary>
            <returns>
            The <see cref="T:Vintasoft.Imaging.Utils.AffineMatrix" /> transformation from 
            the viewer coordinate space to the DIP coordinate space.
            </returns>
            <exception cref="T:System.InvalidOperationException">Thrown if
            viewer does not contain image.</exception>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.PointFromViewerToDip(System.Windows.Point)">
            <summary>
            Transforms point from the viewer space to the DIP space.
            </summary>
            <param name="pt">The point in viewer space.</param>
            <returns>Point in DIP space.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if
            viewer does not contain image.</exception>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.GetTransformFromDipToViewer">
            <summary>
            Returns the <see cref="T:Vintasoft.Imaging.Utils.AffineMatrix" /> transformation from 
            the DIP coordinate space to the viewer coordinate space.
            </summary>
            <returns>
            The <see cref="T:Vintasoft.Imaging.Utils.AffineMatrix" /> transformation from 
            the DIP coordinate space to the viewer coordinate space.
            </returns>
            <exception cref="T:System.InvalidOperationException">Thrown if
            viewer does not contain image.</exception>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.PointFromDipToViewer(System.Windows.Point)">
            <summary>
            Transforms point from DIP space to the viewer space.
            </summary>
            <param name="pt">The point in DIP space.</param>
            <returns>Point in viewer space.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if
            viewer does not contain image.</exception>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.FindAnnotations(System.Windows.Rect)">
            <summary>
            Returns annotations that intersect with specified rectangle.
            </summary>
            <param name="rectangle">The rectangle in the image space.</param>
            <returns>Annotations that intersect with specified rectangle.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.FindAnnotationView(System.Windows.Point)">
            <summary>
            Returns annotation, at specified point, on an image.
            </summary>
            <param name="point">The point in device-independent pixels (1/96th inch).</param>
            <returns>
            An annotation if object is found;
            otherwise, <b>null</b>.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AddAndBuildAnnotation(Vintasoft.Imaging.Annotation.AnnotationData)">
            <summary>
            Adds annotation to the annotation collection of focused image and starts building of annotation.
            </summary>
            <param name="annotationData">Annotation to build.</param>
            <returns>Annotation view.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if annotation can not be built in
            current <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationInteractionMode" /> mode.</exception>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AddAndBuildAnnotation(Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView)">
            <summary>
            Adds annotation to the annotation collection of focused image and starts building of annotation.
            </summary>
            <param name="annotationView">Annotation to build.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if annotation can not be built in
            current <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationInteractionMode" /> mode.</exception>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.FinishAnnotationBuilding">
            <summary>
            Finishes building of annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.CancelAnnotationBuilding">
            <summary>
            Cancels building of annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.BringSelectedAnnotationToFront">
            <summary>
            Brings the selected annotation to the last position in the annotation collection.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.BringSelectedAnnotationToBack">
            <summary>
            Brings the selected annotation to the first position in the annotation collection.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
            <summary>
            Raises the System.Windows.FrameworkElement.SizeChanged event, using the specified
            information as part of the eventual event data.
            </summary>
            <param name="sizeInfo">Details of the old and new size involved in the change.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.OnScrollChanged(System.Windows.Controls.ScrollChangedEventArgs)">
            <summary>
            Invoked when a change in scrolling state is detected, such as a change in
            scroll position, extent, or viewport size.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Controls.ScrollChangedEventArgs" /> that contain information
            about the change in the scrolling state.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.OnImagesChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Wpf.UI.WpfImageViewerBase.ImagesChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.OnFocusedIndexChanged(Vintasoft.Imaging.PropertyChangedEventArgs{System.Int32})">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Wpf.UI.WpfImageViewerBase.FocusedIndexChanged" /> event.
            </summary>
            <param name="e">An event args that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.OnAnnotationDataControllerChanged(Vintasoft.Imaging.PropertyChangedEventArgs{Vintasoft.Imaging.Annotation.AnnotationDataController})">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationDataControllerChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.PropertyChangedEventArgs`1" />
            that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.OnAnnotationBuildingStarted(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationBuildingStarted" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs" /> that
            contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.OnAnnotationBuildingCanceled(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs)">
            <summary>
            Raises the <see cref="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.OnAnnotationBuildingCanceled(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs)" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs" /> that
            contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.OnAnnotationBuildingFinished(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationBuildingFinished" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs" /> that
            contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.OnAnnotationTransformingStarted(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationTransformingStarted" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs" /> that
            contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.OnAnnotationTransformingFinished(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationTransformingFinished" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs" /> that
            contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.OnAnnotationInteractionModeChanging(Vintasoft.Imaging.Annotation.UI.AnnotationInteractionModeChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationInteractionModeChanging" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.UI.AnnotationInteractionModeChangedEventArgs" /> that
            contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.OnAnnotationInteractionModeChanged(Vintasoft.Imaging.Annotation.UI.AnnotationInteractionModeChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationInteractionModeChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.UI.AnnotationInteractionModeChangedEventArgs" /> that
            contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.OnFocusedAnnotationViewChanging(Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.FocusedAnnotationViewChanging" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewChangingEventArgs" /> that
            contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.OnFocusedAnnotationViewChanged(Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.FocusedAnnotationViewChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewChangedEventArgs" /> that
            contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.OnAnnotationViewCollectionChanged(Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationViewCollectionChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollectionChangedEventArgs" /> that
            contains the event data.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationSelectionTool">
            <summary>
            Gets the rectangular selection tool that performs multi selection of annotations.
            </summary>
            <seealso cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.SelectedAnnotations" />
            <seealso cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationMultiSelect" />
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationMultiSelect">
            <summary>
            Gets or sets a value indicating whether the annotation viewer allows 
            multiple selection of annotations.
            </summary>
            <value>
            <b>true</b> if the annotation viewer allows multiple annotations to be selected together
            or concurrently;
            otherwise, <b>false</b>.
            Default value is <b>true</b>.
            </value>
            <seealso cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.SelectedAnnotations" />
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.SelectedAnnotations">
            <summary>
            Gets the collection that contains selected annotations.
            </summary>
            <seealso cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationMultiSelect" />
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationInteractionMode">
            <summary>
            Gets or sets the interaction mode of annotations.
            </summary>
            <value>
            Default value is AnnotationInteractionMode.Author.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.IsAnnotationBuilding">
            <summary>
            Gets a value indicating whether the annotation viewer builds the annotation at the moment.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.IsAnnotationBoundingRectEnabled">
            <summary>
            Gets or sets a value indicating whether the annotation can be build only in specified region.
            </summary>
            <value>
            <b>true</b> - annotation can be build only in region specified by
            the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationBoundingRect" /> property;
            <b>false</b> - annotation can be build everywhere.
            </value>
            <seealso cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationBoundingRect" />
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationBoundingRect">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Rect" />, in image space,
            in device-independent pixels (1/96th inch),
            that restricts the area of image where annotation can be build/transformed.
            </summary>
            <value>
            <see cref="P:System.Windows.Rect.Empty" /> means that annotation can be build only within the image.
            </value>
            <remarks>
            This property has effect only for rectangular and derived annotations.
            </remarks>
            <seealso cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.IsAnnotationBoundingRectEnabled" />
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.RotationAssistant">
            <summary>
            Gets the rotation assistant used for rotation of selected annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.FocusedAnnotationData">
            <summary>
            Gets or sets the focused annotation data.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.FocusedAnnotationView">
            <summary>
            Gets or sets the focused annotation view.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationVisualTool">
            <summary>
            Gets the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool" /> used for interaction with annotations.
            </summary>
            <remarks>
            Use the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool" /> instance returned by this property
            (do not create new instance of <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool" /> class) if
            the viewer must use the <see cref="T:Vintasoft.Imaging.Wpf.UI.VisualTools.WpfCompositeVisualTool" /> as active visual tool and
            the <see cref="T:Vintasoft.Imaging.Wpf.UI.VisualTools.WpfCompositeVisualTool" /> must contain <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool" />.<br />
            <br />
            Visual tool, returned by this property, will be used by viewer only when
            you set this tool as current tool of viewer using the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.VisualTool" /> property.
            </remarks>
            <seealso cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.VisualTool" />
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.VisualTool">
            <summary>
            Gets or set the current <see cref="T:Vintasoft.Imaging.Wpf.UI.VisualTools.WpfVisualTool" /> of this <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer" />.
            </summary>
            <remarks>
            Use the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool" /> instance returned by this property
            (do not create new instance of <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool" /> class) if
            the viewer must use the <see cref="T:Vintasoft.Imaging.Wpf.UI.VisualTools.WpfCompositeVisualTool" /> as active visual tool and
            the <see cref="T:Vintasoft.Imaging.Wpf.UI.VisualTools.WpfCompositeVisualTool" /> must contain <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool" />.
            </remarks>
            <seealso cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationVisualTool" />
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationViewCollection">
            <summary>
            Gets the current annotation view collection.
            </summary>
            <remarks>
            Current annotation view collection is changed when image in the viewer is changed.
            </remarks>
            <seealso cref="P:Vintasoft.Imaging.Wpf.UI.WpfImageViewerBase.FocusedIndex" />
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationDataCollection">
            <summary>
            Gets the current annotation data collection.
            </summary>
            <remarks>
            Current annotation data collection is changed when image in the viewer is changed.
            </remarks>
            <seealso cref="P:Vintasoft.Imaging.Wpf.UI.WpfImageViewerBase.FocusedIndex" />
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationDataController">
            <summary>
            Gets the annotation data controller associated with this viewer.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationViewController">
            <summary>
            Gets the annotation view controller associated with this viewer.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationDataControllerChanged">
            <summary>
            Occurs when the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationDataController" /> property is changed.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationViewCollectionChanged">
            <summary>
            Occurs when the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationViewCollection" /> property is changed.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.FocusedAnnotationViewChanging">
            <summary>
            Occurs when the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.FocusedAnnotationData" /> is changing.
            </summary>
            <remarks>
            This event is thread safe.
            </remarks>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.FocusedAnnotationViewChanged">
            <summary>
            Occurs when the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.FocusedAnnotationData" /> is changed.
            </summary>
            <remarks>
            This event is thread safe.
            </remarks>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationInteractionModeChanging">
            <summary>
            Occurs when the annotation selection mode is changing.
            </summary>
            <remarks>
            This event is thread safe.
            </remarks>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationInteractionModeChanged">
            <summary>
            Occurs when the annotation selection mode is changed.
            </summary>
            <remarks>
            This event is thread safe.
            </remarks>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationBuildingStarted">
            <summary>
            Occurs when building of annotation is started.
            </summary>
            <remarks>
            This event is thread safe.
            </remarks>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationBuildingCanceled">
            <summary>
            Occurs when building of annotation is canceled.
            </summary>
            <remarks>
            This event is thread safe.
            </remarks>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationBuildingFinished">
            <summary>
            Occurs when building of annotation is finished.
            </summary>
            <remarks>
            This event is thread safe.
            </remarks>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationTransformingStarted">
            <summary>
            Occurs when the annotation transforming is started.
            </summary>
            <remarks>
            This event is thread safe.
            </remarks>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationTransformingFinished">
            <summary>
            Occurs when the annotation transforming is finished.
            </summary>
            <remarks>
            This event is thread safe.
            </remarks>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollectionChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationViewCollectionChanged" /> and
            <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationViewCollectionChanged" /> events.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollectionChangedEventArgs.#ctor(Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection,Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection)">
            <summary>
            Initializes a new instance of
            the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollectionChangedEventArgs" /> class.
            </summary>
            <param name="oldValue">Previously focused annotation view collection.</param>
            <param name="newValue">New focused annotation view collection.</param>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewChangingEventArgs">
            <summary>
            Provides data for the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.FocusedAnnotationViewChanging" /> and
            <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.FocusedAnnotationViewChanging" /> events.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewChangingEventArgs.#ctor(Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView,Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewChangingEventArgs" /> class.
            </summary>
            <param name="oldValue">Previously focused annotation view.</param>
            <param name="newValue">New focused annotation view.</param>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs">
            <summary>
            Provides data for the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationTransformingStarted" />,
            <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationTransformingFinished" />,
            <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationBuildingStarted" />,
            <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationBuildingCanceled" /> and
            <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.AnnotationBuildingFinished" /> events.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs.#ctor(Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs" /> class.
            </summary>
            <param name="annotationView">The annotation view.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs.AnnotationView">
            <summary>
            Gets the building annotation view.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.SelectedWpfAnnotationViewCollection">
            <summary>
            Represents a collection of selected annotation views.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.SelectedWpfAnnotationViewCollection.ClearAndAddRange(Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView[])">
            <summary>
            Clears collection and adds the elements of an <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView" /> array
            to the end of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.SelectedWpfAnnotationViewCollection" />.
            </summary>
            <param name="items">The <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView" /> array 
            whose elements should be added to the end 
            of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.SelectedWpfAnnotationViewCollection" />.</param>      
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.SelectedWpfAnnotationViewCollection.AddRange(Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView[])">
            <summary>
            Adds the elements of an <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView" /> array 
            to the end of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.SelectedWpfAnnotationViewCollection" />.
            </summary>
            <param name="items">The <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView" /> array 
            whose elements should be added to the end 
            of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.SelectedWpfAnnotationViewCollection" />.</param>      
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.SelectedWpfAnnotationViewCollection.ToArray">
            <summary>
            Copies the elements of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.SelectedWpfAnnotationViewCollection" /> to a new array.
            </summary>
            <returns>An array containing the elements of
            the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.SelectedWpfAnnotationViewCollection" />.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.SelectedWpfAnnotationViewCollection.ClearItems">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.SelectedWpfAnnotationViewCollection.InsertItem(System.Int32,Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView)">
            <summary>
            Inserts an element into the collection at the specified index.
            </summary>
            <param name="index">The object to insert.</param>
            <param name="item">The zero-based index at which item should be inserted.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.SelectedWpfAnnotationViewCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the collection.
            </summary>
            <param name="index">The zero-based index at which item should be removed.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.SelectedWpfAnnotationViewCollection.SetItem(System.Int32,Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView)">
            <summary>
            Replaces the element at the specified index.
            </summary>
            <param name="index">The new value for the element at the specified index.</param>
            <param name="item">The zero-based index of the element to replace.</param>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.SelectedWpfAnnotationViewCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool">
            <summary>
            Visual tool that performs interaction between user and annotations.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool" /> class.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AddAndBuildAnnotation(Vintasoft.Imaging.Annotation.AnnotationData)">
            <summary>
            Adds annotation to the annotation collection of focused image and starts building of annotation.
            </summary>
            <param name="annotationData">Annotation to build.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if annotation can not be built in
            current <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationInteractionMode" /> mode.</exception>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AddAndBuildAnnotation(Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView)">
            <summary>
            Adds annotation to the annotation collection of focused image and starts building of annotation.
            </summary>
            <param name="annotationView">Annotation to build.</param>
            <exception cref="T:System.InvalidOperationException">Thrown if annotation can not be built in
            current <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationInteractionMode" /> mode.</exception>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.SetFocusedAnnotationView(Vintasoft.Imaging.Annotation.AnnotationData)">
            <summary>
            Sets the annotation view that associated with specified 
            annotation data as focused annotation view.
            </summary>
            <param name="annotationData">Annotation data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.FinishAnnotationBuilding">
            <summary>
            Finishes building of annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.CancelAnnotationBuilding">
            <summary>
            Cancels building of annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.IsPointOnInteractionArea(System.Windows.Point)">
            <summary>
            Determines that the specified point is located on interaction area.
            </summary>
            <param name="x">The x coordinate, in viewer space.</param>
            <param name="y">The y coordinate, in viewer space.</param>
            <param name="mouseButton">The mouse button.</param>
            <returns>
            <b>true</b> if point is located on interaction area;
            otherwise <b>false</b>.
            </returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.BeginInteraction(Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.IWpfInteractiveObject)">
            <summary>
            Begins an active interaction.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.FinishInteraction(Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.IWpfInteractiveObject)">
            <summary>
            Finishes an active interaction.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> 
            attached event reaches an element in its route that is derived from this class.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> 
            attached event reaches an element in its route that is derived from this class.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> 
            attached event reaches an element in its route that is derived from this class.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that
            contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.FindAnnotationView(System.Windows.Point)">
            <summary>
            Finds an annotation view at specified point, in the image viewer space.
            </summary>
            <param name="p">The point, in the image viewer space.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.OnActiveInteractionControllerChanged(Vintasoft.Imaging.PropertyChangedEventArgs{Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.IWpfInteractionController})">
            <summary>
            Occurs when active interaction controller is changed.
            </summary>
            <param name="e">An event args that contains the event data.</param>        
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.OnFocusedItemChanging(Vintasoft.Imaging.PropertyChangingEventArgs{Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.IWpfInteractiveObject})">
            <summary>
            Occurs when focused item is changing.
            </summary>
            <param name="e">An event args that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.OnFocusedItemChanged(Vintasoft.Imaging.PropertyChangedEventArgs{Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.IWpfInteractiveObject})">
            <summary>
            Occurs when focused item is changed.
            </summary>
            <param name="e">An event args that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.OnAnnotationTransformingStarted(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationTransformingStarted" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.OnAnnotationTransformingFinished(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationTransformingFinished" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.OnAnnotationBuildingStarted(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationBuildingStarted" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.OnAnnotationBuildingCanceled(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationBuildingCanceled" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.OnAnnotationBuildingFinished(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationBuildingFinished" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.OnFocusedAnnotationViewChanging(Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.FocusedAnnotationViewChanging" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewChangingEventArgs" /> that contains the event data.</param>                
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.OnFocusedAnnotationViewChanged(Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.FocusedAnnotationViewChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewChangedEventArgs" /> that contains the event data.</param>                
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.OnAnnotationViewCollectionChanged(Vintasoft.Imaging.PropertyChangedEventArgs{Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewCollection})">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationViewCollectionChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.PropertyChangingEventArgs`1" /> that contains the event data.</param>                
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.OnAnnotationInteractionModeChanging(Vintasoft.Imaging.Annotation.UI.AnnotationInteractionModeChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationInteractionModeChanging" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.PropertyChangingEventArgs`1" /> that contains the event data.</param>        
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.OnAnnotationInteractionModeChanged(Vintasoft.Imaging.Annotation.UI.AnnotationInteractionModeChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationInteractionModeChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.PropertyChangedEventArgs`1" /> that contains the event data.</param>        
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.OnHoveredAnnotationViewChanging(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.HoveredAnnotationViewChanging" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.OnHoveredAnnotationViewChanged(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.HoveredAnnotationViewChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationViewEventArgs" /> that contains the event data.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.ToolName">
            <summary>
            Gets the name of visual tool.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.HoveredAnnotationView">
            <summary>
            Gets or sets the hovered annotation view.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationViewCollection">
            <summary>
            Gets or sets an annotation collection that will be viewed and edited
            using the visual tool.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.FocusedAnnotationView">
            <summary>
            Gets or sets the focused annotation view.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.FocusedItem">
            <summary>
            Gets or sets a focused item.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.RotationAssistant">
            <summary>
            Gets the rotation assistant used for rotation of selected annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.RotationPoint">
            <summary>
            Gets or sets the rotation point.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.RotationPointDistance">
            <summary>
            Gets or sets a distance from the annotation bounding box to the rotation point, in pixels.
            </summary>
            <value>Default value is <b>20</b>.</value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.IsAnnotationBoundingRectEnabled">
            <summary>
            Gets or sets a value indicating whether the annotation can be build only in specified region.
            </summary>
            <value>
            <b>true</b> - annotation can be build only in region specified by
            the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationBoundingRect" /> property;
            <b>false</b> - annotation can be build everywhere.
            </value>
            <seealso cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationBoundingRect" />
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationBoundingRect">
            <summary>
            Gets or sets a <see cref="T:System.Windows.Rect" />, in image space,
            in device-independent pixels (1/96th inch),
            that restricts the area of image where annotation can be build.
            </summary>
            <value>
            <see cref="P:System.Windows.Rect.Empty" /> means that annotation can be build only within the image.
            </value>
            <remarks>
            This property has effect only for rectangular and derived annotations.
            </remarks>
            <seealso cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.IsAnnotationBoundingRectEnabled" />
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationInteractionMode">
            <summary>
            Gets or sets the interaction mode of annotations.
            </summary>
            <value>
            Default value is <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationInteractionMode" />.Author.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationSelectionBrush">
            <summary>
            Gets the <see cref="T:System.Windows.Media.Brush" /> that uses to fill the annotation selection.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationSelectionPen">
            <summary>
            Gets the <see cref="T:System.Windows.Media.Pen" /> that uses to draw the annotation selection.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.SelectedAnnotations">
            <summary>
            Gets the collection that contains selected annotations.
            </summary>
            <remarks>
            Collection, associated with this property, is updated
            when user selects annotation(s) using mouse and
            multi-selection is enabled (<see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.MultiSelect" /> == <b>true</b>).<br />
            <br />
            Collection associated with this property is NOT updated
            when user selects annotation(s) using mouse
            and multi-selection is disabled (<see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.MultiSelect" /> == <b>false</b>).<br />
            <br />
            Collection associated with this property can be programmatically updated.
            </remarks>
            <seealso cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.MultiSelect" />
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.MultiSelect">
            <summary>
            Gets or sets a value indicating whether the annotation viewer allows 
            multiple selection of annotations.
            </summary>
            <value>
            <b>true</b> if the annotation viewer allows multiple annotations to be selected together
            or concurrently;
            otherwise, <b>false</b>.
            Default value is <b>true</b>.
            </value>
            <seealso cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.SelectedAnnotations" />
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationViewCollectionChanged">
            <summary>
            Occurs when the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationViewCollection" /> property is changed.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.FocusedAnnotationViewChanging">
            <summary>
            Occurs when the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.FocusedAnnotationView" /> is changing.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.FocusedAnnotationViewChanged">
            <summary>
            Occurs when the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.FocusedAnnotationView" /> is changed.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationInteractionModeChanging">
            <summary>
            Occurs when the annotation interaction mode is changing.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationInteractionModeChanged">
            <summary>
            Occurs when the annotation interaction mode is changed.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationBuildingStarted">
            <summary>
            Occurs when the annotation building is started.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationBuildingCanceled">
            <summary>
            Occurs when the annotation building is canceled.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationBuildingFinished">
            <summary>
            Occurs when the annotation building is finished.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationTransformingStarted">
            <summary>
            Occurs when the annotation transforming is started.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.AnnotationTransformingFinished">
            <summary>
            Occurs when the annotation transforming is finished.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.HoveredAnnotationViewChanging">
            <summary>
            Occurs when the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.HoveredAnnotationView" /> is changing.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.HoveredAnnotationViewChanged">
            <summary>
            Occurs when the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.HoveredAnnotationView" /> is changed.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewer.FocusedAnnotationViewChanged" /> and
            <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.WpfAnnotationVisualTool.FocusedAnnotationViewChanged" /> events.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewChangedEventArgs.#ctor(Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView,Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationView)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfAnnotationViewChangedEventArgs" /> class.
            </summary>
            <param name="oldValue">Previously focused annotation view.</param>
            <param name="newValue">New focused annotation view.</param>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfLeaderLineAnnotationBuilder">
            <summary>
            Interaction controller that builds the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.WpfLeaderLineAnnotationView" />.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointBuilder">
            <summary>
            Interaction controller that builds a point-based annotation by points.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationInteractionControllerBase">
            <summary>
            Provides a base class for interaction controllers of point-based annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationInteractionControllerBase.#ctor(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.IWpfPointBasedAnnotation)">
            <summary>
            Initializes a new instance of
            the <see cref="T:Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedObjectInteractionControllerBase" /> class.
            </summary>
            <param name="interactiveObject">A point-based annotation.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationInteractionControllerBase.GetObjectPoints">
            <summary>
            Returns the points of annotation.
            </summary>
            <returns>An array of <see cref="T:System.Windows.Point" />.</returns>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationInteractionControllerBase.SetObjectPoints(System.Windows.Point[])">
            <summary>
            Sets the points of annotation and resets this transformer.
            </summary>
            <param name="points">An array of <see cref="T:System.Windows.Point" />.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationInteractionControllerBase.SetObjectPoint(System.Int32,System.Windows.Point)">
            <summary>
            Sets a point at specified index of annotation.
            </summary>
            <param name="index">An index of point to set.</param>
            <param name="point">A point to set.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationInteractionControllerBase.RotationAngle">
            <summary>
            Gets or sets the rotation angle of point-based annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointBuilder.#ctor(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.IWpfPointBasedAnnotation,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.UI.VisualTools.UserInteraction.PointBasedObjectPointBuilder" /> class.
            </summary>
            <param name="interactiveObject">A point-based interactive object.</param>
            <param name="minPointCount">Minimum count of points in this object.</param>
            <param name="maxPointCount">
            Maximum count of points in this object.
            Set value of this parameter to 0 if maximum count of points is not limited.
            </param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointBuilder.PerformInteraction(Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.WpfInteractionEventArgs)">
            <summary>
            Performs an interaction between user and interaction area of interaction object.
            </summary>
            <param name="args">An interaction event args.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointBuilder.MinPointCount">
            <summary>
            Gets a minimum count of points in this object.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointBuilder.MaxPointCount">
            <summary>
            Gets a maximum count of points in this object.
            </summary>
            <value>
            Maximum count of points in this object,
            or 0, if maximum count of points is not limited.
            </value>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfLeaderLineAnnotationBuilder.#ctor(Vintasoft.Imaging.Annotation.Wpf.UI.WpfLeaderLineAnnotationView,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfLeaderLineAnnotationBuilder" /> class.
            </summary>
            <param name="leaderLine">Leader line object.</param>
            <param name="minPointCount">Minimum count of points in this object.</param>
            <param name="maxPointCount">
            Maximum count of points in this object.
            Set value of this parameter to 0 if maximum count of points is not limited.
            </param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfLeaderLineAnnotationBuilder.OnActivate">
            <summary>
            Invoked when interaction controller is activated.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfLeaderLineAnnotationBuilder.PerformInteraction(Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.WpfInteractionEventArgs)">
            <summary>
            Performs an interaction between user and interaction area of interaction object.
            </summary>
            <param name="args">An interaction event args.</param>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationFreehandBuilder">
            <summary>
            Interaction controller that builds a point-based annotation using "freehand" style.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationFreehandBuilder.#ctor(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.IWpfPointBasedAnnotation,System.Int32,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationFreehandBuilder" /> class.
            </summary>
            <param name="interactiveObject">A point-based annotation.</param>
            <param name="minPointCount">Minimum count of points in annotation.</param>
            <param name="minLineLength">Minimum distance between neighbouring points.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationFreehandBuilder.PerformInteraction(Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.WpfInteractionEventArgs)">
            <summary>
            Performs an interaction between user and interaction area of interaction object.
            </summary>
            <param name="args">An interaction event args.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationFreehandBuilder.FinishBuildingByDoubleMouseClick">
            <summary>
            Gets or sets a value indicating whether the annotation building must be finished
            when left mouse button is double clicked.
            </summary>
            <value>
            <b>true</b> - annotation building will be finished when left mouse button is double clicked;
            <b>false</b> - annotation building will be finished when left mouse button is released.<br />
            Default value is <b>true</b>.
            </value>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationLineBuilder">
            <summary>
            Interaction controller that builds a point-based annotation by lines.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationLineBuilder.#ctor(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.IWpfPointBasedAnnotation)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.UI.VisualTools.UserInteraction.PointBasedObjectLineBuilder" /> class.
            </summary>
            <param name="interactiveObject">A point-based interactive object.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationLineBuilder.PerformInteraction(Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.WpfInteractionEventArgs)">
            <summary>
            Performs an interaction between user and interaction area of interaction object.
            </summary>
            <param name="args">An interaction event args.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationLineBuilder.DefaultSize">
            <summary>
            Gets or sets a default size of interactive object.
            </summary>
            <value>
            Default value is <see cref="P:System.Windows.Size.Empty" />.
            </value>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointTransformer">
            <summary>
            Interaction controller that transforms point-based annotation by points.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointTransformer.#ctor(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.IWpfPointBasedAnnotation)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointTransformer" /> class.
            </summary>
            <param name="interactiveObject">Interactive object which must be controlled
            by this controller.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointTransformer.UpdateInteractionAreas(Vintasoft.Imaging.Wpf.UI.WpfImageViewer)">
            <summary>
            Updates the interaction areas of this controller.
            </summary>
            <param name="viewer">An image viewer.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointTransformer.PerformInteraction(Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.WpfInteractionEventArgs)">
            <summary>
            Performs an interaction between user and interaction area of interaction object.
            </summary>
            <param name="args">An interaction event args.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointTransformer.Reset">
            <summary>
            Resets the interaction controller.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointTransformer.RemovePoints(System.Int32[])">
            <summary>
            Removes points from the interactive object.
            </summary>
            <param name="indexes">The array of point index.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointTransformer.RemovePoint(System.Int32)">
            <summary>
            Removes selected point from an the interactive object.
            </summary>
            <param name="index">A point index.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointTransformer.InsertPoint(System.Windows.Point)">
            <summary>
            Inserts new point to the interactive object.
            </summary>
            <param name="newPoint">A point to insert.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointTransformer.InsertPoint(System.Windows.Point,System.Int32)">
            <summary>
            Inserts new point at specified index to the interactive object.
            </summary>
            <param name="newPoint">A point to insert.</param>
            <param name="pointIndex">An index of new point.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointTransformer.TranslatePoints(System.Int32[],System.Single,System.Single)">
            <summary>
            Translates points of interactive object.
            </summary>
            <param name="indexes">An array op point index.</param>
            <param name="dx">The x value by which to translate points.</param>
            <param name="dy">The y value by which to translate points.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointTransformer.TranslatePoints(System.Single,System.Single)">
            <summary>
            Translates points at specified offset.
            </summary>
            <param name="dx">The x value by which to translate points.</param>
            <param name="dy">The y value by which to translate points.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointTransformer.PolygonPointTemplate">
            <summary>
            Gets a template of polygon interaction point.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointTransformer.CanMove">
            <summary>
            Gets or sets a value indicating whether the interactive object can be moved.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointTransformer.SelectedPointIndexes">
            <summary>
            Gets or sets an array of indices of selected points of interactive object.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointTransformer.InteractionPointBackColor">
            <summary>
            Gets or sets a back color of interaction point of interactive object.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationPointTransformer.SelectedInteractionPointBackColor">
            <summary>
            Gets or sets a back color of selected interaction point of interactive object.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationRectangularTransformer">
            <summary>
            Interaction controller that transforms (moves/resizes/rotates) a line-based annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationRectangularTransformer.#ctor(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.IWpfPointBasedAnnotation)">
            <summary>
            Initializes a new instance of
            the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationRectangularTransformer" /> class.
            </summary>
            <param name="interactiveObject">An interactive object.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationRectangularTransformer.UpdateInteractionAreas(Vintasoft.Imaging.Wpf.UI.WpfImageViewer)">
            <summary>
            Updates the interaction areas of this controller.
            </summary>
            <param name="viewer">An image viewer.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationRectangularTransformer.Reset">
            <summary>
            Resets the interaction controller.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationRectangularTransformer.PerformInteraction(Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.WpfInteractionEventArgs)">
            <summary>
            Performs an interaction between user and interaction area of interaction object.
            </summary>
            <param name="args">An interaction event args.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationRectangularTransformer.BoundingBoxArea">
            <summary>
            Gets or sets a selection area of object's bounding box.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationRectangularTransformer.CanMove">
            <summary>
            Gets or sets a value indicating whether the interactive object can be moved.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationRectangularTransformer.CanRotate">
            <summary>
            Gets or sets a value indicating whether the interactive object can be rotated.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationRectangularTransformer.CanResize">
            <summary>
            Gets or sets a value indicating whether the size of the interactive object
            can be resized.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationRectangularTransformer.CanMirror">
            <summary>
            Gets or sets a value indicating whether the size of the interactive object
            can be mirrored.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationRectangularTransformer.ResizePoints">
            <summary>
            Gets a set of interaction points that used for resizing of annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationRectangularTransformer.RotationAssistant">
            <summary>
            Gets or sets the rotation assistant.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationRectangularTransformer.RotationPoint">
            <summary>
            Gets or sets the rotation point.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationRectangularTransformer.RotationCenterPoint">
            <summary>
            Gets or sets the rotation point.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfPointBasedAnnotationRectangularTransformer.RotationPointDistance">
            <summary>
            Gets or sets a distance from the object bounding box to the rotation point, in pixels.
            </summary>
            <value>Default value is 20.</value>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularAnnotationBuilder">
            <summary>
            Interaction controller that builds rectangular annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularAnnotationBuilder.#ctor(Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.IWpfRectangularInteractiveObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularAnnotationBuilder" /> class.
            </summary>
            <param name="annotation">An annotation.</param>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularAnnotationTransformer">
            <summary>
            Interaction controller that transforms rectangular annotation.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularAnnotationTransformer.#ctor(Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.IWpfRectangularInteractiveObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularAnnotationTransformer" /> class.
            </summary>
            <param name="annotation">An annotation.</param>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer">
            <summary>
            Interaction controller that transforms rectangular text annotation.
            </summary>
            <example>
            This example shows how to set custom font, location and size of the text box of the text annotations:
            <code lang="VB.NET">
            Public Class MainWindow
                Inherits Window
                ''' &lt;summary&gt;
                ''' Main annotation viewer.
                ''' &lt;/summary&gt;
                Private _viewer As WpfAnnotationViewer
            
                ' ...
            
                Public Sub New()
                    ' ...
            
                    ' subscribe to the FocusedAnnotationViewChanged event of viewer
            
                        ' ...
                    AddHandler _viewer.FocusedAnnotationViewChanged, New System.EventHandler(Of WpfAnnotationViewChangedEventArgs)(AddressOf _viewer_FocusedAnnotationViewChanged)
                End Sub
            
                ''' &lt;summary&gt;
                ''' Handler of the FocusedAnnotationViewChanged event.
                ''' &lt;/summary&gt;
                Private Sub _viewer_FocusedAnnotationViewChanged(sender As Object, e As WpfAnnotationViewChangedEventArgs)
                    ' text transformer of old annotation
                    Dim textTransformer As WpfRectangularTextAnnotationTransformer = Nothing
                    If TypeOf e.OldValue Is WpfTextAnnotationView Then
                        textTransformer = DirectCast(e.OldValue, WpfTextAnnotationView).TextTransformer
                    ElseIf TypeOf e.OldValue Is WpfFreeTextAnnotationView Then
                        textTransformer = DirectCast(e.OldValue, WpfFreeTextAnnotationView).TextTransformer
                    End If
            
                    If textTransformer IsNot Nothing Then
                        ' unsubscribe from the TextBoxUpdated event of viewer
                        RemoveHandler textTransformer.TextBoxUpdated, New System.EventHandler(Of WpfRectangularTextAnnotationTransformerTextBoxEventArgs)(AddressOf textTransformer_TextBoxUpdated)
                    End If
            
                    ' text transformer of new annotation
                    textTransformer = Nothing
                    If TypeOf e.NewValue Is WpfTextAnnotationView Then
                        textTransformer = DirectCast(e.NewValue, WpfTextAnnotationView).TextTransformer
                    ElseIf TypeOf e.NewValue Is WpfFreeTextAnnotationView Then
                        textTransformer = DirectCast(e.NewValue, WpfFreeTextAnnotationView).TextTransformer
                    End If
            
                    If textTransformer IsNot Nothing Then
                        ' set new font of the text box
                        textTransformer.TextBox.FontFamily = New FontFamily("Arial")
                        textTransformer.TextBox.FontSize = 20.0
                        textTransformer.TextBox.FontWeight = FontWeights.Bold
            
                        ' set text box location and size calculation mode to manual
                        textTransformer.AutomaticallyCalculateTextBoxLocationAndSize = False
                        ' subscribe to the TextBoxUpdated event of viewer
                        AddHandler textTransformer.TextBoxUpdated, New System.EventHandler(Of WpfRectangularTextAnnotationTransformerTextBoxEventArgs)(AddressOf textTransformer_TextBoxUpdated)
                    End If
                End Sub
            
                ''' &lt;summary&gt;
                ''' Handler of the TextBoxUpdated event.
                ''' Location and size of the text box are setting to such values that text box matches
                ''' the visible part of the text annotation.
                ''' &lt;/summary&gt;
                Private Sub textTransformer_TextBoxUpdated(sender As Object, e As WpfRectangularTextAnnotationTransformerTextBoxEventArgs)
                    ' get the text annotation
                    Dim textAnnotation As IWpfRectangularTextAnnotation = e.TextAnnotation
                    ' get bounding box of the annotation in the coordinate system of the annotation
                    Dim annotationBoundingBox As Rect = textAnnotation.GetBoundingBox()
                    ' get bounding box of the annotation in the coordinate system of the viewer
                    annotationBoundingBox = TransformRect(annotationBoundingBox, textAnnotation.GetPointTransform(_viewer))
                    ' get position of the auto-scroll of the viewer
                    Dim autoScrollPosition As Point = _viewer.ViewerState.AutoScrollPosition
                    ' get visible area of the viewer
                    Dim clientRectangle As New Rect(autoScrollPosition.X, autoScrollPosition.Y, _viewer.ViewportWidth, _viewer.ViewportHeight)
                    ' intersect the bounding box of the annotation with the visible area of the viewer
                    Dim newBounds As Rect = Rect.Intersect(annotationBoundingBox, clientRectangle)
                    ' set new bounds
                    If newBounds.IsEmpty Then
                        e.TextBox.Width = 0.0
                        e.TextBox.Height = 0.0
                    Else
                        e.TextBox.Width = newBounds.Width
                        e.TextBox.Height = newBounds.Height
                        Canvas.SetLeft(e.TextBox, newBounds.Left)
                        Canvas.SetTop(e.TextBox, newBounds.Top)
                    End If
                End Sub
            
                ''' &lt;summary&gt;
                ''' Transforms the rectangle and returns the bounding box.
                ''' &lt;/summary&gt;
                ''' &lt;param name="rect"&gt;The rectangle.&lt;/param&gt;
                ''' &lt;param name="pointTransform"&gt;The point transform.&lt;/param&gt;
                ''' &lt;returns&gt;The bounding box of transformed rectangle.&lt;/returns&gt;
                Private Function TransformRect(rect As Rect, pointTransform As WpfPointTransform) As Rect
                    Dim point1 As Point = pointTransform.TransformPoint(rect.TopLeft)
                    Dim point2 As Point = pointTransform.TransformPoint(rect.TopRight)
                    Dim point3 As Point = pointTransform.TransformPoint(rect.BottomRight)
                    Dim point4 As Point = pointTransform.TransformPoint(rect.BottomLeft)
                    Dim x As Double = Math.Min(Math.Min(point1.X, point2.X), Math.Min(point3.X, point4.X))
                    Dim y As Double = Math.Min(Math.Min(point1.Y, point2.Y), Math.Min(point3.Y, point4.Y))
                    Dim width As Double = Math.Max(Math.Max(point1.X, point2.X), Math.Max(point3.X, point4.X)) - x
                    Dim height As Double = Math.Max(Math.Max(point1.Y, point2.Y), Math.Max(point3.Y, point4.Y)) - y
                    Return New Rect(x, y, width, height)
                End Function
            End Class
            </code>
            <code lang="C#">
            public class MainWindow : Window
            {
                /// &lt;summary&gt;
                /// Main annotation viewer.
                /// &lt;/summary&gt;
                WpfAnnotationViewer _viewer;
            
                // ...
            
                public MainWindow()
                {
                    // ...
            
                    // subscribe to the FocusedAnnotationViewChanged event of viewer
                    _viewer.FocusedAnnotationViewChanged += new System.EventHandler&lt;WpfAnnotationViewChangedEventArgs&gt;(_viewer_FocusedAnnotationViewChanged);
            
                    // ...
                }
            
                /// &lt;summary&gt;
                /// Handler of the FocusedAnnotationViewChanged event.
                /// &lt;/summary&gt;
                void _viewer_FocusedAnnotationViewChanged(object sender, WpfAnnotationViewChangedEventArgs e)
                {
                    // text transformer of old annotation
                    WpfRectangularTextAnnotationTransformer textTransformer = null;
                    if (e.OldValue is WpfTextAnnotationView)
                    {
                        textTransformer = ((WpfTextAnnotationView)e.OldValue).TextTransformer;
                    }
                    else if (e.OldValue is WpfFreeTextAnnotationView)
                    {
                        textTransformer = ((WpfFreeTextAnnotationView)e.OldValue).TextTransformer;
                    }
            
                    if (textTransformer != null)
                    {
                        // unsubscribe from the TextBoxUpdated event of viewer
                        textTransformer.TextBoxUpdated -= new System.EventHandler&lt;WpfRectangularTextAnnotationTransformerTextBoxEventArgs&gt;(textTransformer_TextBoxUpdated);
                    }
            
                    // text transformer of new annotation
                    textTransformer = null;
                    if (e.NewValue is WpfTextAnnotationView)
                    {
                        textTransformer = ((WpfTextAnnotationView)e.NewValue).TextTransformer;
                    }
                    else if (e.NewValue is WpfFreeTextAnnotationView)
                    {
                        textTransformer = ((WpfFreeTextAnnotationView)e.NewValue).TextTransformer;
                    }
            
                    if (textTransformer != null)
                    {
                        // set new font of the text box
                        textTransformer.TextBox.FontFamily = new FontFamily("Arial");
                        textTransformer.TextBox.FontSize = 20.0;
                        textTransformer.TextBox.FontWeight = FontWeights.Bold;
            
                        // set text box location and size calculation mode to manual
                        textTransformer.AutomaticallyCalculateTextBoxLocationAndSize = false;
                        // subscribe to the TextBoxUpdated event of viewer
                        textTransformer.TextBoxUpdated += new System.EventHandler&lt;WpfRectangularTextAnnotationTransformerTextBoxEventArgs&gt;(textTransformer_TextBoxUpdated);
                    }
                }
            
                /// &lt;summary&gt;
                /// Handler of the TextBoxUpdated event.
                /// Location and size of the text box are setting to such values that text box matches
                /// the visible part of the text annotation.
                /// &lt;/summary&gt;
                void textTransformer_TextBoxUpdated(object sender, WpfRectangularTextAnnotationTransformerTextBoxEventArgs e)
                {
                    // get the text annotation
                    IWpfRectangularTextAnnotation textAnnotation = e.TextAnnotation;
                    // get bounding box of the annotation in the coordinate system of the annotation
                    Rect annotationBoundingBox = textAnnotation.GetBoundingBox();
                    // get bounding box of the annotation in the coordinate system of the viewer
                    annotationBoundingBox = TransformRect(annotationBoundingBox, textAnnotation.GetPointTransform(_viewer));
                    // get position of the auto-scroll of the viewer
                    Point autoScrollPosition = _viewer.ViewerState.AutoScrollPosition;
                    // get visible area of the viewer
                    Rect clientRectangle = new Rect(autoScrollPosition.X, autoScrollPosition.Y,
                        _viewer.ViewportWidth, _viewer.ViewportHeight);
                    // intersect the bounding box of the annotation with the visible area of the viewer
                    Rect newBounds = Rect.Intersect(annotationBoundingBox, clientRectangle);
                    // set new bounds
                    if (newBounds.IsEmpty)
                    {
                        e.TextBox.Width = 0.0;
                        e.TextBox.Height = 0.0;
                    }
                    else
                    {
                        e.TextBox.Width = newBounds.Width;
                        e.TextBox.Height = newBounds.Height;
                        Canvas.SetLeft(e.TextBox, newBounds.Left);
                        Canvas.SetTop(e.TextBox, newBounds.Top);
                    }
                }
            
                /// &lt;summary&gt;
                /// Transforms the rectangle and returns the bounding box.
                /// &lt;/summary&gt;
                /// &lt;param name="rect"&gt;The rectangle.&lt;/param&gt;
                /// &lt;param name="pointTransform"&gt;The point transform.&lt;/param&gt;
                /// &lt;returns&gt;The bounding box of transformed rectangle.&lt;/returns&gt;
                private Rect TransformRect(Rect rect, WpfPointTransform pointTransform)
                {
                    Point point1 = pointTransform.TransformPoint(rect.TopLeft);
                    Point point2 = pointTransform.TransformPoint(rect.TopRight);
                    Point point3 = pointTransform.TransformPoint(rect.BottomRight);
                    Point point4 = pointTransform.TransformPoint(rect.BottomLeft);
                    double x = Math.Min(Math.Min(point1.X, point2.X), Math.Min(point3.X, point4.X));
                    double y = Math.Min(Math.Min(point1.Y, point2.Y), Math.Min(point3.Y, point4.Y));
                    double width = Math.Max(Math.Max(point1.X, point2.X), Math.Max(point3.X, point4.X)) - x;
                    double height = Math.Max(Math.Max(point1.Y, point2.Y), Math.Max(point3.Y, point4.Y)) - y;
                    return new Rect(x, y, width, height);
                }
            }
            </code>
            </example>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.#ctor(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.IWpfRectangularTextAnnotation)">
            <summary>
            Initializes a new instance of the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer" /> class.
            </summary>
            <param name="textAnnotation">A text annotation.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.ShowTextBox(Vintasoft.Imaging.Wpf.UI.WpfImageViewer,System.Windows.Point)">
            <summary>
            Shows the text box in specified location of specified <see cref="T:Vintasoft.Imaging.Wpf.UI.WpfImageViewer" />.
            </summary>
            <param name="viewer">The image viewer where text box must be shown.</param>
            <param name="locationInObjectSpace">The text box location, in annotation space.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <i>viewer</i> is <b>null</b>.</exception>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.HideTextBox">
            <summary>
            Hides the text box.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.OnDeactivate">
            <summary>
            Occurs when interaction controller is deactivated.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.UpdateInteractionAreas(Vintasoft.Imaging.Wpf.UI.WpfImageViewer)">
            <summary>
            Updates the interaction areas of this controller.
            </summary>
            <param name="viewer">An image viewer.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.PerformInteraction(Vintasoft.Imaging.Wpf.UI.VisualTools.UserInteraction.WpfInteractionEventArgs)">
            <summary>
            Performs an interaction between user and interaction area of interaction object.
            </summary>
            <param name="args">An interaction event args.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.OnTextBoxUpdated(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformerTextBoxEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBoxUpdated" /> event.
            It is called after updating the location and/or size of the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBox" /> or
            the text annotation in the viewer.
            </summary>
            <param name="e">A <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformerTextBoxEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.OnTextBoxShowing(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformerTextBoxEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBoxShowing" /> event.
            It is called before the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBox" /> is shown.
            </summary>
            <param name="e">A <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformerTextBoxEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.OnTextBoxShown(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformerTextBoxEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBoxShown" /> event.
            It is called after the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBox" /> is shown.
            </summary>
            <param name="e">A <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformerTextBoxEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.OnTextBoxClosing(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformerTextBoxEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBoxClosing" /> event.
            It is called before the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBox" /> is closed.
            </summary>
            <param name="e">A <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformerTextBoxEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.OnTextBoxClosed(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformerTextBoxEventArgs)">
            <summary>
            Raises the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBoxClosed" /> event.
            It is called after the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBox" /> is closed.
            </summary>
            <param name="e">A <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformerTextBoxEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBox">
            <summary>
            Gets or sets the TextBox of this transformer.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBoxWidth">
            <summary>
            Gets or sets a width of <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBox" />.
            </summary>
            <value>
            Possible value is any positive value.
            Default value is <b>320</b>.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBoxHeight">
            <summary>
            Gets or sets a height of <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBox" />.
            </summary>
            <value>
            Possible value is any positive value.
            Default value is <b>240</b>.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.AnnotationText">
            <summary>
            Gets or sets a text of the annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.AutomaticallyCalculateTextBoxLocationAndSize">
            <summary>
            Gets or sets a value indicating whether the location and
            size of the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBox" /> should be calculated automatically.
            </summary>
            <value>
            Default value is <b>true</b>.
            </value>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBoxUpdated">
            <summary>
            Occurs after updating the location and/or size of the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBox" /> or
            the text annotation in the viewer.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBoxShowing">
            <summary>
            Occurs before showing the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBox" />.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBoxShown">
            <summary>
            Occurs after showing the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBox" />.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBoxClosing">
            <summary>
            Occurs before closing the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBox" />.
            </summary>
        </member>
        <member name="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBoxClosed">
            <summary>
            Occurs after closing the <see cref="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBox" />.
            </summary>
        </member>
        <member name="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformerTextBoxEventArgs">
            <summary>
            Provides data for the <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBoxShowing" />,
            <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBoxShown" />,
            <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBoxClosing" />
            and <see cref="E:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformer.TextBoxClosed" /> events.
            </summary>
        </member>
        <member name="M:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformerTextBoxEventArgs.#ctor(Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.IWpfRectangularTextAnnotation,System.Windows.Controls.TextBox,System.Boolean)">
            <summary>
            Initializes a new instance of
            the <see cref="T:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformerTextBoxEventArgs" /> class.
            </summary>
            <param name="textAnnotation">A text annotation.</param>
            <param name="textBox">A <see cref="T:System.Windows.Controls.TextBox" />.</param>
            <param name="canCancel">Indicates if action can be canceled.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <i>textBox</i> is <b>null</b>.</exception>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformerTextBoxEventArgs.CanCancel">
            <summary>
            Gets a value indicating whether the action can be canceled.
            </summary>
            <value>
            <b>true</b> - action can be canceled;
            <b>false</b> - action cannot be canceled.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformerTextBoxEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the action must be canceled.
            </summary>
            <value>
            <b>true</b> - action must be canceled;
            <b>false</b> action must not be canceled.<br />
            Default value is <b>false</b>.
            </value>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformerTextBoxEventArgs.TextAnnotation">
            <summary>
            Gets the text annotation.
            </summary>
        </member>
        <member name="P:Vintasoft.Imaging.Annotation.Wpf.UI.VisualTools.UserInteraction.WpfRectangularTextAnnotationTransformerTextBoxEventArgs.TextBox">
            <summary>
            Gets the <see cref="T:System.Windows.Controls.TextBox" />.
            </summary>
        </member>
    </members>
</doc>

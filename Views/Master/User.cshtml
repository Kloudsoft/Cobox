@model HouseOfSynergy.AffinityDms.WebRole.Models.Master.MasterUserProfileViewModel

@{
    ViewBag.Title = "User";
    Layout = "~/Views/Shared/_LayoutMasterPrivate.cshtml";
}
    <script type="text/javascript">
    function changeAuthenticationType(event) {
        var ddl_authtype = event.currentTarget;
        var opt = ddl_authtype[ddl_authtype.selectedIndex];
        var ad_div = document.getElementById("AD_Div");
        if ((opt.value == "3")||(opt.value == "2"))//parseInt(AffinityDms.Entities.AuthenticationType.ActiveDirectory)) || (opt.value == parseInt(AffinityDms.Entities.AuthenticationType.Both))) {
        {
            ad_div.style["display"] = "";
        }
        else {
            ad_div.style["display"] = "none";
            var ActiveDirectoryId = document.getElementById("ActiveDirectoryId");
            ActiveDirectoryId.value = "";
            var ActiveDirectory_AuthenticationEmail = document.getElementById("ActiveDirectory_AuthenticationEmail");
            ActiveDirectory_AuthenticationEmail.value = "";
            var ActiveDirectory_AuthenticationPhone = document.getElementById("ActiveDirectory_AuthenticationPhone");
            ActiveDirectory_AuthenticationPhone.value = "";
            var ActiveDirectory_AuthenticationPhoneAlternate = document.getElementById("ActiveDirectory_AuthenticationPhoneAlternate");
            ActiveDirectory_AuthenticationPhoneAlternate.value = "";
            var ActiveDirectory_Department = document.getElementById("ActiveDirectory_Department");
            ActiveDirectory_Department.value = "";
            var ActiveDirectory_JobTitle = document.getElementById("ActiveDirectory_JobTitle");
            ActiveDirectory_JobTitle.value = "";
            var ActiveDirectory_ManagerId = document.getElementById("ActiveDirectory_ManagerId");
            ActiveDirectory_ManagerId.value = "";
            var ActiveDirectory_NameDisplay = document.getElementById("ActiveDirectory_NameDisplay");
            ActiveDirectory_NameDisplay.value = "";
            var ActiveDirectory_ObjectId = document.getElementById("ActiveDirectory_ObjectId");
            ActiveDirectory_ObjectId.value = "";
            var ActiveDirectory_RoleDisplayName = document.getElementById("ActiveDirectory_RoleDisplayName");
            ActiveDirectory_RoleDisplayName.value = "";
            var ActiveDirectory_UsageLocation = document.getElementById("ActiveDirectory_UsageLocation");
            ActiveDirectory_UsageLocation.value = "";
        }
    }
    </script>

@{
    var errormessage = (ViewBag.ErrorMessage != null) ? (ViewBag.ErrorMessage) : (string.Empty);
    var successmessage = (ViewBag.SuccessMessage != null) ? (ViewBag.SuccessMessage) : (string.Empty);
    string displayError = "none", displaySuccess = "none";
    if (!(string.IsNullOrEmpty(errormessage)))
    {
        displayError = "";
    }
    if (!(string.IsNullOrEmpty(successmessage)))
    {
        displaySuccess = "";
    }
    <div id="UserErrorMessage" style="display:@displayError">
        <div class="alert alert-danger" style="overflow:auto">
            <div style="float:right;" class="col-sm-12 col-md-12 col-lg-12"><b style="float:right;cursor:pointer" data-hideMessageDiv="#UserErrorMessage" id="hideErrorMessageDiv">X</b></div>
            <div style="word-wrap: break-word;margin-right:30px" id="UserErrorMessageText">@errormessage</div>
        </div>
    </div>
    <div id="UserSuccessMessage" style="display:@displaySuccess">
        <div class="alert alert-success" style="overflow:auto">
            <div style="float:right;" class="col-sm-12 col-md-12 col-lg-12"><b style="float:right;cursor:pointer" data-hideMessageDiv="#UserSuccessMessage" id="hideSuccessMessageDiv">X</b></div>
            <div style="word-wrap: break-word;margin-right:30px" id="UserSuccessMessageText">@successmessage</div>
        </div>
    </div>


    var curmodel = (Model != null) ? (Model) : (new HouseOfSynergy.AffinityDms.WebRole.Models.Master.MasterUserProfileViewModel());
}
<br />
@HttpContext.Current.User.Identity.Name

@using (Html.BeginForm("Index", "MasterUser", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "")
        @Html.HiddenFor(model => model.Id)

        <div class="col-md-7" style="margin-top:10px">
            <div class="col-md-3" style="direction: rtl;">
                <label> First Name</label>
            </div>
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.NameGiven, new { @class = "form-control", @type = "text" })
                @Html.ValidationMessageFor(model => model.NameGiven)
            </div>
        </div>

        <div class="col-md-7" style="margin-top:10px">
            <div class="col-md-3" style="direction: rtl;">
                <label> Last Name</label>
            </div>
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.NameFamily, new { @class = "form-control", @type = "text" })
                @Html.ValidationMessageFor(model => model.NameFamily)
            </div>
        </div>

        <div class="col-md-7" style="margin-top:10px">
            <div class="col-md-3" style="direction: rtl;">
                <label> Email</label>
            </div>
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @type = "email" })
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>
        
        <div class="col-md-7" style="margin-top:10px">
            <div class="col-md-3" style="direction: rtl;">
                <label> UserName</label>
            </div>
            <div class="col-md-5">
                @if (Model.Id > 0)
                {
                    @Html.TextBoxFor(model => model.UserName, new { @readonly = "readonly", @class = "form-control", @type = "text" })
                    @Html.ValidationMessageFor(model => model.UserName)
                }
                else
                {
                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @type = "text" })
                    @Html.ValidationMessageFor(model => model.UserName)
                }
            </div>
        </div>

        <div class="col-md-7" style="margin-top:10px">
            <div class="col-md-3" style="direction: rtl;">
                <label> Password</label>
            </div>
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @type = "password" })
                @Html.ValidationMessageFor(model => model.Password)
            </div>
        </div>

        <div class="col-md-7" style="margin-top:10px">
            <div class="col-md-3" style="direction: rtl;">
                <label> Confirm Password</label>
            </div>
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.PasswordConfirmation, new { @class = "form-control", @type = "password" })
                @Html.ValidationMessageFor(model => model.PasswordConfirmation)
            </div>
        </div>

        <div class="col-md-7" style="margin-top:10px">
            <div class="col-md-3" style="direction: rtl;">
                <label> Address Line 1</label>
            </div>
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.Address1, new { @class = "form-control", @type = "text" })
                @Html.ValidationMessageFor(model => model.Address1)
            </div>
        </div>


        <div class="col-md-7" style="margin-top:10px">
            <div class="col-md-3" style="direction: rtl;">
                <label>Address Line 2</label>
            </div>
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.Address2, new { @class = "form-control", @type = "text" })
                @Html.ValidationMessageFor(model => model.Address2)
            </div>
        </div>


        <div class="col-md-7" style="margin-top:10px">
            <div class="col-md-3" style="direction: rtl;">
                <label> City</label>
            </div>
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.City, new { @class = "form-control", @type = "text" })
                @Html.ValidationMessageFor(model => model.City)
            </div>
        </div>


        <div class="col-md-7" style="margin-top:10px">
            <div class="col-md-3" style="direction: rtl;">
                <label>Zip</label>
            </div>
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.ZipOrPostCode, new { @class = "form-control", @type = "number" })
                @Html.ValidationMessageFor(model => model.ZipOrPostCode)
            </div>
        </div>

        <div class="col-md-7" style="margin-top:10px">
            <div class="col-md-3" style="direction: rtl;">
                <label> Country</label>
            </div>
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.Country, new { @class = "form-control", @type = "text" })
                @Html.ValidationMessageFor(model => model.Country)
            </div>
        </div>

        <div class="col-md-7" style="margin-top:10px">
            <div class="col-md-3" style="direction: rtl;">
                <label>(Phone(Work</label>
            </div>
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.PhoneWork, new { @class = "form-control", @type = "number" })
                @Html.ValidationMessageFor(model => model.PhoneWork)
            </div>
        </div>


        <div class="col-md-7" style="margin-top:10px">
            <div class="col-md-3" style="direction: rtl;">
                <label>(Phone(Mobile </label>
            </div>
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.PhoneMobile, new { @class = "form-control", @type = "number" })
                @Html.ValidationMessageFor(model => model.PhoneMobile)
            </div>
        </div>


        <div class="col-md-7" style="margin-top:10px">
            <div class="col-md-3" style="direction: rtl;">
                <label> Authentication Type</label>
            </div>
            <div class="col-md-5">
                @{
                        IEnumerable<SelectListItem> selectlist = (IEnumerable<SelectListItem>)@ViewBag.AuthenticationType;
                 }
                    @if (selectlist != null)
                    {
                        <select class="form-control text-box single-line" id="AuthenticationType" name="AuthenticationType" onchange="javascript: changeAuthenticationType(event)">
                            @foreach (var item in selectlist)
                            {
                                if (item.Selected == true)
                                {
                                    <option value="@item.Value" selected="selected">@item.Text</option>
                                }
                                else
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            }
                        </select>
                    }
                    else
                    {

                        <select class="form-control text-box single-line" id="AuthenticationType" name="AuthenticationType">
                             <option value="-1">None</option>
                        </select>
                    }

            </div>
        </div>
        @{
            var activedirectoryDivDisplay = Model.AuthenticationType == HouseOfSynergy.AffinityDms.Entities.Lookup.AuthenticationType.Both || Model.AuthenticationType == HouseOfSynergy.AffinityDms.Entities.Lookup.AuthenticationType.ActiveDirectory;
        }
        <div style="@((activedirectoryDivDisplay) ? ("") : ("display:none")) " id="AD_Div">
            <div class="col-md-7" style="margin-top:10px">
                <div class="col-md-3" style="direction: rtl;">
                    <label> Active Directory Id</label>
                </div>
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.ActiveDirectoryId, new { @class = "form-control", @type = "text" })
                    @Html.ValidationMessageFor(model => model.ActiveDirectoryId)
                </div>
            </div>

            <div class="col-md-7" style="margin-top:10px">
                <div class="col-md-3" style="direction: rtl;">
                    <label> Authentication Email</label>
                </div>
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.ActiveDirectory_AuthenticationEmail, new { @class = "form-control", @type = "email" })
                    @Html.ValidationMessageFor(model => model.ActiveDirectory_AuthenticationEmail)
                </div>
            </div>
            <div class="col-md-7" style="margin-top:10px">
                <div class="col-md-3" style="direction: rtl;">
                    <label> Authentication Phone</label>
                </div>
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.ActiveDirectory_AuthenticationPhone, new { @class = "form-control", @type = "text" })
                    @Html.ValidationMessageFor(model => model.ActiveDirectory_AuthenticationPhone)
                </div>
            </div>
            <div class="col-md-7" style="margin-top:10px">
                <div class="col-md-3" style="direction: rtl;">
                    <label> Authentication Phone Alternate</label>
                </div>
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.ActiveDirectory_AuthenticationPhoneAlternate, new { @class = "form-control", @type = "text" })
                    @Html.ValidationMessageFor(model => model.ActiveDirectory_AuthenticationPhoneAlternate)
                </div>
            </div>
            <div class="col-md-7" style="margin-top:10px">
                <div class="col-md-3" style="direction: rtl;">
                    <label>ActiveDirectory Department</label>
                </div>
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.ActiveDirectory_Department, new { @class = "form-control", @type = "text" })
                    @Html.ValidationMessageFor(model => model.ActiveDirectory_Department)
                </div>
            </div>
            <div class="col-md-7" style="margin-top:10px">
                <div class="col-md-3" style="direction: rtl;">
                    <label>Job Title</label>
                </div>
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.ActiveDirectory_JobTitle, new { @class = "form-control", @type = "text" })
                    @Html.ValidationMessageFor(model => model.ActiveDirectory_JobTitle)
                </div>
            </div>
            <div class="col-md-7" style="margin-top:10px">
                <div class="col-md-3" style="direction: rtl;">
                    <label>Manager Id</label>
                </div>
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.ActiveDirectory_ManagerId, new { @class = "form-control", @type = "text" })
                    @Html.ValidationMessageFor(model => model.ActiveDirectory_ManagerId)
                </div>
            </div>
            <div class="col-md-7" style="margin-top:10px">
                <div class="col-md-3" style="direction: rtl;">
                    <label>Display Name</label>
                </div>
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.ActiveDirectory_NameDisplay, new { @class = "form-control", @type = "text" })
                    @Html.ValidationMessageFor(model => model.ActiveDirectory_NameDisplay)
                </div>
            </div>
            <div class="col-md-7" style="margin-top:10px">
                <div class="col-md-3" style="direction: rtl;">
                    <label>Object Id</label>
                </div>
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.ActiveDirectory_ObjectId, new { @class = "form-control", @type = "text" })
                    @Html.ValidationMessageFor(model => model.ActiveDirectory_ObjectId)
                </div>
            </div>

            <div class="col-md-7" style="margin-top:10px">
                <div class="col-md-3" style="direction: rtl;">
                    <label>Role Display</label>
                </div>
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.ActiveDirectory_RoleDisplayName, new { @class = "form-control", @type = "text" })
                    @Html.ValidationMessageFor(model => model.ActiveDirectory_RoleDisplayName)
                </div>
            </div>
            <div class="col-md-7" style="margin-top:10px">
                <div class="col-md-3" style="direction: rtl;">
                    <label>Location Usage</label>
                </div>
                <div class="col-md-5">
                    @Html.TextBoxFor(model => model.ActiveDirectory_UsageLocation, new { @class = "form-control", @type = "text" })
                    @Html.ValidationMessageFor(model => model.ActiveDirectory_UsageLocation)
                </div>
            </div>
         </div>

        <div class="col-md-12" style="margin-top:10px;">
            <div class="col-md-9" style="float:right">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>

    </div>
                    }



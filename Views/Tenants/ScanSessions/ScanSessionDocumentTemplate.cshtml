@model HouseOfSynergy.AffinityDms.Entities.Tenants.Document

@{
    //var discourseCounter = 0;
    var document = this.Model;
    var docName = "";
    var createdBy = "Created by ";
    var foldername = string.Empty;
    if (document != null)
    {
        docName = System.IO.Path.GetFileNameWithoutExtension(document.Name);
        createdBy += document.User.NameFull;
        foldername = (document.Folder != null) ? (document.Folder.Name) : ("Documents");
    }



    ViewBag.Title = "ScanSessionDocumentTemplate";
    Layout = "~/Views/Shared/_LayoutTenantThemePrivate.cshtml";

    this.ViewBag.IsScanSessionDocumentTemplate = true;
    this.ViewBag.DocumentInformation = docName + "   |   " + createdBy;// +"   |   Last Edited Aug 1, 2016";
    this.ViewBag.DocCurrentPageNumber = "NaN";
    this.ViewBag.DocTotalPageNumber = "NaN";
    this.ViewBag.ZoomPercentage = "100 %";
    this.ViewBag.Type = "Document";
    this.ViewBag.BreadCrumbsPath = "";// "<li><a href='../../Tenants/Dashboard'>Home</a></li><li><a href='../../TenantDocumentsFolderWise/index'>Knowledge</a></li><li><a href='#'>" + foldername + "</a></li><li><a href='../../Document/DocumentDiscourseViewer/" + document.Id + "' >Document Chat Viewer</a></li>";

    var errormessage = (ViewBag.ErrorMessage != null) ? (ViewBag.ErrorMessage) : (string.Empty);
    var successmessage = (ViewBag.SuccessMessage != null) ? (ViewBag.SuccessMessage) : (string.Empty);
    string displayError = "none", displaySuccess = "none";
    if (!(string.IsNullOrEmpty(errormessage)))
    {
        displayError = "";
    }
    if (!(string.IsNullOrEmpty(successmessage)))
    {
        displaySuccess = "";
    }
    <div id="ScanSessionDocumentTemplateErrorMessage" style="display:@displayError">
        <div class="alert alert-danger" style="overflow:auto">
            <div style="float:right;" class="col-sm-12 col-md-12 col-lg-12"><b style="float:right;cursor:pointer" data-hideMessageDiv="#ScanSessionDocumentTemplateErrorMessage" id="hideMessageDiv">X</b></div>
            <div style="word-wrap: break-word;margin-right:30px" id="ScanSessionDocumentTemplateErrorMessageText">@errormessage</div>
        </div>
    </div>
    <div id="ScanSessionDocumentTemplateSuccessMessage" style="display:@displaySuccess">
        <div class="alert alert-success" style="overflow:auto">
            <div style="float:right;" class="col-sm-12 col-md-12 col-lg-12"><b style="float:right;cursor:pointer" data-hideMessageDiv="#ScanSessionDocumentTemplateSuccessMessage" id="hideMessageDiv">X</b></div>
            <div style="word-wrap: break-word;margin-right:30px" id="ScanSessionDocumentTemplateSuccessMessageText">@successmessage</div>
        </div>
    </div>

}
<style>
    div#thumbnails-container-Div {
        display: none;
    }
</style>
<style type="text/css">
    .modal-fullscreen {
        background-color: transparent; /*#ebedf2;*/
        top: 0% !important;
    }

        .modal-fullscreen .modal-content {
            background: white;
            border: 0;
            -webkit-box-shadow: none;
            box-shadow: none;
        }

    .modal-backdrop.modal-backdrop-fullscreen {
        background: #ebedf2;
    }

        .modal-backdrop.modal-backdrop-fullscreen.in {
            opacity: .97;
            filter: alpha(opacity=97);
        }

    /* .modal-fullscreen size: we use Bootstrap media query breakpoints */

    .modal-fullscreen .modal-dialog {
        margin: 0;
        margin-right: auto;
        margin-left: auto;
        width: 100%;
    }

    @@media (min-width: 768px) {
        .modal-fullscreen .modal-dialog {
            width: 750px;
        }
    }

    @@media (min-width: 992px) {
        .modal-fullscreen .modal-dialog {
            width: 970px;
        }
    }

    @@media (min-width: 1200px) {
        .modal-fullscreen .modal-dialog {
            width: 1170px;
        }
    }
</style>
@if (Model != null)
{
   

    <input type="hidden" value="@Model.Id" id="hdocId" data-name="@Model.Name" />
    @*<input type="hidden" value="@discourseCounter" id="docDiscourseCounter" />*@
    <input type="hidden" value="true" id="IsDiscourseDocumentCreatePostModal" />
    <div>
        <div id="document">
            <!-- top -->
            <!-- Left side -->
            <div class="data-view" style="background-color:white!important">
                <div class="col-xs-7">
                    <div class="panel table-col-box" style="border: 1px solid #cccccc">
                        <div class="widget-body" style="overflow:hidden!important">
                            <div id="left-doc" class="widget-main" style="overflow:hidden!important">
                                
                                @{
                                    Html.RenderPartial("~/Views/Tenants/DocumentViewer/_DocumentViewer.cshtml", this.Model);
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <!-- //Left side -->
                <!-- right side -->
                <div class="col-xs-5">
                    <div class="panel">
                        <div class="widget-body">
                            <div class="widget-main no-padding-right">
                                <div id="DocumentTemplatesContainer">
                                    @{
                                        Html.RenderPartial("~/Views/Tenants/ScanSessions/_DocumentTemplateViewer.cshtml", this.Model);
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- / right side -->
            </div>
        </div>

    </div>
}


<script type="text/javascript">
    $(document).ready(function (e) {
        var docViewer = new AffinityDms.Entities.DocumentViewer();
        docViewer.run();

        if ($("ScanSessionDocumentTemplateErrorMessageText") != null) {
            if ($("#ScanSessionDocumentTemplateErrorMessageText").text() != null || $("#ScanSessionDocumentTemplateErrorMessageText").text() != "") {
                setTimeout(function () {
                    $('#ScanSessionDocumentTemplateErrorMessage').fadeOut('fast');
                    $("#ScanSessionDocumentTemplateErrorMessage").css("display", "none");
                    $("#ScanSessionDocumentTemplateErrorMessageText").text("");
                }, AffinityDms.Settings.Constants.PopUpNotificationTimer);
            }
        }
        if ($("ScanSessionDocumentTemplateSuccessMessageText") != null) {
            if ($("#ScanSessionDocumentTemplateSuccessMessageText").text() != null || $("#ScanSessionDocumentTemplateSuccessMessageText").text() != "") {
                setTimeout(function () {
                    $('#ScanSessionDocumentTemplateSuccessMessage').fadeOut('fast');
                    $("#ScanSessionDocumentTemplateSuccessMessage").css("display", "none");
                    $("#ScanSessionDocumentTemplateSuccessMessageText").text("");
                }, AffinityDms.Settings.Constants.PopUpNotificationTimer);
            }
        }

    });
</script>
@model HouseOfSynergy.AffinityDms.Entities.Tenants.Template

@{
    ViewBag.Title = "Template";
    this.Layout = "~/Views/Shared/_LayoutTenantThemePrivate.cshtml";
}
<script>
    function templateTypeChanged() {
        var dropdown = document.getElementById("TemplateType");
        if (dropdown.options[dropdown.selectedIndex].value == 1) {
            var DivImageobj = document.getElementById("DivImage");
            DivImageobj.style.display = "";
        }
        else {
            var DivImageobj = document.getElementById("DivImage");
            DivImageobj.style.display = "none";
        }
    }
</script>
@{
    var errormessage = (ViewBag.ErrorMessage != null) ? (ViewBag.ErrorMessage) : (string.Empty);
    var successmessage = (ViewBag.SuccessMessage != null) ? (ViewBag.SuccessMessage) : (string.Empty);
    string displayError = "none", displaySuccess = "none";
    if (!(string.IsNullOrEmpty(errormessage)))
    {
        displayError = "";
    }
    if (!(string.IsNullOrEmpty(successmessage)))
    {
        displaySuccess = "";
    }
    <div id="TemplateErrorMessage" style="display:@displayError">
        <div class="alert alert-danger" style="overflow:auto">
            <div style="float:right;" class="col-sm-12 col-md-12 col-lg-12"><b style="float:right;cursor:pointer" data-hideMessageDiv="#TemplateErrorMessage" id="hideErrorMessageDiv">X</b></div>
            <div style="word-wrap: break-word;margin-right:30px" id="TemplateErrorMessageText">@errormessage</div>
        </div>
    </div>
    <div id="TemplateSuccessMessage" style="display:@displaySuccess">
        <div class="alert alert-success" style="overflow:auto">
            <div style="float:right;" class="col-sm-12 col-md-12 col-lg-12"><b style="float:right;cursor:pointer" data-hideMessageDiv="#TemplateSuccessMessage" id="hideSuccessMessageDiv">X</b></div>
            <div style="word-wrap: break-word;margin-right:30px" id="TemplateSuccessMessageText">@successmessage</div>
        </div>
    </div>

}

@*<h2>Template</h2>*@
@*@if (this.ViewBag.ErrorMessage != null)
{
    if (!string.IsNullOrEmpty(this.ViewBag.ErrorMessage))
    {
        <div style="color:red;">@this.ViewBag.ErrorMessage</div>
    }
}*@





@using (Html.BeginForm("Index", "TenantTemplate", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="width:1000px" >
        @{
            var id = ViewBag.Id;
            if (id != null)
            {
                <input type="hidden" name="H_Templateid" value="@ViewBag.Id" id=" h_templateid">
            }
        }

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model != null)
                {
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @value = Model.Title } })
                }
                else
                {
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                }

                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.EntityState, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (Model != null)
                    {
                        <select class="form-control text-box single-line" id="EntityState" name="EntityState">

                            @if (Model.EntityState == HouseOfSynergy.AffinityDms.Entities.Lookup.TemplateEntityState.Web)
                            {
                                <option id="0" value="0" selected="selected">Web</option>
                            }
                            else
                            {
                                <option id="0" value="0">Web</option>
                            }
                            @if (Model.EntityState == HouseOfSynergy.AffinityDms.Entities.Lookup.TemplateEntityState.)
                            {
                                <option id="1" value="1" selected="selected">Mobile</option>
                            }
                            else
                            {
                                <option id="1" value="1">Mobile</option>
                            }
                            @if (Model.EntityState == 2)
                            {
                                <option id="2" value="2" selected="selected">Print</option>
                            }
                            else
                            {
                                <option id="2" value="2">Print</option>
                            }
                        </select>
                    }
                    else
                    {
                        <select class="form-control text-box single-line" id="EntityState" name="EntityState">
                            <option id="0" value="0">Web</option>
                            <option id="1" value="1">Mobile</option>
                            <option id="2" value="2">Print</option>
                        </select>
                    }
                    @Html.ValidationMessageFor(model => model.EntityState, "", new { @class = "text-danger" })

                </div>

            </div>*@
        <div class="form-group" style="visibility:hidden">
            @Html.LabelFor(model => model.TemplateType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Label("Template", htmlAttributes: new { @class = "control-label col-md-2", @style = "margin: 0px;padding-left: 0px;text-align: left;" })
            </div>
        </div>
        @if (Model == null)
        {
            <div class="form-group" id="DivImage" name="DivImage" style="display:block">
                <label class="control-label col-md-2">Choose a File:</label>
                <div class="col-md-3 form-control" style="width:21%;margin-left: 1%">
                    <input type="file" name="file" id="file">
                </div>
            </div>
        }
        else
        {
            if (Model.Id == 0)
            {
                <div class="form-group" id="DivImage" name="DivImage" style="display:block">
                    <label class="control-label col-md-2">Choose a File:</label>
                    <div class="col-md-3 form-control" style="width:21%;margin-left: 1%">
                        <input type="file" name="file" id="file">
                    </div>
                </div>
            }
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
            }

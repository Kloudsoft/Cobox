@model List<HouseOfSynergy.AffinityDms.Entities.Tenants.TemplateElement>
@{
    this.ViewBag.Title = "Form Render Web";
    this.Layout = "~/Views/Shared/_LayoutTenantThemePrivate.cshtml";
}
@Scripts.Render("~/bundles/TypeScript")
<h2>Form Render Web</h2>

@*<form id="FormMain" runat="server">*@
<div style="width:100%;display: inline-block; height:750px">

    <div id="DivPage" style="display: inline-block;position: absolute;width: 60%; height: 750px;background-color: steelblue;margin-left: 30px;overflow:scroll">
        @{
            if (Model != null)
            {
                int zindexcounter = 1000;

                foreach (var element in Model)
                {
                    int fontsize = Convert.ToInt32(element.FontSize);
                    int divx = Convert.ToInt32(element.DivX);
                    int divy = Convert.ToInt32(element.DivY);
                    int elementx = Convert.ToInt32(element.X);
                    int elementy = Convert.ToInt32(element.Y);
                    int elementheight = 0;
                    int elementwidth = 0;
                    string heightwidth = "";
                    string elementautoheight = "";
                    string elementautowidth = "";
                    if (element.Height != "auto" && element.Height != "")
                    {
                        elementheight = Convert.ToInt32(float.Parse(element.Height));//int.TryParse(element.Height, out elementheight);//int.Parse(element.Height);//Convert.ToInt32(element.Height);
                        heightwidth += "height:" + elementheight + "px;";
                    }
                    else
                    {
                        elementautoheight = "auto";
                        heightwidth += "height:" + elementautoheight + ";";
                    }

                    if (element.Width != "auto" && element.Width != "")
                    {
                        elementwidth = Convert.ToInt32(float.Parse(element.Width));//int.TryParse(element.Height, out elementheight);//int.Parse(element.Height);//Convert.ToInt32(element.Height);
                        heightwidth += " width: " + elementwidth + "px;";
                    }
                    else
                    {
                        elementautowidth = "auto";
                        heightwidth += " width: " + elementautowidth + ";";
                    }
                    int X1 = divx + elementx;
                    if (element.ElementType == HouseOfSynergy.AffinityDms.Entities.Lookup.ElementType.Label)
                    {
                        <div style="@heightwidth left:@divx.ToString()px; top:@divy.ToString()px; position: absolute;">
                            <label style="padding-right: 10px;font-size:@fontsize.ToString()px;">Label1</label>
                            @if (!(fontsize <= 0))
                            {
                                <label style="padding-right: 10px;font-size:@fontsize.ToString()px;">@element.Text</label>
                            }
                            else
                            {
                                <label style="padding-right: 10px;">@element.Text</label>
                            }
                        </div>
                    }
                    else if (element.ElementType == HouseOfSynergy.AffinityDms.Entities.Lookup.ElementType.Textbox)
                    {
                        <div style="top:@divy.ToString()px;left:@divx.ToString()px;position:absolute">
                            @if (!(fontsize <= 0))
                            {
                                <input data-elementtype="FormControl" placeholder="@element.Hint" style="@heightwidth background-color: @element.BackgroundColor; font-size:@fontsize.ToString()px;opacity: 1; left: @element.X.ToString()px; top: @element.Y.ToString()px; min-width: @element.MinWidth; min-height: @element.MinHeight; margin: 0px;" id="@element.ElementId"maxlength="@element.MaxChar" type="text">
                            }
                            else
                            {
                                <input data-elementtype="FormControl" placeholder="@element.Hint" style="@heightwidth background-color: @element.BackgroundColor; opacity: 1; left: @element.X.ToString()px; top: @element.Y.ToString()px; min-width: @element.MinWidth; min-height: @element.MinHeight; margin: 0px;" id="@element.ElementId" maxlength="@element.MaxChar" type="text">
                            }

                        </div>
                    }

                    else if (element.ElementType == HouseOfSynergy.AffinityDms.Entities.Lookup.ElementType.Textarea)
                    {
                        //string str = (divy + elementheight) + "px";
                        <div style="top:@divy.ToString()px;left:@divx.ToString()px;position:absolute">

                            @if (!(fontsize <= 0))
                            {

                                <textarea data-elementtype="FormControl" placeholder="@element.Hint" style="@heightwidth background-color:@element.BackgroundColor;font-size:@fontsize.ToString()px; opacity: 1; left: @element.X.ToString()px; top: @element.Y.ToString()px; min-width: @element.MinWidth; min-height: @element.Height; margin: 0px; resize: none; overflow: auto;" id="@element.ElementId" maxlength="@element.MaxChar"></textarea>
                            }
                            else
                            {
                                <textarea data-elementtype="FormControl" placeholder="@element.Hint" style="@heightwidth background-color:@element.BackgroundColor; opacity: 1; left: @element.X.ToString()px; top: @element.Y.ToString()px; min-width: @element.MinWidth; min-height: @element.Height; margin: 0px; resize: none; overflow: auto;" id="@element.ElementId" maxlength="@element.MaxChar"></textarea>

                            }
                        </div>
                    }
                    else if (element.ElementType == HouseOfSynergy.AffinityDms.Entities.Lookup.ElementType.Barcode2D)
                    {
                        //var img = (System.Drawing.Image)ViewBag.ModelTemplateImage;
                        //byte[] imgbytearray = ViewBag.ModelTemplateImageByteArray;
                        if (element.Data != null)
                        {
                            string imageBase64Data = Convert.ToBase64String(element.Data);
                            string imageDataURL = string.Format("data:image/png;base64,{0}", imageBase64Data);

                            <div style="top:@divy.ToString()px;left:@divx.ToString()px;position:absolute">
                                <img id="@element.ElementId" src="@imageDataURL" style="@heightwidth left: 0px; top: 0px; margin: 0px;  background-position: 50% 50%; background-repeat: no-repeat;">
                            </div>
                        }
                        else
                        {

                            <div style="top:@divy.ToString()px;left:@divx.ToString()px;position:absolute">
                                <img id="@element.ElementId" src="@element.ImageSource" style="@heightwidth left: 0px; top: 0px; margin: 0px;  background-position: 50% 50%; background-repeat: no-repeat;">
                            </div>
                        }

                    }
                    else if (element.ElementType == HouseOfSynergy.AffinityDms.Entities.Lookup.ElementType.Image)
                    {
                        <div style="top:@divy.ToString()px;left:@divx.ToString()px;position:absolute">
                            <img id="@element.ElementId" src="@element.ImageSource" style="@heightwidth left: 0px; top: 0px; margin: 0px;  background-position: 50% 50%; background-repeat: no-repeat;">
                        </div>
                    }
                    else if (element.ElementType == HouseOfSynergy.AffinityDms.Entities.Lookup.ElementType.Radio)
                    {
                        <div style="top:@divy.ToString()px;left:@divx.ToString()px;position:absolute">
                            @if (!(fontsize <= 0))
                            {
                                <label style="@heightwidth left: 0px; top: 0px; margin-top: 3px;">@element.Text<input id="radiobtnElement1" name="@element.Name" type="radio" style="width: 10%;font-size:@fontsize.ToString()px;  height: 10%; left: 0px; top: 0px; min-width: 12.22px; min-height: 12.22px; float: left; margin: 6px;"></label>
                            }
                            else
                            {
                                <label style="@heightwidth left: 0px; top: 0px; margin-top: 3px;">@element.Text<input id="radiobtnElement1" name="@element.Name" type="radio" style="width: 10%; height: 10%; left: 0px; top: 0px; min-width: 12.22px; min-height: 12.22px; float: left; margin: 6px;"></label>

                            }

                        </div>
                    }
                    else if (element.ElementType == HouseOfSynergy.AffinityDms.Entities.Lookup.ElementType.Checkbox)
                    {
                        <div style="top:@divy.ToString()px;left:@divx.ToString()px;position:absolute">
                            @if (!(fontsize <= 0))
                            {
                                <label style="@heightwidth left: 0px; top: 0px; margin-top: 3px;">@element.Text<input id="radiobtnElement1" type="checkbox" style="width: auto;font-size:@fontsize.ToString()px; height: auto; left: 0px; top: 0px; min-width: 12.22px; min-height: 12.22px; float: left; margin: 6px;"></label>
                            }
                            else
                            {
                                <label style="@heightwidth left: 0px; top: 0px; margin-top: 3px;">@element.Text<input id="radiobtnElement1" type="checkbox" style="width: auto; height: auto; left: 0px; top: 0px; min-width: 12.22px; min-height: 12.22px; float: left; margin: 6px;"></label>

                            }

                        </div>
                    }
                    else if (element.ElementType == HouseOfSynergy.AffinityDms.Entities.Lookup.ElementType.HorizontalLine)
                    {
                        <div id="@element.ElementId" style="width: @element.DivWidth.ToString()px; height: @element.DivHeight.ToString()px; left: @element.DivX.ToString()px; top: @element.DivY.ToString()px; opacity: 1; padding-bottom: 1px; padding-right: 5px;  overflow: hidden; min-width: 5px; min-height: 5px; position: absolute;"><svg width="100%" height="100%" draggable="true"><line id="myLine" x1="0" x2="100%" y1="0" y2="0" stroke="black" stroke-linecap="round" stroke-width="5"></line></svg></div>
                    }
                    else if (element.ElementType == HouseOfSynergy.AffinityDms.Entities.Lookup.ElementType.VerticalLine)
                    {
                        <div id="@element.ElementId" style="width: @element.DivWidth.ToString()px; height: @element.DivHeight.ToString()px; left: @element.DivX.ToString()px; top: @element.DivY.ToString()px; opacity: 1; padding-bottom: 1px; padding-right: 5px;  overflow: hidden; min-width: 5px; min-height: 5px; position: absolute;"><svg width="100%" height="100%" draggable="true"><line id="myLine" x1="0" x2="0" y1="0" y2="100%" stroke="black" stroke-linecap="round" stroke-width="5"></line></svg></div>
                    }
                    else if (element.ElementType== HouseOfSynergy.AffinityDms.Entities.Lookup.ElementType.Circle)
                    {
                        <div id="@element.ElementId" style="width: @element.DivWidth.ToString()px; height: @element.DivHeight.ToString()px; left: @element.DivX.ToString()px; top: @element.DivY.ToString()px; opacity: 1; padding-bottom: 0px; padding-right: 0px; overflow: hidden; min-width: 5px; min-height: 5px; position: absolute;"><svg width="100%" height="100%" draggable="true" style="padding:10px"><circle id="mycircle" cx="50%" cy="50%" r="40%" fill="none" stroke="black" stroke-width="2"></circle></svg></div>
                    }
                    else if (element.ElementType == HouseOfSynergy.AffinityDms.Entities.Lookup.ElementType.Rectangle)
                    {
                        <div id="@element.ElementId" style="width: @element.DivWidth.ToString()px; height: @element.DivHeight.ToString()px; left: @element.DivX.ToString()px; top: @element.DivY.ToString()px; opacity: 1; padding-bottom: 5px; padding-right: 5px;  overflow: hidden; min-width: 5px; min-height: 5px; position: absolute;"><svg width="99%" height="99%" draggable="true"><rect id="myRect" width="99%" height="99%" fill="transparent" stroke="black" stroke-width="2"></rect></svg></div>
                    }
                    zindexcounter++;
                }
            }
}
    </div>
</div>

@model IEnumerable<HouseOfSynergy.AffinityDms.Entities.Tenants.DocumentCorrectiveIndexValue>

@{
    this.ViewBag.Title = "DocumentCorrectiveIndexValues";
    this.Layout = "~/Views/Shared/_LayoutTenantThemePrivate.cshtml";
}
@Scripts.Render("~/bundles/TypeScript")


@{

    var errormessage = (ViewBag.ErrorMessage != null) ? (ViewBag.ErrorMessage) : (string.Empty);
    var successmessage = (ViewBag.SuccessMessage != null) ? (ViewBag.SuccessMessage) : (string.Empty);
    string displayError = "none", displaySuccess = "none";
    if (!(string.IsNullOrEmpty(errormessage)))
    {
        displayError = "";
    }
    if (!(string.IsNullOrEmpty(successmessage)))
    {
        displaySuccess = "";
    }
    <div id="DocumentCorrectiveIndexValuesErrorMessage" style="display:@displayError">
        <div class="alert alert-danger" style="overflow:auto">
            <div style="float:right;" class="col-sm-12 col-md-12 col-lg-12"><b style="float:right;cursor:pointer" data-hideMessageDiv="#DocumentCorrectiveIndexValuesErrorMessage" id="hideErrorMessageDiv">X</b></div>
            <div style="word-wrap: break-word;margin-right:30px" id="DocumentCorrectiveIndexValuesErrorMessageText">@errormessage</div>
        </div>
    </div>
    <div id="DocumentCorrectiveIndexValuesSuccessMessage" style="display:@displaySuccess">
        <div class="alert alert-success" style="overflow:auto">
            <div style="float:right;" class="col-sm-12 col-md-12 col-lg-12"><b style="float:right;cursor:pointer" data-hideMessageDiv="#DocumentCorrectiveIndexValuesSuccessMessage" id="hideSuccessMessageDiv">X</b></div>
            <div style="word-wrap: break-word;margin-right:30px" id="DocumentCorrectiveIndexValuesSuccessMessageText">@successmessage</div>
        </div>
    </div>

}


<input type="hidden" value="" id="DocViewerType" data-id="@Model.First().DocumentId" data-type="Document">
@if (!ViewData.ModelState.IsValid)
{
    @Html.ValidationSummary(false, "", new { @class = "alert alert-danger" })
}
    

    <div class="modal fade" id="IndexConfirmationModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h4 class="modal-title">Submit Indexing</h4>
                </div>
                <div class="modal-body">
                    <p>Please make sure you <strong>UPDATED</strong> your changes before continuing.<br />Once you submit, index values can not be edited.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="IndexConfirmationBtn">Submit Indexing</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    <div id="documentViewerDemoLoadingDlg" class="modal fade" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog loading-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    <br />
                    <label id="processText"></label>
                    <br />
                    <br />
                    <div class="progress">
                        <div id="progressbar" class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width:0%">
                            <span id="progressPercentage"></span>
                        </div>
                    </div>
                </div>
                <div id="cancelDiv" class="modal-footer">
                    <button id="cancel" class="btn btn-default">Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <div id="DivBody" style="display: block; height:550px;overflow:visible!important" class="container col-md-12">
        <div>
            <div id="thumbnails-container" class="thumbnails-container"></div>
            <div id="viewer-container" class="viewer-container"></div>
            <div style="float: right;padding: 20px;display: inline-block;background-color: #003043;overflow: scroll;height: 500px;">

                @using (Html.BeginForm("Update", "TenantDocumentCorrectiveIndex", FormMethod.Post))
                {

                    var itemCounter = 0;
                    Html.AntiForgeryToken();
                    <br /><br />
                    <div class="" style="width:100%;text-align:center;color:white">Corrective Indexing</div>
                    <div class="line-separator-bottom" style="width:100%"></div>
                    <div>
                        @foreach (var item in Model)
                        {
                            <div class="form-horizontal">
                                <hr />
                                @Html.Hidden("item[" + itemCounter + "].Id", item.Id)
                                @Html.Hidden("item[" + itemCounter + "].DocumentId", item.DocumentId)
                                @Html.Hidden("item[" + itemCounter + "].IndexElement.Name", item.IndexElement.Name)

                                <div class="form-group">
                                    @*  @Html.LabelFor(x => , item.IndexElement.Name, htmlAttributes: new { @class = "control-label col-md-2" })*@

                                    <label style="margin 0px !important;color:white">
                                        @item.IndexElement.Name
                                        @{ string id = "item[" + itemCounter + "].IndexValue";}
                                        <input type="text" id="@id" name="@id" value="@item.IndexValue" class="form-control text-box single-line">
                                        @*@Html.Editor(item.IndexValue, new { htmlAttributes = new { @class = "form-control text-box single-line", @name = "item[" + itemCounter + "].IndexValue", value=item.IndexValue} })*@
                                        @Html.ValidationMessageFor(x => item.IndexValue, "", new { @class = "text-danger" })
                                    </label>
                                </div>
                                @*<div class="col-md-10">
                                    @Html.EditorFor(x => item.IndexValue, item.IndexValue, new { htmlAttributes = new { @class = "form-control", @name = "item[" + itemCounter + "].IndexValue" } })
                                    @Html.ValidationMessageFor(x => item.IndexValue, "", new { @class = "text-danger" })
                                    </div>*@
                            </div>
                                                itemCounter++;
                                            }
                        <div class="form-group">
                            @if (this.Model.First().Status == HouseOfSynergy.AffinityDms.Entities.Lookup.DocumentCorrectiveIndexValueStatus.Updated)
                            {
                                <input type="button" value="Submit" class="btn btn-info" onclick="javascript: SaveIndexingValue(event)" />
                            }
                            <input type="submit" value="Update" class="btn btn-default" />
                        </div>
                        @*@if (this.Model.First().Status == HouseOfSynergy.AffinityDms.Entities.Lookup.DocumentCorrectiveIndexValueStatus.Updated)
                            {
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="button" value="Submit" class="btn btn-info" onclick="javascript: SaveIndexingValue(event)" />
                                    </div>
                                </div>
                            }*@
                    </div>
                                            }


            </div>
        </div>

        @*@Html.Hidden("item[" + itemCounter + "].IndexElementId", "0")
            @Html.Hidden("item[" + itemCounter + "].DocumentId", "0")*@

    </div>



    <script type="text/javascript">
        var documentDesigner;
        $(document).ready(function (e) {
            documentDesigner = new AffinityDms.Entities.FormTestDesigner();
            var docViewer = new AffinityDms.Entities.DocumentViewer();
            docViewer.run();

            if ($("DocumentCorrectiveIndexValuesErrorMessageText") != null) {
                if ($("#DocumentCorrectiveIndexValuesErrorMessageText").text() != null || $("#DocumentCorrectiveIndexValuesErrorMessageText").text() != "") {
                    setTimeout(function () {
                        $('#DocumentCorrectiveIndexValuesErrorMessage').fadeOut('fast');
                        $("#DocumentCorrectiveIndexValuesErrorMessage").css("display", "none");
                        $("#DocumentCorrectiveIndexValuesErrorMessageText").text("");
                    }, AffinityDms.Settings.Constants.PopUpNotificationTimer);
                }
            }
            if ($("DocumentCorrectiveIndexValuesSuccessMessageText") != null) {
                if ($("#DocumentCorrectiveIndexValuesErrorMessageText").text() != null || $("#DocumentCorrectiveIndexValuesErrorMessageText").text() != "") {
                    setTimeout(function () {
                        $('#DocumentCorrectiveIndexValuesSuccessMessage').fadeOut('fast');
                        $("#DocumentCorrectiveIndexValuesSuccessMessage").css("display", "none");
                        $("#DocumentCorrectiveIndexValuesSuccessMessageText").text("");
                    }, AffinityDms.Settings.Constants.PopUpNotificationTimer);
                }
            }
        })
        function SaveIndexingValue(event) {
            $("#IndexConfirmationModal").modal("show");
        }
        $("#IndexConfirmationBtn").click(function (e) {
            var itemid = document.getElementsByName("item[0].Id");
            var itemDocId = document.getElementsByName("item[0].DocumentId");
            if (itemid != null) {
                $.ajax({
                    type: "POST",
                    url: "../../TenantDocumentCorrectiveIndex/ConfirmIndexing",
                    data: JSON.stringify({ id: itemid[0].value, documentId: itemDocId[0].value }),
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    success: function (response) {
                        if (typeof (response) === "string")
                        {
                            alert(response);
                        }
                        else if (response == true) {
                            window.location.href = "../../TenantDocumentsFolderWise/Index?ErrorMessage=''&SuccessMessage='Document indexing successfully submitted'";
                        }
                        else {
                            alert("Oops! An error occured");
                        }
                    },
                    error: function (e) {
                        alert("Oops! An error occured");
                    }
                });
            }
            else {
                alert("No Indexes found");
            }
            
        })

    </script>

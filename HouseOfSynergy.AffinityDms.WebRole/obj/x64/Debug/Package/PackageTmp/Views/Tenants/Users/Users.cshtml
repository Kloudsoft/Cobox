@model List<HouseOfSynergy.AffinityDms.WebRole.Models.Tenants.UserViewModel>

@{
    ViewBag.Title = "Index";
    this.Layout = "~/Views/Shared/_LayoutTenantThemePrivate.cshtml";
}


@{ 
    Html.RenderPartial("~/Views/Tenants/Users/_Users.cshtml", this.Model);
 }
@*<script type="text/javascript">

    function RoleChange(event) {
        var chkbox = event.currentTarget;
        if (chkbox.checked) {
            chkbox.setAttribute("checked", "checked");
            chkbox.setAttribute("value", "true");
        }
        else {
            chkbox.removeAttribute("checked");
            chkbox.setAttribute("value", "false");
        }
    }
</script>*@

@*@using (Html.BeginForm("Index", "TenantUsers", FormMethod.Post))
{
    <div style="margin-bottom:20px;display: block;float: right;">
        <input type="button" value="Sync AD" class="btn btn-primary" style="margin-right: 20px;" onclick="javascript: window.location.href=' @Url.Action("SyncFromAD", "TenantUsers")'" />
        <input type="button" value="Create" class="btn btn-primary" style="margin-right: 20px;" onclick="javascript: window.location.href='@Url.Action("Index", "TenantUser")'" />
        <input type="submit" value="Submit" class="btn btn-primary" style="margin-right: 10px;" />
    </div>
    <div class="col-md-12">

        @{int idcount = 0, RoleAdministrator = 0, RoleReporting = 0, RoleCustom = 0, RoleScanner = 0, RoleUploader = 0, RoleIndexer = 0, RoleTemplateCreator = 0, RoleFormCreator = 0, RoleWorkflowActor = 0, RoleWorkflowCreator = 0;}
        @(
                 Html.Kendo().Grid(Model).Name("TenantUserListGrid").Columns
                        (
                        columns =>
                        {

                            columns.Template(item => (item.Id > 0) ? ("<input type='hidden' name='item[" + (idcount) + "].Id' id='item[" + (idcount++) + "].Id' value='" + item.Id + "'></span>") : (string.Empty)).Hidden();
                            columns.Template(item => (item.NameGiven + " " + item.NameFamily)).Title("Name");
                            columns.Bound(item => (item.Email)).Title("Email");
                            columns.Bound(item => (item.UserName)).Title("Username");
                            columns.Bound(item => (item.AuthenticationType)).Title("Authentication Type");
                            columns.Group(group => group
                            .Title("Roles")
                            .HeaderHtmlAttributes(new { @style = "text-align: center" })
                            .Columns(roleitem =>
                            {
                                roleitem.Template(item => ((item.RoleAdministrator) ? ("<input type='checkbox' class='check-box' checked='checked' value='" + item.RoleAdministrator + "' name='item[" + (RoleAdministrator) + "].RoleAdministrator' id='item[" + (RoleAdministrator) + "].RoleAdministrator' onchange='RoleChange(event)'><input name='item[" + (RoleAdministrator++) + "].RoleAdministrator' type='hidden' value='false' />") : ("<input type='checkbox' class='check-box' value='" + item.RoleAdministrator + "' name='item[" + (RoleAdministrator) + "].RoleAdministrator' id='item[" + (RoleAdministrator) + "].RoleAdministrator' onchange='RoleChange(event)'><input name='item[" + (RoleAdministrator++) + "].RoleAdministrator' type='hidden' value='false' />"))).Title("Administrator");
                                roleitem.Template(item => ((item.RoleReporting) ? ("<input type='checkbox' class='check-box' checked='checked' value='" + item.RoleReporting + "' name='item[" + (RoleReporting) + "].RoleReporting' id='item[" + (RoleReporting) + "].RoleReporting' onchange='RoleChange(event)'><input name='item[" + (RoleReporting++) + "].RoleReporting' type='hidden' value='false' />") : ("<input type='checkbox' class='check-box' value='" + item.RoleReporting + "' name='item[" + (RoleReporting) + "].RoleReporting' id='item[" + (RoleReporting) + "].RoleReporting' onchange='RoleChange(event)'><input name='item[" + (RoleReporting++) + "].RoleReporting' type='hidden' value='false' />"))).Title("Reporting");
                                roleitem.Template(item => ((item.RoleScanner) ? ("<input type='checkbox' class='check-box' checked='checked' value='" + item.RoleScanner + "' name='item[" + (RoleScanner) + "].RoleScanner' id='item[" + (RoleScanner) + "].RoleScanner' onchange='RoleChange(event)'><input name='item[" + (RoleScanner++) + "].RoleScanner' type='hidden' value='false' />") : ("<input type='checkbox' class='check-box' value='" + item.RoleScanner + "' name='item[" + (RoleScanner) + "].RoleScanner' id='item[" + (RoleScanner) + "].RoleScanner' onchange='RoleChange(event)'><input name='item[" + (RoleScanner++) + "].RoleScanner' type='hidden' value='false' />"))).Title("Scanner");
                                roleitem.Template(item => ((item.RoleUploader) ? ("<input type='checkbox' class='check-box' checked='checked' value='" + item.RoleUploader + "' name='item[" + (RoleUploader) + "].RoleUploader' id='item[" + (RoleUploader) + "].RoleUploader' onchange='RoleChange(event)'><input name='item[" + (RoleUploader++) + "].RoleUploader' type='hidden' value='false' />") : ("<input type='checkbox' class='check-box' value='" + item.RoleUploader + "' name='item[" + (RoleUploader) + "].RoleUploader' id='item[" + (RoleUploader) + "].RoleUploader' onchange='RoleChange(event)'><input name='item[" + (RoleUploader++) + "].RoleUploader' type='hidden' value='false' />"))).Title("Uploader");
                                roleitem.Template(item => ((item.RoleIndexer) ? ("<input type='checkbox' class='check-box' checked='checked' value='" + item.RoleIndexer + "' name='item[" + (RoleIndexer) + "].RoleIndexer' id='item[" + (RoleIndexer) + "].RoleIndexer' onchange='RoleChange(event)'><input name='item[" + (RoleIndexer++) + "].RoleIndexer' type='hidden' value='false' />") : ("<input type='checkbox' class='check-box' value='" + item.RoleIndexer + "' name='item[" + (RoleIndexer) + "].RoleIndexer' id='item[" + (RoleIndexer) + "].RoleIndexer' onchange='RoleChange(event)'><input name='item[" + (RoleIndexer++) + "].RoleIndexer' type='hidden' value='false' />"))).Title("Indexer");
                                roleitem.Template(item => ((item.RoleTemplateCreator) ? ("<input type='checkbox' class='check-box' checked='checked' value='" + item.RoleTemplateCreator + "' name='item[" + (RoleTemplateCreator) + "].RoleTemplateCreator' id='item[" + (RoleTemplateCreator) + "].RoleTemplateCreator' onchange='RoleChange(event)'><input name='item[" + (RoleTemplateCreator++) + "].RoleTemplateCreator' type='hidden' value='false' />") : ("<input type='checkbox' class='check-box' value='" + item.RoleTemplateCreator + "' name='item[" + (RoleTemplateCreator) + "].RoleTemplateCreator' id='item[" + (RoleTemplateCreator) + "].RoleTemplateCreator' onchange='RoleChange(event)'><input name='item[" + (RoleTemplateCreator++) + "].RoleTemplateCreator' type='hidden' value='false' />"))).Title("Template Creator");
                                roleitem.Template(item => ((item.RoleFormCreator) ? ("<input type='checkbox' class='check-box' checked='checked' value='" + item.RoleFormCreator + "' name='item[" + (RoleFormCreator) + "].RoleFormCreator' id='item[" + (RoleFormCreator) + "].RoleFormCreator' onchange='RoleChange(event)'><input name='item[" + (RoleFormCreator++) + "].RoleFormCreator' type='hidden' value='false' />") : ("<input type='checkbox' class='check-box' value='" + item.RoleFormCreator + "' name='item[" + (RoleFormCreator) + "].RoleFormCreator' id='item[" + (RoleFormCreator) + "].RoleFormCreator' onchange='RoleChange(event)'><input name='item[" + (RoleFormCreator++) + "].RoleFormCreator' type='hidden' value='false' />"))).Title("Form Creator");
                                roleitem.Template(item => ((item.RoleWorkflowActor) ? ("<input type='checkbox' class='check-box' checked='checked' value='" + item.RoleWorkflowActor + "' name='item[" + (RoleWorkflowActor) + "].RoleWorkflowActor' id='item[" + (RoleWorkflowActor) + "].RoleWorkflowActor' onchange='RoleChange(event)'><input name='item[" + (RoleWorkflowActor++) + "].RoleWorkflowActor' type='hidden' value='false' />") : ("<input type='checkbox' class='check-box' value='" + item.RoleWorkflowActor + "' name='item[" + (RoleWorkflowActor) + "].RoleWorkflowActor' id='item[" + (RoleWorkflowActor) + "].RoleWorkflowActor' onchange='RoleChange(event)'><input name='item[" + (RoleWorkflowActor++) + "].RoleWorkflowActor' type='hidden' value='false' />"))).Title("Workflow Actor");
                                roleitem.Template(item => ((item.RoleWorkflowCreator) ? ("<input type='checkbox' class='check-box' checked='checked' value='" + item.RoleWorkflowCreator + "' name='item[" + (RoleWorkflowCreator) + "].RoleWorkflowCreator' id='item[" + (RoleWorkflowCreator) + "].RoleWorkflowCreator' onchange='RoleChange(event)'><input name='item[" + (RoleWorkflowCreator++) + "].RoleWorkflowCreator' type='hidden' value='false' />") : ("<input type='checkbox' class='check-box' value='" + item.RoleWorkflowCreator + "' name='item[" + (RoleWorkflowCreator) + "].RoleWorkflowCreator' id='item[" + (RoleWorkflowCreator) + "].RoleWorkflowCreator' onchange='RoleChange(event)'><input name='item[" + (RoleWorkflowCreator++) + "].RoleWorkflowCreator' type='hidden' value='false' />"))).Title("Workflow Creator");
                                roleitem.Template(item => ((item.RoleCustom) ? ("<input type='checkbox' class='check-box' checked='checked' value='" + item.RoleCustom + "' name='item[" + (RoleCustom) + "].RoleCustom' id='item[" + (RoleCustom) + "].RoleCustom' onchange='RoleChange(event)'><input name='item[" + (RoleCustom++) + "].RoleCustom' type='hidden' value='false' />") : ("<input type='checkbox' class='check-box' value='" + item.RoleCustom + "' name='item[" + (RoleCustom) + "].RoleCustom' id='item[" + (RoleCustom) + "].RoleCustom' onchange='RoleChange(event)'><input name='item[" + (RoleCustom++) + "].RoleCustom' type='hidden' value='false' />"))).Title("Custom");
                            }));

                            columns.Template(item => (
                                (
                                     "<a href='" + @Url.Action("Index", "TenantUser", new { id = item.Id }) + "'><img src='/Images/EditTemplate.jpg' title='Edit' style='height:20px;width:20px' id='" + item.Id + "'  ></a>"
                                ).ToString())).Title("Actions");
                        }
                        )
                        .Resizable(resize => resize.Columns(true))
                        .Filterable()
                        .Sortable()
                        .HtmlAttributes(new { style = "overflow:scroll; max-height:400px" })
        )
    </div>
}*@

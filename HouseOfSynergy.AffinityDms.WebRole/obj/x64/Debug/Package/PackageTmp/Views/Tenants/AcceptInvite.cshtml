@model HouseOfSynergy.AffinityDms.WebRole.Models.Tenants.UserViewModel

@{
    ViewBag.Title = "Cobox - Accept Invite";
    Layout = "~/Views/Shared/_LayoutTenantPublic.cshtml";
}

@{

    var errormessage = (ViewBag.ErrorMessage != null) ? (ViewBag.ErrorMessage) : (string.Empty);
    string displayError = "none";
    if (!(string.IsNullOrEmpty(errormessage)))
    {
        displayError = "";
    }
    <div id="AcceptInviteErrorMessage" style="display:@displayError">
        <div class="alert alert-danger" style="overflow:auto">
            <div style="float:right;" class="col-sm-12 col-md-12 col-lg-12"><b style="float:right;cursor:pointer" data-hideMessageDiv="#AcceptInviteErrorMessage" id="hideErrorMessageDiv">X</b></div>
            <div style="word-wrap: break-word;margin-right:30px" id="AcceptInviteErrorMessageText">@errormessage</div>
        </div>
    </div>
}
<script type="text/javascript">
    $(document).on("ready", function () {
        if ($("#AcceptInviteErrorMessage") != null) {
            if ($("#AcceptInviteErrorMessageText").text() != null || $("#AcceptInviteErrorMessageText").text() != "") {
                setTimeout(function () {
                    $('#AcceptInviteErrorMessage').fadeOut('fast');
                    $("#AcceptInviteErrorMessage").css("display", "none");
                    $("#AcceptInviteErrorMessageText").text("");
                }, AffinityDms.Settings.Constants.PopUpNotificationTimer);
            }
        }
    });
</script>



@using (Html.BeginForm("AcceptInvite", "TenantSignIn", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <input type="hidden" value="@this.Model.Key" name="Key" id="Key">
    <input type="hidden" value="@this.Model.Domain" name="Domain" id="Domain">
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="control-label col-md-2" for="Domain">Domain</label>
            <div class="col-md-10">
                <input class="form-control text-box single-line" type="text" value="@this.Model.Domain" disabled="disabled">
                <span class="field-validation-valid text-danger" data-valmsg-for="Domain" data-valmsg-replace="true"></span>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Email</label>
            <div class="col-md-10">
                <input type="email" placeholder="Email" value="@this.Model.Email" class="form-control" style="margin-bottom:10px" name="Email" >
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">Current Password</label>
            <div class="col-md-10">
                <input type="password" placeholder="Current Password" value="@this.Model.Password" class="form-control" style="margin-bottom:10px" name="currentPassword">
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NameGiven,"First Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameGiven, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameGiven, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NameFamily, "Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameFamily, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameFamily, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, "New Username",htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Password, "New Password", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-md-2">Confirm New Password</label>
            <div class="col-md-10">
                <input type="password" placeholder="Confirm Password" class="form-control" style="margin-bottom:10px" name="confirmPassword">
            </div>
        </div>

       
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@

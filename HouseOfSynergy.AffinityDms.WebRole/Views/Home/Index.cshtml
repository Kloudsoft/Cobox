
@using HouseOfSynergy.AffinityDms.ResourceProvider

@{
	this.Layout = "~/Views/Shared/_Layout.cshtml";
	this.ViewBag.Title = ResourceManagement.DesktopClient_ProductName + " - Home";
}

<style type="text/css">
	#DivDocument
	{
		position: absolute;
		padding: 10px 10px 10px 10px;
		left: 10px;
		top: 100px;
		width: 400px;
		height: 400px;
		border: 1px solid orange;
		overflow: hidden;
		-webkit-transform: translate3d(0, 0, 0);
		background: black url(http://s.cdpn.io/16327/texture_bg.jpg) no-repeat 50% 0px;
	}
	#DivLoremIpsum div
	{
		color: white;
		-webkit-font-smoothing: antialiased;
		-moz-font-smoothing: antialiased;
	}
</style>

<h1>Affinity DMS</h1>

<div id="DivDocument">
	<div id="DivLoremIpsum">
		<b><i>What is Lorem Ipsum?</i></b>
		<br />
		Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
		<br /><br />
		<b><i>Where can I get some?</i></b>
		<br />
		There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.
		<br /><br />
	</div>
</div>

<div id="DivTagList">
	<ul style="display: block; width: 200px; float: left">
		<li><a href="#fake01" data-weight="100" onclick="javascript: return (false);">Fake Link 01</a></li>
		<li><a href="#fake02" data-weight="100" onclick="javascript: return (false);">Fake Link 02</a></li>
		<li><a href="#fake03" data-weight="100" onclick="javascript: return (false);">Fake Link 03</a></li>
		<li><a href="#fake04" data-weight="100" onclick="javascript: return (false);">Fake Link 04</a></li>
		<li><a href="#fake05" data-weight="100" onclick="javascript: return (false);">Fake Link 05</a></li>
		<li><a href="#fake06" data-weight="100" onclick="javascript: return (false);">Fake Link 06</a></li>
		<li><a href="#fake07" data-weight="100" onclick="javascript: return (false);">Fake Link 07</a></li>
		<li><a href="#fake08" data-weight="100" onclick="javascript: return (false);">Fake Link 08</a></li>
		<li><a href="#fake09" data-weight="100" onclick="javascript: return (false);">Fake Link 09</a></li>
		<li><a href="#fake10" data-weight="100" onclick="javascript: return (false);">Tagging</a></li>
		<li><a href="#fake11" data-weight="100" onclick="javascript: return (false);">Invoices</a></li>
		<li><a href="#fake12" data-weight="100" onclick="javascript: return (false);">Documents</a></li>
		<li><a href="#fake13" data-weight="100" onclick="javascript: return (false);">Templates</a></li>
		<li><a href="#fake14" data-weight="100" onclick="javascript: return (false);">Forms</a></li>
		<li><a href="#fake15" data-weight="100" onclick="javascript: return (false);">Images</a></li>
		<li><a href="#fake16" data-weight="100" onclick="javascript: return (false);">Purchase Orders</a></li>
		<li><a href="#fake17" data-weight="100" onclick="javascript: return (false);">Classification</a></li>
		<li><a href="#fake18" data-weight="100" onclick="javascript: return (false);">Correlation</a></li>
		<li><a href="#fake19" data-weight="100" onclick="javascript: return (false);">Taxonomy</a></li>
		<li><a href="#fake20" data-weight="100" onclick="javascript: return (false);">Indexing</a></li>
	</ul>
</div>

<canvas id="CanvasTagCloud" width="600" height="400" style="width: 600px; height: 400px; margin-left: 420px; background-color: lightgray;"></canvas>

<script type="text/javascript">

	var quote = document.getElementById("DivLoremIpsum"),
    mySplitText = new SplitText(quote, { type: "words" }),
    tl = new TimelineMax({ delay: 1, repeat: 10, repeatDelay: 1, onComplete: function () { tl.pause("explode") } }),
    numWords = mySplitText.words.length;

	//prep the quote div for 3D goodness
	TweenLite.set(quote, { transformPerspective: 600, perspective: 300, transformStyle: "preserve-3d", autoAlpha: 1 });

	//intro sequence
	for (var i = 0; i < numWords; i++)
	{
		tl.from(mySplitText.words[i], 1.5, { z: randomNumber(-500, 300), opacity: 0, rotationY: randomNumber(-40, 40) }, Math.random() * 1.5);
	}
	tl.from(quote, tl.duration(), { rotationY: 180, transformOrigin: "50% 75% 200", ease: Power2.easeOut }, 0);

	//randomly change z of each word, map opacity to z depth and rotate quote on y axis
	for (var i = 0; i < numWords; i++)
	{
		var z = randomNumber(-50, 50)
		tl.to(mySplitText.words[i], 0.5, { z: z, opacity: rangeToPercent(z, -50, 50) }, "pulse");
	}
	tl.to(quote, 0.5, { rotationY: 20 }, "pulse");

	//randomly change z of each word, map opacity to z depth and rotate quote on xy axis
	for (var i = 0; i < numWords; i++)
	{
		var z = randomNumber(-100, 100)
		tl.to(mySplitText.words[i], 0.5, { z: z, opacity: rangeToPercent(z, -100, 100) }, "pulse2");
	}
	tl.to(quote, 0.5, { rotationX: -35, rotationY: 0 }, "pulse2");

	//reset the quote to normal position
	tl.to(mySplitText.words, 0.5, { z: 0, opacity: 1 }, "reset")
	tl.to(quote, 0.5, { rotationY: 0, rotationX: 0 }, "reset");

	//add explode label 2 seconds after reset animation is done
	tl.add("explode", "+=2")
	//add explode effect
	for (var i = 0; i < numWords; i++)
	{
		tl.to(mySplitText.words[i], 1, { z: randomNumber(100, 500), opacity: 0, rotation: randomNumber(360, 720), rotationX: randomNumber(-360, 360), rotationY: randomNumber(-360, 360) }, "explode+=" + Math.random() * 0.2);
	}

	//some helper functions
	function randomNumber(min, max)
	{
		return Math.floor(Math.random() * (1 + max - min) + min);
	}

	function rangeToPercent(number, min, max)
	{
		return ((number - min) / (max - min));
	}




	var elements = document.getElementsByTagName("a");
	for (var i = 0; i < elements.length; i++)
	{
		var element = elements.item(i);

		if (element.attributes.getNamedItem("data-weight") != null)
		{
			if (element.attributes.getNamedItem("data-weight").value == "100")
			{
				element.attributes.getNamedItem("data-weight").value = Math.round(Math.random() * 100);
			}
		}
	}

	var options =
	{
		clickToFront: 500,
		depth: 0.99,
		weight: true,
		weightFrom: "data-weight",
		weightMode: "both",
		weightSize: 1.0,
		//weightSizeMin: "8pt",
		//weightSizeMax: "40pt",
		weightGradient:
		{
			0: '#f00', // red
			0.33: '#ff0', // yellow
			0.66: '#0f0', // green
			1: '#00f'  // blue
		},
	};

	try
	{
		TagCanvas.Start("CanvasTagCloud", "DivTagList", options);
	}
	catch (e)
	{
		alert(e.message);
	}

</script>
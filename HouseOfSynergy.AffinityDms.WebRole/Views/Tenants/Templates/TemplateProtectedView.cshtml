@model HouseOfSynergy.AffinityDms.WebRole.Models.Tenants.TemplateElementListAndElementDetailListViewModel

@{
    ViewBag.Title = "Template Design";
    this.Layout = "~/Views/Shared/_LayoutTenantThemePrivate.cshtml";
}

<h2>Template Design</h2>

@Scripts.Render("~/bundles/TypeScript")

<script type="text/javascript">
    var designer = new AffinityDms.Entities.FormDesigner();
</script>
<div id="DivBody" style="width:100%;display: inline-flex; height:550px">

    <div id="DivToolBox" style="display: inline-block;  left: 1%;margin-left: 30px;top: 5%; width: 6%; height: 100%; background-color: steelblue;float:left">
        <div>
            <img id="addfitdivid" src="~/Images/Fit-to-Screen.png" title="Fit to screen" style="width:30px;height: 30px;display: block;margin-left: auto;    margin-top: 10px;margin-right: auto" onclick="javascript: designer.FitDiv(event)">
            <img id="addzoomoutbtndivid" src="~/Images/Zoom-Out.png" title="Zoom Out" style="width:30px;height: 30px;display: block;margin-left: auto;    margin-top: 10px;margin-right: auto" onclick="javascript: designer.ZoomOutDiv(event)">
            <img id="addzoominbtndivid" src="~/Images/Zoom-In.png" title="Zoom In" style="width:30px;height: 30px;display: block;margin-left: auto;    margin-top: 10px;margin-right: auto" onclick="javascript: designer.ZoomInDiv(event)">
        </div>
        <input type="hidden" id="colcounter" value="0" />
        <input type="hidden" id="divcounter" value="0" />
        <input type="hidden" id="Hidfind" value="0" />
        <input type="hidden" id="CurTarget" value="0" />
        <input type="hidden" id="TempType" value="Template">
        <input type="hidden" id="ImageMove" value="false">
    </div>

    @{

        if (ViewBag.ModelTemplateImage != null)
        {
            var img = (System.Drawing.Image)ViewBag.ModelTemplateImage;
            byte[] imgbytearray = ViewBag.ModelTemplateImageByteArray;
            string imageBase64Data = Convert.ToBase64String(imgbytearray);
            string imageDataURL = string.Format("data:image/png;base64,{0}", imageBase64Data);
            if (img.Size.Width > 0)
            {
                <div id="MainContainer" class="col-md-8" style="overflow: hidden;height: 750px;background-repeat: no-repeat;background-size: cover;position: relative !important;display: inline-block;">
                    <div id="ElementsContainer" style="overflow:visible;width:100%;height: 100%;zoom:1;transform:scale(1);transform-origin:left top">
                        <div id="DivPage" style="z-index:500">
                        </div>
                        <img src="@imageDataURL" draggable="false" id="TemplateImage" width="@img.Size.Width.ToString()px" height="@img.Size.Height.ToString()px" style="z-index:3;position: relative;" ondragover="javascript: designer.OnDragOver(event);" ondrop="javascript: designer.OnDrop(event);" onmousewheel="javascript: designer.OnDivMouseWheel(event)" onmousedown="javascript: designer.OnDivImageMouseDown(event)" />
                    </div>
                </div>
            }
        }
    }

    <div id="DivPropertiesBox" style="display:inline-block;margin-left: 30px;top:5%;width:200px; height:100%; background-color: steelblue;float:right;z-index:1500">
        <div style="margin-left: 7px; margin-top: 10px;margin-right: auto">
            <div id="addnamedivid" style="display: none;margin: 10px;">
                <label class="PropertyLabel">Name:</label>

                <input type="text" placeholder="Name" id="addnameid" class="PropertyElement" onkeyup="javascript: designer.AddName(event)">
            </div>
            <div id="adddescriptiondivid" style="display: none;margin: 10px;">
                <label class="PropertyLabel">Description:</label>
                <input type="text" placeholder="Description" id="adddescriptionid" class="PropertyElement" onkeyup="javascript: designer.AddDescription(event)">
            </div>
            <div id="addtextdivid" style="display: none;margin: 10px;">
                <label class="PropertyLabel">Text:</label>
                <input type="text" placeholder="Text" id="addtextid" class="PropertyElement" onkeyup="javascript: designer.AddText(event)">
            </div>
            <div id="fileuploader" style="display: none;margin: 10px;">

                <label class="PropertyLabel">Choose a File:</label>
                <input type="file" name="FileName" id="fileChooser" style="width: 100%;float: right;margin-right: 10px;" onchange="javascript: designer.OnFileSelected(event)">
            </div>
            <div id="addxdivid" style="display: none;margin: 10px;">
                <label class="PropertyLabel">X-Axis:</label>
                <input type="number" placeholder="X-Axis" id="addxid" class="PropertyElement" onchange="javascript: designer.AddX(event)" onkeyup="javascript: designer.AddX(event)">
            </div>
            <div id="addydivid" style="display: none;margin: 10px;">
                <label class="PropertyLabel">Y-Axis:</label>
                <input type="number" placeholder="Y-Axis" id="addyid" class="PropertyElement" onchange="javascript: designer.AddY(event)" onkeyup="javascript: designer.AddY(event)">
            </div>
            <div id="addx2divid" style="display: none;margin: 10px;">
                <label class="PropertyLabel">X2-Axis:</label>
                <input type="number" placeholder="X2-Axis" id="addx2id" class="PropertyElement" onchange="javascript: designer.AddColumnToOCRTableZone(event)" onkeyup="javascript: designer.AddColumnToOCRTableZone(event)">
            </div>
            <div id="addy2divid" style="display: none;margin: 10px;">
                <label class="PropertyLabel">Y2-Axis:</label>
                <input type="number" placeholder="Y2-Axis" id="addy2id" class="PropertyElement" onchange="javascript: designer.AddColumnToOCRTableZone(event)" onkeyup="javascript: designer.AddColumnToOCRTableZone(event)">
            </div>
            <div id="addmaxchardivid" style="display: none;margin: 10px;">
                <label class="PropertyLabel">Max Length:</label>
                <input type="number" placeholder="Max Character" id="addmaxcharid" class="PropertyElement" onchange="javascript: designer.AddMaxChar(event)" onkeyup="javascript: designer.AddMaxChar(event)">
            </div>
            <div id="addfontsizedivid" style="display: none;margin: 10px;">
                <label class="PropertyLabel">Font Size:</label>
                <input type="number" placeholder="FontSize" id="addfontsizeid" class="PropertyElement" onkeyup="javascript: designer.AddFontSize(event)" onchange="javascript: designer.AddFontSize(event)">
            </div>
            <div id="addwidthdivid" style="display: none;margin: 10px;">
                <label class="PropertyLabel">Width:</label>
                <input type="number" placeholder="Width" id="addwidthid" class="PropertyElement" onkeyup="javascript: designer.AddWidth(event)" onchange="javascript: designer.AddWidth(event)">
            </div>
            <div id="addheightdivid" style="display: none;margin: 10px;">
                <label class="PropertyLabel">Height:</label>
                <input type="number" placeholder="Height" id="addheightid" class="PropertyElement" onkeyup="javascript: designer.AddHeight(event)" onchange="javascript: designer.AddHeight(event)">
            </div>
            <div id="addelementindextypedivid" style="display: none;margin: 10px;">
                <label class="PropertyLabel">  <input type="checkbox" id="addelementindextypeid" onchange="javascript: designer.AddIndexValueType(event)"> Index Type:</label>
            </div>
            <div id="addvaluedivid" style="display: none;margin: 10px;">
                <label class="PropertyLabel">Value:</label>
                <input type="text" placeholder="Value" id="addvalueid" class="PropertyElement" onkeyup="javascript: designer.AddValue(event)">
            </div>
            <div id="addcolumndivid" style="display: none;margin: 10px;">
            </div>
            <div id="adddeletecolumnbtndivid" style="display: none;margin: 10px;">
            </div>
            <div id="adddeletebtndivid" style="display: none;margin: 10px;">
              
            </div>
        </div>
    </div>
</div>

@if (Model != null)
{
    <script type="text/javascript">
        @{
            System.Web.Script.Serialization.JavaScriptSerializer serialize = new System.Web.Script.Serialization.JavaScriptSerializer();
            serialize.MaxJsonLength = int.MaxValue;
            var serializeddata = serialize.Serialize(Model);
        }
        document.onload = designer.editTemplateDesign('@Html.Raw(serializeddata)');

    </script>
    }
